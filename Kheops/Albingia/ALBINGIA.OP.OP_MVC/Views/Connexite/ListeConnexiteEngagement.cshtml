@using ALBINGIA.OP.OP_MVC.Models.ModelesConnexite
@model ModeleEngagement
@Html.HiddenNoName("NumConnexiteEngagement", Model.NumConnexiteEngagement)
@Html.Hidden("observation", Model.ObservationEngagement, new { id = "ObservationEngagement", albcontext = "commentairesEngagement" })
@Html.Hidden("commentairesEngagement", Model.CodeObservationEngagement, new { id = "CodeObservationEngagement", albcontext = "commentairesEngagement" })
@Html.HiddenNoName("IdeConnexiteEngagement", Model.IdeConnexiteEngagement)
@Html.Hidden("ExistEngCnx", Model.ExistEngCnx.ToString())
@Html.HiddenNoName("typAffichage", (Model.TypeAffichage))


<div id="divConnexe">
    <div class="ClearBoth"></div>
    @if (!string.IsNullOrEmpty(Model.TypeAffichage)) {
        <h3>Liste des connexités</h3>
    }

    @if (Model.ListeDeTraites.Any()) {
        <div class="FloatLeft" style="padding-top: 10px; padding-right: 15px; padding-left: 364px;">
            <label class="block">Engagement Connexe</label>
        </div>

        <div class="divTopCnxEnCours">
            <table id="tbl1Body">
                <tr>
                    @foreach (var c in Model.ListeDeTraites) {
                        long valeurEngagement = 0;
                        var periodeUtilisee = Model.PeriodesDeConnexites.FirstOrDefault(i => i.IsUtilisee);
                        if (periodeUtilisee != null) {
                            var traitee = periodeUtilisee.ListeDeTraites.FirstOrDefault(i => i.CodeEngagement == c);
                            if (traitee != null) {
                                valeurEngagement = traitee.ValeurEngagement;
                            }

                        }

                        <td class="widthCommun">
                            <input type="text" albMask="decimal" value="@valeurEngagement" class="readonly  input-traite" readonly="readOnly" style="text-align:right;" />
                        </td>
                    }

                </tr>
            </table>
        </div>
    }
    else {
        <div class="ClearBoth"></div>
    }

    <div id="divConnexeBody">

        <div class="divTopCnxLeftHeader">
            <table id="tblHeaderEngagement">
                <tr>
                    <th class="col_Contrat tablePersoHead">
                        Contrat
                    </th>
                    <th class="col_Etat tablePersoHead">
                        Etat
                    </th>
                    <th class="col_Situation tablePersoHead">
                        Situation
                    </th>
                    <th class="col_Branche tablePersoHead">
                        Branche
                    </th>
                    <th class="col_Cible tablePersoHead">Cible</th>
                    <th class="col_Preneur tablePersoHead">Preneur</th>
                </tr>
            </table>
        </div>

        <div class="divTopCnxCenterHeader">
            <table id="tblHeaderEngagement2">
                <tr>
                    @foreach (var c in Model.ListeDeTraites) {
                        <th class=" widthCommunCol tablePersoHead">@c</th>
                    }
                </tr>
            </table>
        </div>

        <div class="divTopCnxRightHeader">
            <table id="tblBtnHeader">
                <tr>
                    <th>
                        @if (!string.IsNullOrEmpty(Model.TypeAffichage)) {
                            if (Model.IsConnexiteReadOnly) {
                                <div class="FloatRight paddingRight">
                                    <img class="marginRightAjouter" src='@Url.Content("/Content/Images/plusajouter_gris1616.jpg")' alt="Ajouter" />
                                </div>
                            }
                            else {
                                <div class="FloatRight paddingRight">
                                    <img class="CursorPointer Action marginRightAjouter" src='@Url.Content("/Content/Images/plusajouter1616.png")' name="btnAjouter" alt="Ajouter" title="Ajouter une connexité" id="AjouterEngagement" />
                                </div>
                            }
                        }
                    </th>
                </tr>
            </table>
        </div>

        <div class="divTopCnxLeft">
            <table id="tblEngagementBody" class="table-alternate">
                @foreach (var ligne in (Model.ConnexitesEngagement)) {
                    string textColor = (ligne.Situation == "W" || ligne.Situation == "N") ? "textLightGrey" :
                        (ligne.Situation != "X" && (ligne.Etat == "V" || ligne.Etat == "R")) ? "textGreen" :
                        (ligne.Situation != "X" && ligne.Etat != "V") ? "textBlack" :
                        (ligne.Situation == "X" && ligne.Etat == "V") ? "textRed" :
                        (ligne.Situation == "X" && ligne.Etat != "V") ? "textOrange" :
                        "textBlack";

                    <tr id='@("tr_" + @ligne.GuidId)'>
                        <td name="linkWinOpen" albparam="@(ligne.Contrat.Replace('-', '_'))_PReadOnly" class="col_Contrat_Body TxtLink CursorPointer" title="@ligne.DescriptionContrat" albcontext="eng">
                            @ligne.Contrat
                        </td>
                        <td class="col_Etat_Body" title="@ligne.Etat">
                            @ligne.Etat
                        </td>
                        <td class="col_Sit_Body" title="@ligne.Situation">
                            @ligne.Situation
                        </td>
                        <td class="col_Branche_Body" title="@ligne.LibelleBranche">
                            @ligne.Branche
                        </td>
                        <td class="col_Cible_Body" title='@(ligne.Cible + " - " + ligne.LibelleCible)'>
                            @ligne.Cible
                        </td>
                        <td class="col_Preneur_Body" title="@ligne.PreneurInfo">
                            @ligne.Preneur
                        </td>
                    </tr>
                }
            </table>
        </div>

        <div class="divTopCnxCenter">
            <table id="tblEngagementBody2" class="table-alternate">
                @foreach (var ligne in Model.ConnexitesEngagement) {

                    <tr id='@("bd_" + @ligne.GuidId)'>
                        @foreach (var c in Model.ListeDeTraites) {
                            <td class="widthCommun" style="text-align:right">
                                @{
                                    var traite = ligne.LstEngagmentTraite.FirstOrDefault(i => i.CodeEngagement == c);
                                    var value = default(long);
                                    if (traite != null) {
                                        value = traite.ValeurEngagement;
                                    }
                                }
                                <span albMask="decimal">@value</span>
                            </td>
                        }
                    </tr>

                }
            </table>
        </div>

        <div class="divTopCnxRight">
            <table id="tblBodyBtn" class="table-alternate">
                @if (!string.IsNullOrEmpty(Model.TypeAffichage)) {
                    foreach (var ligne in Model.ConnexitesEngagement) {
                        <tr id='@("btn_" + @ligne.GuidId)'>
                            <td class="padding0">
                                @if (Model.ContratTraite != ligne.Contrat && !Model.IsConnexiteReadOnly) {
                                    <img src='@Url.Content("~/Content/Images/poubelle1616.png")' id='@("suppr_" + @ligne.GuidId)' alt="Supprimer" title="Supprimer" class="Action marginLeftSuppr CursorPointer btn-action" name="btnSupprimer" albcontext="eng" />
                                }
                                <img alt="" src='@(Url.Content("/Content/Images/details1616.png"))' id='@("Editer_" + @ligne.GuidId)' class="Action marginLeftSuppr CursorPointer btn-action"
                                     @(Model.ContratTraite == ligne.Contrat ? "style=\"padding-left:31px;\"" : string.Empty) name="btndetails" />
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>


        @if (!string.IsNullOrEmpty(Model.TypeAffichage)) {
            <div id="divPeriodesConnexites">
                @Html.Partial("~/Views/Connexite/ListePeriodeConnexiteEngagemenet.cshtml", Model)
            </div>
        }

    </div>
</div>
