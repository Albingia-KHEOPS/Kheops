CREATE FUNCTION ZALBINKHEO.F_GTIESORTIE ( 
	P_CODEOFFRE VARCHAR(9) , 
	P_VERSION INTEGER , 
	P_TYPE VARCHAR(1) , 
	P_CODEFORMULE INTEGER , 
	P_CODEOPTION INTEGER , 
	P_IDGAR INTEGER ) 
	RETURNS VARCHAR(12)   
	LANGUAGE SQL 
	SPECIFIC ZALBINKHEO.F_GTIESORTIE 
	NOT DETERMINISTIC 
	READS SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *NONE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = *NONE , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	BEGIN 
  
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	DECLARE V_COUNTRSQ INTEGER DEFAULT 0 ; 
	DECLARE V_COUNTOBJ INTEGER DEFAULT 0 ; 
	DECLARE V_NATURE CHAR ( 1 ) DEFAULT '' ; 
	 
	DECLARE P_DATEMIN VARCHAR ( 12 ) DEFAULT '' ; 
	DECLARE V_DATEMIN NUMERIC ( 12 , 0 ) DEFAULT 0 ; 
	DECLARE V_DATEMINTEMP NUMERIC ( 12 , 0 ) DEFAULT 0 ; 
	DECLARE V_DATEMINHEURE INTEGER DEFAULT 0 ; 
					 
	SET V_DATEMIN = 0 ; 
	SET V_DATEMINHEURE = 0 ; 
	SET V_DATEMINTEMP = 0 ; 
  
		 --DÉTERMINATION SI LA GARANTIE EST ACQUISE OU EXCLUE POUR CERTAINS OBJETS 
	SELECT COUNT ( * ) INTO V_COUNT FROM ZALBINKHEO . KPGARAP WHERE KDFKDEID = P_IDGAR ; 
	 
	 --DÉTERMINATION SI LA FORMULE S'APPLIQUE POUR LE RISQUE OU UNE LISTE D'OBJETS 
	SELECT COUNT ( * ) INTO V_COUNTRSQ FROM ZALBINKHEO . KPOPTAPW WHERE TRIM ( KDDIPB ) = TRIM ( P_CODEOFFRE ) AND KDDALX = P_VERSION AND KDDTYP = P_TYPE AND KDDFOR = P_CODEFORMULE AND KDDOPT = P_CODEOPTION AND KDDPERI = 'RQ' ; 
	SELECT COUNT ( * ) INTO V_COUNTOBJ FROM ZALBINKHEO . KPOPTAPW WHERE TRIM ( KDDIPB ) = TRIM ( P_CODEOFFRE ) AND KDDALX = P_VERSION AND KDDTYP = P_TYPE AND KDDFOR = P_CODEFORMULE AND KDDOPT = P_CODEOPTION AND KDDPERI = 'OB' ; 
	 
	IF ( V_COUNT > 0 ) THEN  --SI PORTÉE DE GARANTIE 
		SELECT KDFGAN INTO V_NATURE FROM ZALBINKHEO . KPGARAP WHERE KDFKDEID = P_IDGAR FETCH FIRST 1 ROWS ONLY ; 
		 
		IF ( V_NATURE = 'A' ) THEN  -- DÉTERMINATION DE LA PLAGE DES OBJETS 
			SELECT IFNULL ( MIN ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) , 0 ) INTO V_DATEMIN 
			FROM ZALBINKHEO . YPRTOBJ 
			INNER JOIN ZALBINKHEO . KPGARAP ON JGOBJ = KDFOBJ AND JGRSQ = KDFRSQ AND KDFIPB = JGIPB AND KDFALX = JGALX 
			WHERE KDFKDEID = P_IDGAR ;	 
  
		END IF ; 
				 
		IF ( V_NATURE = 'E' ) THEN  --DÉTERMINATION DE LA PLAGE DES OBJETS INCLUS 
			IF ( V_COUNTRSQ > 0 ) THEN 
			 
				SELECT IFNULL ( MIN ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) , 0 ) INTO V_DATEMIN 
				FROM ZALBINKHEO . YPRTOBJ Y WHERE TRIM ( JGIPB ) = TRIM ( P_CODEOFFRE ) AND JGALX = P_VERSION AND NOT EXISTS ( SELECT * FROM ZALBINKHEO . KPGARAP G WHERE G . KDFKDEID = P_IDGAR 
				AND Y . JGIPB = G . KDFIPB AND Y . JGALX = G . KDFALX AND Y . JGRSQ = G . KDFRSQ AND Y . JGOBJ = G . KDFOBJ ) ; 
						 
			END IF ; 
			IF ( V_COUNTOBJ > 0 ) THEN 
			 
				SELECT IFNULL ( MIN ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) , 0 ) INTO V_DATEMIN 
				FROM ZALBINKHEO . YPRTOBJ Y 
					INNER JOIN ZALBINKHEO . KPOPTAPW O ON Y . JGIPB = O . KDDIPB AND Y . JGALX = O . KDDALX AND Y . JGRSQ = O . KDDRSQ AND Y . JGOBJ = O . KDDOBJ 
					INNER JOIN ZALBINKHEO . KPOPT OP ON OP . KDBID = O . KDDKDBID 
					INNER JOIN ZALBINKHEO . KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
					INNER JOIN ZALBINKHEO . KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
				WHERE GAR . KDEID = P_IDGAR 
				AND NOT EXISTS ( SELECT * FROM ZALBINKHEO . KPGARAP G WHERE G . KDFKDEID = GAR . KDEID 
								AND Y . JGIPB = G . KDFIPB AND Y . JGALX = G . KDFALX AND Y . JGRSQ = G . KDFRSQ AND Y . JGOBJ = G . KDFOBJ ) ; 
			 
			END IF ; 
			 
		END IF ; 
	 
	ELSE  -- SI PAS DE PORTÉE DE GARANTIE 
		IF ( V_COUNTRSQ > 0 ) THEN 
			SELECT IFNULL ( MIN ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) , 0 ) INTO V_DATEMIN 
			FROM ZALBINKHEO . YPRTOBJ Y 
				INNER JOIN ZALBINKHEO . KPOPTAPW O ON Y . JGIPB = O . KDDIPB AND Y . JGALX = O . KDDALX AND Y . JGRSQ = O . KDDRSQ 
				INNER JOIN ZALBINKHEO . KPOPT OP ON OP . KDBID = O . KDDKDBID 
				INNER JOIN ZALBINKHEO . KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
				INNER JOIN ZALBINKHEO . KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
			WHERE GAR . KDEID = P_IDGAR ; 
			 
		END IF ; 
		IF ( V_COUNTOBJ > 0 ) THEN 
			SELECT IFNULL ( MIN ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) , 0 ) INTO V_DATEMIN 
			FROM ZALBINKHEO . YPRTOBJ Y 
				INNER JOIN ZALBINKHEO . KPOPTAPW O ON Y . JGIPB = O . KDDIPB AND Y . JGALX = O . KDDALX AND Y . JGRSQ = O . KDDRSQ AND Y . JGOBJ = O . KDDOBJ 
				INNER JOIN ZALBINKHEO . KPOPT OP ON OP . KDBID = O . KDDKDBID 
				INNER JOIN ZALBINKHEO . KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
				INNER JOIN ZALBINKHEO . KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
			WHERE GAR . KDEID = P_IDGAR ; 
  
		END IF ; 
	END IF ; 
	 
	IF ( V_DATEMIN = 0 ) THEN 
	 
		SELECT IFNULL ( MIN ( JEVDA * 100000000 + JEVDM * 1000000 + JEVDJ * 10000 + JEVDH ) , 0 ) INTO V_DATEMINTEMP 
		FROM ZALBINKHEO . YPRTRSQ Y 
			INNER JOIN ZALBINKHEO . KPOPTAPW O ON Y . JEIPB = O . KDDIPB AND Y . JEALX = O . KDDALX AND Y . JERSQ = O . KDDRSQ 
			INNER JOIN ZALBINKHEO . KPOPT OP ON OP . KDBID = O . KDDKDBID 
			INNER JOIN ZALBINKHEO . KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
			INNER JOIN ZALBINKHEO . KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
		WHERE GAR . KDEID = P_IDGAR ; 
		 
		IF ( V_DATEMIN = 0 AND V_DATEMINTEMP <> 0 ) THEN 
			SET V_DATEMIN = V_DATEMINTEMP ; 
		END IF ; 
	END IF ; 
  
	IF ( V_DATEMIN = 0 ) THEN 
		 
		SELECT IFNULL ( PBEFA * 100000000 + PBEFM * 1000000 + PBEFJ * 10000 + PBEFH , 0 ) INTO V_DATEMINTEMP 
		FROM ZALBINKHEO . YPOBASE 
		WHERE TRIM ( PBIPB ) = TRIM ( P_CODEOFFRE ) AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
	 
		IF ( V_DATEMIN = 0 AND V_DATEMINTEMP <> 0 ) THEN 
			SET V_DATEMIN = V_DATEMINTEMP ; 
		END IF ; 
	 
	END IF ; 
  
	SET P_DATEMIN = CAST ( V_DATEMIN AS VARCHAR ( 12 ) ) ; 
	RETURN P_DATEMIN ; 
END  ; 
  
SET PATH "QSYS","QSYS2","SYSPROC","SYSIBMADM","YALBIN" ; 
  
