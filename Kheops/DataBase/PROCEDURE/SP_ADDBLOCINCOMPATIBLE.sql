CREATE PROCEDURE SP_ADDBLOCINCOMPATIBLE ( 
	IN P_ID_ASSOCIATION NUMERIC(15, 0) , 
	IN P_BLOC_TRAITE NUMERIC(15, 0) , 
	IN P_BLOC_ID NUMERIC(15, 0) , 
	IN P_TYPE_RELATION CHAR(1) , 
	IN P_MODE CHAR(10) , 
	IN P_USER CHAR(10) , 
	IN P_DATE NUMERIC(8, 0) , 
	IN P_HEURE NUMERIC(6, 0) , 
	OUT P_ERREUR CHAR(256) ) 
	LANGUAGE SQL 
	SPECIFIC SP_ADDBLOCINCOMPATIBLE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
DECLARE V_KGJID_REF NUMERIC ( 15 ) DEFAULT 0 ; 
DECLARE V_BLOC_TRAITE_CODE CHAR ( 10 ) ; 
DECLARE V_BLOC_ID_CODE CHAR ( 10 ) ; 
DECLARE V_COUNT INTEGER DEFAULT 0 ; 
DECLARE V_OLD_BLOC_ID NUMERIC ( 15 ) DEFAULT 0 ; 
DECLARE V_BLOC_TODELETE NUMERIC ( 15 ) DEFAULT 0 ; 
  
IF ( P_MODE = 'Insert' ) THEN 
  
SELECT COUNT ( * ) INTO V_COUNT FROM KBLOREL 
WHERE KGJIDBLO1 = P_BLOC_TRAITE AND KGJIDBLO2 = P_BLOC_ID AND KGJREL = P_TYPE_RELATION ; 
  
IF ( V_COUNT = 0 ) THEN 
  
CALL SP_NCHRONO ( 'KGJID' , V_KGJID_REF ) ; 
  
SELECT KAEBLOC INTO V_BLOC_TRAITE_CODE 
FROM KBLOC WHERE KAEID = P_BLOC_TRAITE ; 
  
SELECT KAEBLOC INTO V_BLOC_ID_CODE 
FROM KBLOC WHERE KAEID = P_BLOC_ID ; 
  
INSERT INTO KBLOREL 
( KGJID , KGJREL , KGJIDBLO1 , KGJBLO1 , KGJIDBLO2 , KGJBLO2 , KGJCRU , KGJCRD , KGJCRH , KGJMAJU , KGJMAJD , KGJMAJH ) 
VALUES ( V_KGJID_REF , P_TYPE_RELATION , P_BLOC_TRAITE , V_BLOC_TRAITE_CODE , P_BLOC_ID , V_BLOC_ID_CODE , 
P_USER , P_DATE , P_HEURE , P_USER , P_DATE , P_HEURE ) ; 
  
CALL SP_NCHRONO ( 'KGJID' , V_KGJID_REF ) ; 
  
INSERT INTO KBLOREL 
( KGJID , KGJREL , KGJIDBLO1 , KGJBLO1 , KGJIDBLO2 , KGJBLO2 , KGJCRU , KGJCRD , KGJCRH , KGJMAJU , KGJMAJD , KGJMAJH ) 
VALUES ( V_KGJID_REF , P_TYPE_RELATION , P_BLOC_ID , V_BLOC_ID_CODE , P_BLOC_TRAITE , V_BLOC_TRAITE_CODE , 
P_USER , P_DATE , P_HEURE , P_USER , P_DATE , P_HEURE ) ; 
  
ELSE 
SET P_ERREUR = 'Aucun enregistrement. Ces deux blocs sont déjà associés.' ; 
END IF ; 
END IF ; 
  
IF ( P_MODE = 'Delete' ) THEN 
  
SELECT COUNT ( * ) INTO V_COUNT FROM KBLOREL 
WHERE KGJID = P_ID_ASSOCIATION ; 
  
IF ( V_COUNT = 1 ) THEN 
  
SELECT KGJIDBLO1 INTO V_BLOC_TODELETE 
FROM KBLOREL 
WHERE KGJID = P_ID_ASSOCIATION ; 
  
DELETE FROM KBLOREL 
WHERE KGJIDBLO1 = V_BLOC_TODELETE 
AND KGJIDBLO2 = P_BLOC_TRAITE 
AND KGJREL = P_TYPE_RELATION ; 
  
DELETE FROM KBLOREL 
WHERE KGJIDBLO1 = P_BLOC_TRAITE 
AND KGJIDBLO2 = V_BLOC_TODELETE 
AND KGJREL = P_TYPE_RELATION ; 
  
ELSE 
SET P_ERREUR = 'Aucune mise à jour, cette association n''existe plus.' ; 
END IF ; 
  
END IF ; 
  
IF ( P_MODE = 'Update' ) THEN 
  
SELECT COUNT ( * ) INTO V_COUNT FROM KBLOREL 
WHERE KGJID = P_ID_ASSOCIATION ; 
  
IF ( V_COUNT = 1 ) THEN 
  
  
  
SELECT KGJIDBLO1 INTO V_OLD_BLOC_ID 
FROM KBLOREL 
WHERE KGJID = P_ID_ASSOCIATION ; 
  
DELETE FROM KBLOREL 
WHERE KGJIDBLO1 = V_OLD_BLOC_ID AND KGJIDBLO2 = P_BLOC_TRAITE 
AND KGJREL = P_TYPE_RELATION ; 
  
DELETE FROM KBLOREL 
WHERE KGJIDBLO1 = P_BLOC_TRAITE AND KGJIDBLO2 = V_OLD_BLOC_ID 
AND KGJREL = P_TYPE_RELATION ; 
  
CALL SP_NCHRONO ( 'KGJID' , V_KGJID_REF ) ; 
  
SELECT KAEBLOC INTO V_BLOC_TRAITE_CODE 
FROM KBLOC WHERE KAEID = P_BLOC_TRAITE ; 
  
SELECT KAEBLOC INTO V_BLOC_ID_CODE 
FROM KBLOC WHERE KAEID = P_BLOC_ID ; 
  
INSERT INTO KBLOREL 
( KGJID , KGJREL , KGJIDBLO1 , KGJBLO1 , KGJIDBLO2 , KGJBLO2 , KGJCRU , KGJCRD , KGJCRH , KGJMAJU , KGJMAJD , KGJMAJH ) 
VALUES ( V_KGJID_REF , P_TYPE_RELATION , P_BLOC_TRAITE , V_BLOC_TRAITE_CODE , P_BLOC_ID , V_BLOC_ID_CODE , 
P_USER , P_DATE , P_HEURE , P_USER , P_DATE , P_HEURE ) ; 
  
CALL SP_NCHRONO ( 'KGJID' , V_KGJID_REF ) ; 
  
INSERT INTO KBLOREL 
( KGJID , KGJREL , KGJIDBLO1 , KGJBLO1 , KGJIDBLO2 , KGJBLO2 , KGJCRU , KGJCRD , KGJCRH , KGJMAJU , KGJMAJD , KGJMAJH ) 
VALUES ( V_KGJID_REF , P_TYPE_RELATION , P_BLOC_ID , V_BLOC_ID_CODE , P_BLOC_TRAITE , V_BLOC_TRAITE_CODE , 
P_USER , P_DATE , P_HEURE , P_USER , P_DATE , P_HEURE ) ; 
  
ELSE 
SET P_ERREUR = 'Aucune mise à jour, cette association n''existe plus.' ; 
END IF ; 
  
END IF ; 
  
END P1  ; 
  

  

