CREATE PROCEDURE SP_ADDCLLI ( 
	IN P_TYPE_OFFRE CHAR(1) , 
	IN P_ID_OFFRE CHAR(9) , 
	IN P_VERSION_OFFRE INTEGER , 
	IN P_CONTEXTE CHAR(10) , 
	IN P_ETAPE CHAR(10) , 
	IN P_DATE INTEGER , 
	IN P_LIBELLE_CLAUSE_LIBRE CHAR(60) , 
	IN P_TEXTE_CLAUSE_LIBRE CHAR(5000) , 
	IN P_CODERISQUE INTEGER , 
	IN P_CODEFORMULE INTEGER , 
	IN P_CODEOPTION INTEGER , 
	IN P_CODEOBJ INTEGER ) 
	LANGUAGE SQL 
	SPECIFIC SP_ADDCLLI 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
DECLARE V_KFOID_REF INTEGER DEFAULT 0 ; 
DECLARE V_KCAID_REF INTEGER DEFAULT 0 ; 
  
--Commenté par MSL le 30/08/2013 
--IF ( P_CODEOBJ > 0 ) THEN 
--           SET P_ETAPE = 'Objet' ; 
--END IF ; 
--Fin commentaire 
CALL SP_NCHRONO ( 'KFOID' , V_KFOID_REF ) ; 
  
INSERT INTO KPCLATXT 
( KFOID , KFODESC , KFOTXT ) 
VALUES 
( V_KFOID_REF , P_LIBELLE_CLAUSE_LIBRE , P_TEXTE_CLAUSE_LIBRE ) ; 
  
CALL SP_NCHRONO ( 'KCAID' , V_KCAID_REF ) ; 
  
INSERT INTO KPCLAUSE 
( KCAID , KCATYP , KCAIPB , KCAALX , KCAETAFF , KCAPERI , KCARSQ , KCAOBJ , 
KCAINVEN , KCAINLGN , KCAFOR , KCAOPT , KCAGAR , KCACTX , KCAAJT , KCANTA , 
KCACLNM1 , KCACLNM2 , KCACLNM3 , KCAVER , KCATXL , KCAMER , KCADOC , KCACHI , KCACHIS , KCAIMP , 
KCACXI , KCAIAN , KCAIAC , KCASIT , KCASITD , KCAAVNC , KCACRD , KCAAVNM , 
KCAMAJD , KCASPA , KCATYPO , KCAAIM , KCATAE ) 
VALUES 
( V_KCAID_REF , P_TYPE_OFFRE , P_ID_OFFRE , P_VERSION_OFFRE , P_ETAPE , 
P_ETAPE , P_CODERISQUE , P_CODEOBJ , 0 , 0 , P_CODEFORMULE , P_CODEOPTION , '' , P_CONTEXTE , 'O' , '' , '' , '' , 0 , 0 , V_KFOID_REF , 
0 , 'CP' , 'BASE' , '' , '0' , '0' , 'N' , '' , 'V' , P_DATE , 0 , P_DATE , 0 , P_DATE , 
'N' , '' , 'O' , '' ) ; 
  
END P1  ; 
  

  

