CREATE PROCEDURE SP_ADDENG ( 
	IN P_TYPE_OFFRE CHAR(1) , 
	IN P_ID_OFFRE CHAR(9) , 
	IN P_VERSION_OFFRE INTEGER , 
	IN P_CODE_ENG INTEGER , 
	IN P_DATE_DEBUT INTEGER , 
	IN P_DATE_FIN INTEGER , 
	IN P_STATUT_ACTIF CHAR(1) , 
	IN P_USER CHAR(10) , 
	IN P_DATE_OPE INTEGER , 
	IN P_TYPE_OPERATION CHAR(1) , 
	IN P_MODEAVN CHAR(1) , 
	OUT P_CODE_OUT INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_ADDENG 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	DECLARE V_CODECOMMENT INTEGER DEFAULT 0 ; 
	DECLARE V_KDOID_REF INTEGER DEFAULT 0 ; 
	DECLARE V_PBNPL CHAR ( 1 ) ; 
	DECLARE V_PBAPP DECIMAL ( 5 , 2 ) ; 
	DECLARE V_KDOID_TEMP INTEGER DEFAULT 0 ; 
	DECLARE V_KDOECO CHAR ( 1 ) ;	 
	DECLARE V_LASTENG INTEGER DEFAULT 0 ; 
	DECLARE V_LIENFAM INTEGER DEFAULT 0 ; 
	DECLARE V_LIENVEN INTEGER DEFAULT 0 ; 
	DECLARE V_LIENRSQ INTEGER DEFAULT 0 ; 
	 
	SET P_CODE_OUT = 0 ; 
	SET V_CODECOMMENT = 0 ; 
	 
	IF ( P_TYPE_OPERATION = 'I' ) THEN 
	 
		UPDATE KPENG SET KDOECO = 'N' WHERE KDOTYP = P_TYPE_OFFRE AND KDOIPB = P_ID_OFFRE AND KDOALX = P_VERSION_OFFRE ; 
		 
		CALL SP_NCHRONO ( 'KDOID' , V_KDOID_REF ) ; 
		 
		SELECT PBNPL , PBAPP INTO V_PBNPL , V_PBAPP FROM YPOBASE WHERE PBTYP = P_TYPE_OFFRE AND PBIPB = P_ID_OFFRE AND PBALX = P_VERSION_OFFRE ; 
		 
		INSERT INTO KPENG 
			( KDOID , KDOTYP , KDOIPB , KDOALX , KDOECO , KDOACT , KDOENGID , KDODATD , KDODATF , KDOCRU , KDOCRD , 
				KDOMAJU , KDOMAJD , KDONPL , KDOAPP , KDOENG , KDOENA ) 
		VALUES 
			( V_KDOID_REF , P_TYPE_OFFRE , P_ID_OFFRE , P_VERSION_OFFRE , 'N' , 'O' , 0 , P_DATE_DEBUT , P_DATE_FIN , P_USER , P_DATE_OPE , 
				P_USER , P_DATE_OPE , V_PBNPL , V_PBAPP , 0 , 0 ) ; 
		 
		SET P_CODE_OUT = V_KDOID_REF ; 
	 
	END IF ; 
	IF ( P_TYPE_OPERATION = 'D' ) THEN 
		 --V_LIENFAM 
		FOR LOOP_LIENFAM AS FREE_LIST CURSOR FOR 
			SELECT KDPID V_LIENFAM FROM KPENGFAM WHERE KDPKDOID = P_CODE_ENG AND KDPTYP = P_TYPE_OFFRE AND TRIM ( KDPIPB ) = TRIM ( P_ID_OFFRE ) AND KDPALX = P_VERSION_OFFRE 
		DO 
			 --V_LIENVEN 
			FOR LOOP_LIENVEN AS FREE_LIST CURSOR FOR 
				SELECT KDQID V_LIENVEN FROM KPENGVEN WHERE KDQKDPID = V_LIENFAM AND KDQTYP = P_TYPE_OFFRE AND TRIM ( KDQIPB ) = TRIM ( P_ID_OFFRE ) AND KDQALX = P_VERSION_OFFRE 
			DO 
				 --V_LIENRSQ 
				FOR LOOP_LIENRSQ AS FREE_LIST CURSOR FOR 
					SELECT KDRID V_LIENRSQ FROM KPENGRSQ WHERE KDRKDQID = V_LIENVEN AND KDRTYP = P_TYPE_OFFRE AND TRIM ( KDRIPB ) = TRIM ( P_ID_OFFRE ) AND KDRALX = P_VERSION_OFFRE 
				DO 
					DELETE FROM KPENGGAR WHERE KDSKDRID = V_LIENRSQ AND KDSTYP = P_TYPE_OFFRE AND TRIM ( KDSIPB ) = TRIM ( P_ID_OFFRE ) AND KDSALX = P_VERSION_OFFRE ; 
					DELETE FROM KPENGRSQ WHERE KDRID = V_LIENRSQ ; 
				END FOR ; 
				DELETE FROM KPENGVEN WHERE KDQID = V_LIENVEN ;		 
			END FOR ;			 
			DELETE FROM KPENGFAM WHERE KDPID = V_LIENFAM ; 
		END FOR ; 
	 
		SELECT KDOOBSV INTO V_CODECOMMENT FROM KPENG WHERE KDOID = P_CODE_ENG ; 
		IF ( V_CODECOMMENT != 0 ) THEN 
			DELETE FROM KPOBSV WHERE KAJCHR = V_CODECOMMENT AND TRIM ( KAJIPB ) = TRIM ( P_ID_OFFRE ) AND KAJALX = P_VERSION_OFFRE AND KAJTYP = P_TYPE_OFFRE ; 
		END IF ; 
		 
		DELETE FROM KPENG WHERE KDOID = P_CODE_ENG ; 
  
		SET V_KDOID_REF = P_CODE_ENG ; 
		 
	END IF ; 
	IF ( P_TYPE_OPERATION = 'U' ) THEN 
		IF ( P_STATUT_ACTIF = 'N' ) THEN 
			UPDATE KPENG SET KDOACT = 'N' , KDOMAJU = P_USER , KDOMAJD = P_DATE_OPE WHERE KDOID = P_CODE_ENG ; 
		END IF ; 
	 
		IF ( P_STATUT_ACTIF = 'O' ) THEN 
			UPDATE KPENG SET KDODATD = P_DATE_DEBUT , KDODATF = P_DATE_FIN ,	KDOMAJU = P_USER , KDOMAJD = P_DATE_OPE WHERE KDOID = P_CODE_ENG ; 
		END IF ; 
		 
		SET P_CODE_OUT = P_CODE_ENG ; 
		 
		SET V_KDOID_REF = P_CODE_ENG ; 
		 
	END IF ; 
	 
	 --GESTION DU CHAMP KDOECO 
	SELECT KDOID INTO V_KDOID_TEMP 
		FROM KPENG 
		WHERE KDODATD = ( SELECT MAX ( KDODATD ) 
							FROM KPENG 
							/* WHERE KDOID <> V_KDOID_REF AND KDOTYP = P_TYPE_OFFRE AND KDOIPB = P_ID_OFFRE AND KDOALX = P_VERSION_OFFRE )  */ 
							WHERE KDOID <> 0 AND KDOTYP = P_TYPE_OFFRE AND KDOIPB = P_ID_OFFRE AND KDOALX = P_VERSION_OFFRE ) 
			AND KDOTYP = P_TYPE_OFFRE AND KDOIPB = P_ID_OFFRE AND KDOALX = P_VERSION_OFFRE AND KDOID <> V_KDOID_REF ; 
			 
	UPDATE KPENG SET KDOECO = 'O' WHERE KDOID = V_KDOID_TEMP ; 
			 
	UPDATE KPENG SET KDOECO = 'N' WHERE KDOID <> V_KDOID_TEMP AND KDOTYP = P_TYPE_OFFRE AND KDOIPB = P_ID_OFFRE AND KDOALX = P_VERSION_OFFRE ; 
	 
	 
	/* 2015-08-06 : MODIF SUIVANT LA SPÉC ENGAGEMENT HORS AFFAIRE NOUVELLE */ 
	IF ( P_MODEAVN = 'O' AND P_TYPE_OPERATION <> 'D' ) THEN 
		UPDATE KPENG SET KDOECO = 'N' WHERE TRIM ( KDOIPB ) = TRIM ( P_ID_OFFRE ) AND KDOALX = P_VERSION_OFFRE AND KDOTYP = P_TYPE_OFFRE ; 
		SET V_LASTENG = 0 ; 
		SELECT KDOID INTO V_LASTENG FROM KPENG 
			WHERE TRIM ( KDOIPB ) = TRIM ( P_ID_OFFRE ) AND KDOALX = P_VERSION_OFFRE AND KDOTYP = P_TYPE_OFFRE AND KDOACT = 'O' 
			ORDER BY KDODATD DESC , KDOID DESC FETCH FIRST 1 ROWS ONLY ; 
		IF ( V_LASTENG > 0 ) THEN 
			UPDATE KPENG SET KDOECO = 'O' WHERE KDOID = V_LASTENG ; 
		END IF ; 
	END IF ;	 
	/* 2015-08-06 : FIN MODIF */ 
  
END P1  ; 
  

  

