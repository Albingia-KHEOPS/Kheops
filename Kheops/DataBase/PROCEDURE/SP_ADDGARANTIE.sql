CREATE PROCEDURE SP_ADDGARANTIE ( 
	IN P_GARANTIE CHAR(10) , 
	IN P_DESIGNATION CHAR(120) , 
	IN P_ABREGE CHAR(30) , 
	IN P_TAXE CHAR(2) , 
	IN P_CATNAT CHAR(2) , 
	IN P_GAR_COMMUNE CHAR(1) , 
	IN P_CODE_DEFINITION CHAR(5) , 
	IN P_CODE_INFORMATION CHAR(5) , 
	IN P_REGULARISABLE CHAR(1) , 
	IN P_CODE_GRILLE CHAR(2) , 
	IN P_INVENTAIRE CHAR(1) , 
	IN P_CODE_INVENTAIRE CHAR(20) , 
	IN P_ATTG CHAR(1) , 
	IN P_MODE CHAR(1) , 
	OUT P_ERREUR CHAR(256) ) 
	LANGUAGE SQL 
	SPECIFIC SP_ADDGARANTIE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
DECLARE V_COUNT INTEGER DEFAULT 0 ; 
  
IF ( P_MODE = 'I' ) THEN 
  
SELECT COUNT ( * ) INTO V_COUNT 
FROM KGARAN 
WHERE GAGAR = P_GARANTIE ; 
  
IF ( V_COUNT = 0 ) THEN 
  
INSERT INTO KGARAN 
( GAGAR , GADES , GADEA , GATAX , GACNX , GACOM , GADFG , GAIFC , GARGE , 
GATRG , GAINV , GATYI , GAATG ) 
VALUES 
( P_GARANTIE , P_DESIGNATION , P_ABREGE , P_TAXE , P_CATNAT , P_GAR_COMMUNE , P_CODE_DEFINITION , P_CODE_INFORMATION , 
P_REGULARISABLE , P_CODE_GRILLE , P_INVENTAIRE , P_CODE_INVENTAIRE , P_ATTG ) ; 
  
ELSE 
SET P_ERREUR = 'Aucune mise à jour, cette garantie existe déjà' ; 
END IF ; 
  
  
END IF ; 
IF ( P_MODE = 'U' ) THEN 
  
SELECT COUNT ( * ) INTO V_COUNT 
FROM KGARAN 
WHERE GAGAR = P_GARANTIE ; 
  
IF ( V_COUNT = 1 ) THEN 
UPDATE KGARAN 
SET GADES = P_DESIGNATION , 
GADEA = P_ABREGE , 
GATAX = P_TAXE , 
GACNX = P_CATNAT , 
GACOM = P_GAR_COMMUNE , 
GADFG = P_CODE_DEFINITION , 
GAIFC = P_CODE_INFORMATION , 
GARGE = P_REGULARISABLE , 
GATRG = P_CODE_GRILLE , 
GAINV = P_INVENTAIRE , 
GATYI = P_CODE_INVENTAIRE , 
GAATG = P_ATTG 
WHERE GAGAR = P_GARANTIE ; 
  
ELSE 
SET P_ERREUR = 'Aucune mise à jour, cette garantie n''existe pas' ; 
END IF ; 
  
END IF ; 
  
  
END P1  ; 
  

  

