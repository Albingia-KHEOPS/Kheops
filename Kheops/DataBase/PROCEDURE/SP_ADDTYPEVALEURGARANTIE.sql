CREATE PROCEDURE SP_ADDTYPEVALEURGARANTIE ( 
	IN P_ID NUMERIC(15, 0) , 
	IN P_GARANTIE CHAR(10) , 
	IN P_NUM_ORDRE NUMERIC(5, 2) , 
	IN P_CODE_TYPE_VALEUR CHAR(5) , 
	IN P_MODE CHAR(1) , 
	OUT P_ERREUR CHAR(256) ) 
	LANGUAGE SQL 
	SPECIFIC SP_ADDTYPEVALEURGARANTIE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
DECLARE V_COUNT INTEGER DEFAULT 0 ; 
DECLARE V_NUM_ORDRE INTEGER DEFAULT 0 ; 
  
  
  
IF ( P_MODE = 'I' ) THEN 
  
SELECT COUNT ( * ) INTO V_COUNT 
FROM KGARTVL 
WHERE KGKID = P_ID AND KGKGAR = P_GARANTIE ; 
  
IF ( V_COUNT = 0 ) THEN 
  
INSERT INTO KGARTVL 
( KGKID , KGKGAR , KGKORD , KGKTYVAL ) 
VALUES 
( P_ID , P_GARANTIE , P_NUM_ORDRE , P_CODE_TYPE_VALEUR ) ; 
  
ELSE 
SET P_ERREUR = 'Aucune mise à jour, ce type de valeur existe déjà pour cette garantie' ; 
END IF ; 
  
  
END IF ; 
IF ( P_MODE = 'U' ) THEN 
  
SELECT COUNT ( * ) INTO V_COUNT 
FROM KGARTVL 
WHERE KGKID = P_ID AND KGKGAR = P_GARANTIE ; 
  
IF ( V_COUNT = 1 ) THEN 
UPDATE KGARTVL 
SET KGKORD = P_NUM_ORDRE , 
KGKTYVAL = P_CODE_TYPE_VALEUR 
WHERE KGKID = P_ID AND KGKGAR = P_GARANTIE ; 
  
ELSE 
SET P_ERREUR = 'Aucune mise à jour, ce type de valeur n''existe pas' ; 
END IF ; 
  
END IF ; 
  
  
FOR LOOP_VAR AS CURSOR1 CURSOR FOR 
SELECT KGKID IDGARANTIE FROM KGARTVL 
WHERE KGKGAR = P_GARANTIE ORDER BY KGKORD 
DO 
SET V_NUM_ORDRE = V_NUM_ORDRE + 1 ; 
UPDATE KGARTVL 
SET KGKORD = V_NUM_ORDRE 
WHERE KGKID = IDGARANTIE ; 
END FOR ; 
  
  
  
  
  
  
END P1  ; 
  

  

