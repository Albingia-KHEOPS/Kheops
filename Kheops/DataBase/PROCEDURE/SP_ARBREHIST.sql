CREATE PROCEDURE SP_ARBREHIST ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODEAVN INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_ARBREHIST 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
DECLARE CURSORTREE CURSOR FOR 
SELECT KEVTYP TYPE , KEVIPB CODEOFFRE , KEVALX VERSION , PBREF DESCOFFRE , KEVETAPE ETAPE , KEVETORD ETAPEORD , KEVORDR ORDRE , KEVPERI PERIMETRE , 
KEVRSQ CODERSQ , IFNULL ( KABDESC , '' ) DESCRSQ , KEVOBJ CODEOBJ , 
KEVFOR CODEFOR , IFNULL ( KDAALPHA , '' ) LETTREFOR , IFNULL ( KDADESC , '' ) DESCFOR , KEVOPT CODEOPT , IFNULL ( JECCH , 0 ) CHRONORSQ , 
KEVTAG PASSAGETAG 
FROM HPCTRLE 
INNER JOIN YHPBASE ON PBIPB = KEVIPB AND PBALX = KEVALX AND PBTYP = KEVTYP AND PBAVN = KEVAVN 
LEFT JOIN YHRTRSQ ON JERSQ = KEVRSQ AND JEIPB = KEVIPB AND JEALX = KEVALX AND JEAVN = KEVAVN 
LEFT JOIN HPRSQ ON KABTYP = KEVTYP AND KABIPB = KEVIPB AND KABALX = KEVALX AND KABRSQ = KEVRSQ AND KABAVN = KEVAVN 
LEFT JOIN HPOPTAP ON KDDTYP = KEVTYP AND KDDIPB = KEVIPB AND KDDALX = KEVALX AND KDDRSQ = KEVRSQ AND KDDAVN = KEVAVN 
LEFT JOIN HPFOR ON KDATYP = KEVTYP AND KDAIPB = KEVIPB AND KDAALX = KEVALX AND KDAFOR = KEVFOR AND KDAAVN = KEVAVN 
WHERE KEVTYP = P_TYPE AND KEVIPB = P_CODEOFFRE AND KEVALX = P_VERSION AND KEVAVN = P_CODEAVN 
ORDER BY KEVETORD , KEVRSQ , KEVOBJ , KEVFOR , KEVOPT ; 
  
OPEN CURSORTREE ; 
  
END P1  ; 
  

  

