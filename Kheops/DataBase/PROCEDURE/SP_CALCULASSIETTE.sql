CREATE OR REPLACE PROCEDURE SP_CALCULASSIETTE ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) ) 
	LANGUAGE SQL 
	SPECIFIC SP_CALCULASSIETTE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_VALEUR INTEGER DEFAULT 0 ; 
	DECLARE V_UNIT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_TYPE CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_HT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_ENSTYPE CHAR ( 5 ) DEFAULT '' ; 
	 
	DECLARE V_COUNTAPP INTEGER DEFAULT 0 ; 
	DECLARE V_CALCULOK INTEGER DEFAULT 0 ; 
	 
	SET V_CALCULOK = 1 ; 
 
 	SET P_CODEOFFRE = LPAD ( RTRIM ( P_CODEOFFRE ) , 9 , ' ' ) ; 


	/* BOUCLE SUR TOUS LES RISQUES */ 
	FOR LOOP_RSQ AS FREE_LIST CURSOR FOR 
		SELECT DISTINCT KDDRSQ VCODERSQ , KDDFOR VCODEFOR , KDDOPT VCODEOPT 
			FROM KPOPTAP 
			WHERE KDDIPB = P_CODEOFFRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE 
		GROUP BY KDDRSQ , KDDFOR , KDDOPT 
	DO 
		/* TEST SI LA FORMULE S'APPLIQUE À UN RISQUE */ 
		SELECT COUNT ( * ) INTO V_COUNTAPP FROM KPOPTAP 
			WHERE KDDIPB = P_CODEOFFRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE AND KDDFOR = VCODEFOR AND KDDOPT = VCODEOPT AND KDDPERI = 'RQ' ; 
			 
		IF ( V_COUNTAPP > 0 ) THEN 
			SELECT JEVAL , JEVAU , JEVAT INTO V_VALEUR , V_UNIT , V_TYPE FROM YPRTRSQ 
				WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION AND JERSQ = VCODERSQ ; 
		END IF ; 
		 
		/* TEST SI LA FORMULE S'APPLIQUE À UN OBJET */ 
		SELECT COUNT ( * ) INTO V_COUNTAPP FROM KPOPTAP 
			WHERE KDDIPB = P_CODEOFFRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE AND KDDFOR = VCODEFOR AND KDDOPT = VCODEOPT AND KDDPERI = 'OB' ; 
		 
		IF ( V_COUNTAPP > 0 ) THEN 
			FOR LOOP_OBJ AS FREE_LIST CURSOR FOR 
				SELECT JGVAL VALEUR , JGVAU UNIT , JGVAT TYPE , JGVAH HT , KGMTYVAL ENSTYP 
					FROM YPRTOBJ 
						INNER JOIN KPOPTAP ON JGIPB = KDDIPB AND JGALX = KDDALX AND JGRSQ = KDDRSQ AND JGOBJ = KDDOBJ 
							AND KDDFOR = VCODEFOR AND KDDOPT = VCODEOPT AND KDDPERI = 'OB' 
						LEFT JOIN KTYPVALD ON KGMBASE = JGVAT 
					WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION AND JGRSQ = VCODERSQ 
			DO 
				IF ( ( V_ENSTYPE = '' OR V_ENSTYPE = ENSTYP ) AND ( V_UNIT = '' OR V_UNIT = UNIT ) AND ( V_HT = '' OR V_HT = HT ) AND ( V_CALCULOK > 0 ) ) THEN 
					SET V_VALEUR = V_VALEUR + VALEUR ; 
					SET V_UNIT = UNIT ; 
					SET V_TYPE = TYPE ; 
					SET V_HT = HT ; 
					SET V_ENSTYPE = ENSTYP ; 
				ELSE 
					SET V_CALCULOK = 0 ; 
					SET V_VALEUR = 0 ; 
					SET V_UNIT = '' ; 
					SET V_TYPE = '' ; 
					SET V_HT = '' ; 
					SET V_ENSTYPE = '' ; 
				END IF ; 
			END FOR ; 
		END IF ; 
		 
		/* MISE À JOUR DES VALEURS DE L'OPTION  */ 
		UPDATE KPOPT 
			SET KDBASVALO = V_VALEUR , KDBASVALA = V_VALEUR , KDBASVALW = 0 , KDBASUNIT = V_UNIT , KDBASBASE = V_TYPE 
			WHERE KDBIPB = P_CODEOFFRE AND KDBALX = P_VERSION AND KDBTYP = P_TYPE AND KDBFOR = VCODEFOR AND KDBOPT = VCODEOPT ; 
			 
		P2 : BEGIN ATOMIC /* TRAITEMENT DU CLACUL D'ASSIETTE DE GARANTIE SANS INVENTAIRE (KPGARAN) */ 
		 
			DECLARE V_NATAPP CHAR ( 1 ) DEFAULT '' ; 
			DECLARE V_COUNTGAR INTEGER DEFAULT 0 ; 
			DECLARE V_COUNTENS INTEGER DEFAULT 0 ; 
		 
			FOR LOOP_GARAN AS FREE_LIST CURSOR FOR 
				SELECT KDEID IDGAR , KGKTYVAL ENSGAR , KDEGARAN GARANTIE , KDEASBASE ASSBASE 
					FROM KPGARAN 
						INNER JOIN KGARTVL ON KGKGAR = KDEGARAN 
					WHERE KDEIPB = P_CODEOFFRE AND KDEALX = P_VERSION AND KDETYP = P_TYPE AND KDEFOR = VCODEFOR AND KDEOPT = VCODEOPT AND ( KDEALA = 'A' OR KDEALA = 'B' ) 
			DO 
				SET V_NATAPP = '' ; 
				SET V_COUNTGAR = 0 ; 
				SET V_COUNTENS = 0 ; 
				SET V_VALEUR = 0 ; 
				SET V_UNIT = '' ; 
				SET V_TYPE = '' ; 
				SET V_HT = '' ; 
				SET V_ENSTYPE = '' ; 
				 
				/* RÉCUPÉRATION DE LA NATURE DU S'APPLIQUE À POUR LA GARANTIE */ 
				SELECT DISTINCT KDFGAN INTO V_NATAPP FROM KPGARAP WHERE KDFKDEID = IDGAR ; 
				SET V_CALCULOK = 1 ; 
				 
				CASE V_NATAPP 
					WHEN 'A' THEN /* LORSQUE LA GARANTIE EST ACCORDÉE DANS LA TABLE KPGARAP */ 
						/* RÉCUPÉRATION DE TOUS LES OBJETS ET ADDITION DE LEUR VALEUR QUI SONT PRÉSENTS DANS KPGARAP */ 
						FOR LOOP_OBJETACCORD AS FREE_LIST CURSOR FOR 
							SELECT JGVAL VALEUR , JGVAU UNIT , JGVAT TYPE , JGVAH HT , IFNULL ( KGMTYVAL , '' ) ENSTYP 
								FROM YPRTOBJ 
									INNER JOIN KPGARAP ON KDFIPB = JGIPB AND KDFALX = JGALX AND KDFTYP = P_TYPE 
										AND KDFFOR = VCODEFOR AND KDFOPT = VCODEOPT AND KDFGARAN = GARANTIE AND KDFRSQ = JGRSQ AND KDFOBJ = JGOBJ 
									LEFT JOIN KTYPVALD ON KGMBASE = JGVAT 
								WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION AND JGRSQ = VCODERSQ 
						DO 
							IF ( ( V_ENSTYPE = '' OR V_ENSTYPE = ENSTYP ) AND ( V_UNIT = '' OR V_UNIT = UNIT ) AND ( V_HT = '' OR V_HT = HT ) AND ( V_CALCULOK > 0 ) ) THEN 
								SET V_VALEUR = V_VALEUR + VALEUR ; 
								SET V_UNIT = UNIT ; 
								SET V_TYPE = TYPE ; 
								SET V_HT = HT ; 
								SET V_ENSTYPE = ENSTYP ; 
							ELSE 
								SET V_CALCULOK = 0 ; 
								SET V_VALEUR = 0 ; 
								SET V_UNIT = '' ; 
								SET V_TYPE = '' ; 
								SET V_HT = '' ; 
								SET V_ENSTYPE = '' ; 
							END IF ; 
						END FOR ; 
						 
						SELECT COUNT ( * ) INTO V_COUNTENS FROM KGARTVL WHERE KGKGAR = GARANTIE AND KGKTYVAL = V_ENSTYPE ; 
						IF ( V_COUNTENS > 0 ) THEN 
							IF ( V_TYPE <> '' ) THEN 
								SET ASSBASE = V_TYPE ; 
							END IF ; 
							UPDATE KPGARAN 
								SET KDEASVALO = V_VALEUR , KDEASVALA = V_VALEUR , KDEASVALW = 0 , KDEASUNIT = V_UNIT , KDEASBASE = ASSBASE 
								WHERE KDEID = IDGAR ; 
						END IF ; 
						 
					WHEN 'E' THEN /* LORSQUE LA GARANTIE EST EXCLUE DANS LA TABLE KPGARAP */ 
						/* RÉCUPÉRATION DE TOUS LES OBJETS ET ADDITION DE LEUR VALEUR QUI NE SONT PAS PRÉSENTS DANS KPGARAP */ 
						FOR LOOP_OBJETEXCLU AS FREE_LIST CURSOR FOR 
							SELECT JGVAL VALEUR , JGVAU UNIT , JGVAT TYPE , JGVAH HT , IFNULL ( KGMTYVAL , '' ) ENSTYP 
								FROM YPRTOBJ 
									INNER JOIN KPGARAP ON KDFIPB = JGIPB AND KDFALX = JGALX AND KDFTYP = P_TYPE 
										AND KDFFOR = VCODEFOR AND KDFOPT = VCODEOPT AND KDFGARAN = GARANTIE AND KDFRSQ = JGRSQ AND KDFOBJ <> JGOBJ 
									LEFT JOIN KTYPVALD ON KGMBASE = JGVAT 
								WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION AND JGRSQ = VCODERSQ 
						DO 
							IF ( ( V_ENSTYPE = '' OR V_ENSTYPE = ENSTYP ) AND ( V_UNIT = '' OR V_UNIT = UNIT ) AND ( V_HT = '' OR V_HT = HT ) AND ( V_CALCULOK > 0 ) ) THEN 
								SET V_VALEUR = V_VALEUR + VALEUR ; 
								SET V_UNIT = UNIT ; 
								SET V_TYPE = TYPE ; 
								SET V_HT = HT ; 
								SET V_ENSTYPE = ENSTYP ; 
							ELSE 
								SET V_CALCULOK = 0 ; 
								SET V_VALEUR = 0 ; 
								SET V_UNIT = '' ; 
								SET V_TYPE = '' ; 
								SET V_HT = '' ; 
								SET V_ENSTYPE = '' ; 
							END IF ; 
						END FOR ; 
						 
						SELECT COUNT ( * ) INTO V_COUNTENS FROM KGARTVL WHERE KGKGAR = GARANTIE AND KGKTYVAL = V_ENSTYPE ; 
						 
						IF ( V_COUNTENS > 0 ) THEN 
							IF ( V_TYPE <> '' ) THEN 
								SET ASSBASE = V_TYPE ; 
							END IF ; 
							UPDATE KPGARAN 
								SET KDEASVALO = V_VALEUR , KDEASVALA = V_VALEUR , KDEASVALW = 0 , KDEASUNIT = V_UNIT , KDEASBASE = ASSBASE 
							WHERE KDEID = IDGAR ; 
						END IF ; 
					ELSE /* LORSQU'IL N'Y A AUCUNE APPLICATION DANS LA TABLE KPGARAP */ 
						SELECT KDBASVALO , KDBASUNIT , KDBASBASE INTO V_VALEUR , V_UNIT , V_TYPE 
							FROM KPOPT 
						WHERE KDBIPB = P_CODEOFFRE AND KDBALX = P_VERSION AND KDBTYP = P_TYPE AND KDBFOR = VCODEFOR AND KDBOPT = VCODEOPT ;	 
  
							 -- VÉRIFIE QUE LE TYPE D'ENSEMBLE EST PRÉSENT DANS LE RÉFÉRENTIEL 
						SELECT COUNT ( * ) INTO V_COUNTGAR FROM KTYPVALD WHERE KGMTYVAL = ENSGAR AND KGMBASE = V_TYPE ; 
						IF ( V_COUNTGAR > 0 ) THEN 
							IF ( V_TYPE <> '' ) THEN 
								SET ASSBASE = V_TYPE ; 
							END IF ; 
							 -- MISE À JOUR DE L'ASSIETTE AVEC LES VALEURS DE L'OPTION 
							UPDATE KPGARAN 
								SET KDEASVALO = V_VALEUR , KDEASVALA = V_VALEUR , KDEASVALW = 0 , KDEASUNIT = V_UNIT , KDEASBASE = ASSBASE 
								WHERE KDEID = IDGAR ; 
						END IF ; 
						 -- SI LE TYPE EST VIDE 
						IF ( V_TYPE = '' ) THEN 
							UPDATE KPGARAN 
								SET KDEASVALO = V_VALEUR , KDEASVALA = V_VALEUR , KDEASVALW = 0 , KDEASUNIT = V_UNIT , KDEASBASE = ASSBASE 
								WHERE KDEID = IDGAR ; 
						END IF ; 
				END CASE ; 
			END FOR ; 
		END P2 ; 
	END FOR ; 
END P1  ; 
  

  

