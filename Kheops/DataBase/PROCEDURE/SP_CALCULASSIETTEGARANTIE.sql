CREATE OR REPLACE PROCEDURE SP_CALCULASSIETTEGARANTIE (
	IN P_GARANTIEID INTEGER ,
	OUT P_ERROR CHAR(5000) )
	DYNAMIC RESULT SETS 1
	LANGUAGE SQL
	SPECIFIC SP_CALCULASSIETTEGARANTIE
	NOT DETERMINISTIC
	MODIFIES SQL DATA
	CALLED ON NULL INPUT
	SET OPTION  ALWBLK = *ALLREAD ,
	ALWCPYDTA = *OPTIMIZE ,
	COMMIT = *CHG ,
	CLOSQLCSR = *ENDMOD ,
	DECRESULT = (31, 31, 00) ,
	DFTRDBCOL = ZALBINKHEO ,
	DYNDFTCOL = *YES ,
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' ,
	DYNUSRPRF = *USER ,
	SRTSEQ = *HEX
	P1 : BEGIN ATOMIC

	DECLARE V_GARANTIE CHAR ( 10 ) DEFAULT '' ;
	DECLARE V_ASSIETTEOBLIG CHAR ( 1 ) DEFAULT '' ;
	DECLARE V_ALIMAUTO CHAR ( 1 ) DEFAULT '' ;
	DECLARE V_COUNTGARAP INTEGER DEFAULT 0 ;
	DECLARE V_CODEOPTION INTEGER DEFAULT 0 ;
	DECLARE V_VALACTU NUMERIC ( 13 , 2 ) DEFAULT 0 ;
	DECLARE V_ENSGAR CHAR ( 5 ) DEFAULT '' ;
	DECLARE V_VALEUR NUMERIC ( 11 , 0 ) DEFAULT 0 ;
	DECLARE V_COUNTENS INTEGER DEFAULT 0 ;
	DECLARE V_CODERSQ INTEGER DEFAULT 0 ;
	DECLARE V_PERIGARAP CHAR ( 2 ) ;
	DECLARE V_TYPEGARAP CHAR ( 1 ) ;

	 -- RÉCUPÈRE LE NOMBRE D'ENREGISTREMENT DE PORTÉE POUR CETTE GARANTIE
	SELECT COUNT ( * ) INTO V_COUNTGARAP FROM KPGARAP WHERE KDFKDEID = P_GARANTIEID ;
	 -- RÉCUPÉRATION DES PARAMÈTRES DE LA GARANTIE ET DE LA VALEUR DE L'OPTION
	SELECT KDEGARAN , KDEASOBLI , KDEALA , KDBVAA INTO V_GARANTIE , V_ASSIETTEOBLIG , V_ALIMAUTO , V_VALACTU
		FROM KPGARAN
			INNER JOIN KPOPTD ON KDCID = KDEKDCID
			INNER JOIN KPOPT ON KDBID = KDCKDBID
		WHERE KDEID = P_GARANTIEID ;

	IF ( V_ASSIETTEOBLIG = 'O' AND V_ALIMAUTO = 'A' ) THEN
		IF ( V_COUNTGARAP > 0 ) THEN -- SI PORTEE
			SELECT DISTINCT KDFPERI , KDFGAN INTO V_PERIGARAP , V_TYPEGARAP FROM KPGARAP WHERE KDFKDEID = P_GARANTIEID ;
			IF ( V_PERIGARAP = 'OB' ) THEN


				SET V_VALEUR = 0 ;

				SELECT SUM ( JGVAL ) , KDFGAN INTO V_VALEUR , V_TYPEGARAP
					FROM YPRTOBJ OBJ
						INNER JOIN KPOPTAP ON KDDRSQ = JGRSQ AND KDDIPB = JGIPB AND KDDALX = JGALX
						INNER JOIN KPGARAP ON KDFIPB = JGIPB AND KDFALX = JGALX AND KDFRSQ = JGRSQ AND KDFOBJ = JGOBJ
					WHERE EXISTS (
						SELECT KGMBASE
							FROM KPOPT
								INNER JOIN KPOPTD ON KDCKDBID = KDBID
								INNER JOIN KPGARA ON KDEKDCID = KDCID
								INNER JOIN KPOPTAP ON KDDKDBID = KDBID
								LEFT JOIN KGARTVL ON KGKGAR = KDEGARAN
								INNER JOIN KTYPVALD ON KGMTYVAL = KGKTYVAL
							WHERE KDEID = P_GARANTIEID AND OBJ . JGVAT = KGMBASE AND OBJ . JGIPB = KDEIPB AND OBJ . JGALX = KDEALX
					)
				GROUP BY KDFGAN ;

				IF ( V_VALEUR <= 0 ) THEN
					SET P_ERROR = ';' CONCAT V_GARANTIE CONCAT '_ASSIETTE AUTOMATIQUE ET OBLIGATOIRE IMPOSSIBLE À DÉTERMINER' ;
				END IF ;

			END IF ;
		ELSE -- PAS DE PORTEE
			P2 : BEGIN ATOMIC

				DECLARE V_CODEOFFRE CHAR ( 9 ) DEFAULT '' ;
				DECLARE V_VERSION INTEGER DEFAULT 0 ;
				DECLARE V_TYPEOFFRE CHAR ( 1 ) DEFAULT '' ;
				DECLARE V_CODEFORMULE INTEGER DEFAULT 0 ;
				DECLARE V_CODEOPTION INTEGER DEFAULT 0 ;

				DECLARE V_COUNTAPP INTEGER DEFAULT 0 ;
				DECLARE V_COUNTGAR INTEGER DEFAULT 0 ;
				DECLARE V_CURRENTCOUNTGAR INTEGER DEFAULT 0 ;
				DECLARE V_CALCULOK INTEGER DEFAULT 0 ;
				DECLARE V_CODERSQ INTEGER DEFAULT 0 ;
				DECLARE V_TYPE CHAR ( 5 ) DEFAULT '' ;
				DECLARE V_ENSTYPE CHAR ( 5 ) DEFAULT '' ;
				DECLARE V_ENSGAR CHAR ( 5 ) DEFAULT '' ;

				FOR LOOP_ENSGAR AS FREE_LIST CURSOR FOR


				SELECT KDEIPB V_CODEOFFRE , KDEALX V_VERSION , KDETYP V_TYPEOFFRE , KDEFOR V_CODEFORMULE , KDEOPT V_CODEOPTION , KGKTYVAL V_ENSGAR
						FROM KPGARAN
							INNER JOIN KGARTVL ON KGKGAR = KDEGARAN
					WHERE KDEID = P_GARANTIEID

				DO

					 --COMPTE LE NOMBRE D'ENREGISTREMENT RQ
					SELECT COUNT ( * ) INTO V_COUNTAPP FROM KPOPTAP WHERE KDDIPB = V_CODEOFFRE AND KDDALX = V_VERSION AND KDDTYP = V_TYPEOFFRE AND KDDFOR = V_CODEFORMULE AND KDDOPT = V_CODEOPTION AND KDDPERI = 'RQ' ;

					SELECT KDDRSQ INTO V_CODERSQ FROM KPOPTAP WHERE KDDIPB = V_CODEOFFRE AND KDDALX = V_VERSION AND KDDTYP = V_TYPEOFFRE AND KDDFOR = V_CODEFORMULE AND KDDOPT = V_CODEOPTION FETCH FIRST 1 ROWS ONLY ;
					IF ( V_COUNTAPP > 0 ) THEN
						SELECT JEVAT INTO V_TYPE FROM YPRTRSQ WHERE JEIPB = V_CODEOFFRE AND JEALX = V_VERSION AND JERSQ = V_CODERSQ ;
					END IF ;

					 --COMPTE LE NOMBRE D'ENREGISTREMENT OB
					SELECT COUNT ( * ) INTO V_COUNTAPP FROM KPOPTAP WHERE KDDIPB = V_CODEOFFRE AND KDDALX = V_VERSION AND KDDTYP = V_TYPEOFFRE AND KDDFOR = V_CODEFORMULE AND KDDOPT = V_CODEOPTION AND KDDPERI = 'OB' ;
					SET V_CALCULOK = 1 ;
					IF ( V_COUNTAPP > 0 ) THEN

						SELECT JGVAT INTO  V_TYPE
						FROM YPRTOBJ
						INNER JOIN KPOPTAP ON JGIPB = KDDIPB AND JGALX = KDDALX AND JGRSQ = KDDRSQ AND JGOBJ = KDDOBJ AND KDDFOR = V_CODEFORMULE AND KDDOPT = V_CODEOPTION AND KDDPERI = 'OB'
						LEFT JOIN KTYPVALD ON KGMBASE = JGVAT
						WHERE JGIPB = V_CODEOFFRE AND JGALX = V_VERSION AND JGRSQ = V_CODERSQ ;

					END IF ;

					 -- VÉRIFIE QUE LE TYPE D'ENSEMBLE EST PRÉSENT DANS LE RÉFÉRENTIEL
					SELECT COUNT ( * ) INTO V_CURRENTCOUNTGAR FROM KTYPVALD WHERE KGMTYVAL = V_ENSGAR AND KGMBASE = V_TYPE ;
					SET V_COUNTGAR = V_COUNTGAR + V_CURRENTCOUNTGAR ;
				END FOR ;

				IF ( V_COUNTGAR = 0 ) THEN
					SET P_ERROR = ';' CONCAT V_GARANTIE CONCAT '_ASSIETTE AUTOMATIQUE ET OBLIGATOIRE IMPOSSIBLE À DÉTERMINER' ;
				END IF ;
			END P2 ;

			IF ( V_ALIMAUTO = 'A' AND V_VALACTU = 0 ) THEN
				SET P_ERROR = ';' CONCAT V_GARANTIE CONCAT '_ASSIETTE AUTOMATIQUE ET OBLIGATOIRE NON RENSEIGNÉE' ;
			END IF ;
		END IF ;
	END IF ;
	SET P_ERROR = TRIM ( P_ERROR ) ;

END P1  ;