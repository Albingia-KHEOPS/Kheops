CREATE PROCEDURE SP_CALCULPRIMEGARANTIE ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) ) 
	LANGUAGE SQL 
	SPECIFIC SP_CALCULPRIMEGARANTIE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_MNTHT DECIMAL ( 15 , 2 ) DEFAULT 0 ; 
	DECLARE V_MNTTOTAL DECIMAL ( 15 , 2 ) DEFAULT 0 ; 
	 
	DECLARE V_IDGARAN INTEGER DEFAULT 0 ; 
	DECLARE V_ERROR INTEGER DEFAULT 0 ; 
	 
	DECLARE V_MODIFFORMULE INTEGER DEFAULT 0 ; 
	DECLARE V_NUMAVN INTEGER DEFAULT 0 ; 
	DECLARE V_NUMAVNOPT INTEGER DEFAULT 0 ; 
	DECLARE V_DATEAVN INTEGER DEFAULT 0 ; 
	DECLARE V_DATEAVNOPT INTEGER DEFAULT 0 ; 
	 
	DECLARE V_YEARAVN INTEGER DEFAULT 0 ; 
	DECLARE V_MONTHAVN INTEGER DEFAULT 0 ; 
	DECLARE V_DAYAVN INTEGER DEFAULT 0 ; 
	 
	SET V_IDGARAN = 0 ; 
	SET V_MODIFFORMULE = 0 ; 
	SET V_NUMAVN = 0 ; 
	SET V_NUMAVNOPT = 0 ; 
	SET V_DATEAVN = 0 ; 
	SET V_DATEAVNOPT = 0 ; 
	SET V_YEARAVN = 0 ; 
	SET V_MONTHAVN = 0 ; 
	SET V_DAYAVN = 0 ; 
	 
	SET P_CODEOFFRE = F_PADLEFT ( 9 , P_CODEOFFRE ) ; 
  
	SELECT PBAVN , ( PBAVA * 10000 + PBAVM * 100 + PBAVJ ) 
		INTO V_NUMAVN , V_DATEAVN 
	FROM YPOBASE WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
	 
	FOR CURSOR_PORTEE AS FREE_LIST CURSOR FOR 
		SELECT KDFID IDPORTEE , KDFKDEID IDGARAN , KDFFOR CODEFOR , KDFOPT CODEOPT , KDFRSQ CODERSQ , KDFOBJ CODEOBJ , 
			KDFPRA VALPRIME , KDFPRU UNITPRIME , KDFTYC TYPECALPRIME , KDEALA TYPEALIM , 
			JGVAL VALOBJ , JGVAT TYPEOBJ , JGVAU UNITOBJ , ( JGVFA * 10000 + JGVFM * 100 + JGVFJ ) DATEAVNOBJ 
		FROM KPGARAP 
			INNER JOIN KPGARAN ON KDEID = KDFKDEID AND ( KDEALA = 'B' OR KDEALA = 'C' ) AND KDEGAN <> '' AND KDEGAN <> 'E' 
			INNER JOIN KPOPTD ON KDEKDCID = KDCID 
			INNER JOIN KPOPT ON KDCKDBID = KDBID 
			INNER JOIN YPRTOBJ ON JGIPB = KDFIPB AND JGALX = KDFALX AND JGRSQ = KDFRSQ AND JGOBJ = KDFOBJ 
				/* AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ ) >= ( KDBAVA * 10000 + KDBAVM * 100 + KDBAVJ )  */ 
				AND ( ( JGVFA * 10000 + JGVFM * 100 + JGVFJ ) >= ( KDBAVA * 10000 + KDBAVM * 100 + KDBAVJ ) OR ( JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ) 
		WHERE KDFIPB = P_CODEOFFRE AND KDFALX = P_VERSION AND KDFTYP = P_TYPE 
		ORDER BY IDGARAN
	DO 
		SET V_MNTHT = 0 ; 
		IF ( V_IDGARAN != IDGARAN ) THEN 
			 
			IF ( V_IDGARAN != 0 ) THEN 
				IF ( V_ERROR = 1 ) THEN 
					SET V_MNTTOTAL = 0 ; 
				END IF ; 
				 --UPDATE KPGARTAR SET KDGPRIVALO = V_MNTTOTAL , KDGPRIVALA = V_MNTTOTAL , KDGPRIUNIT = 'D' WHERE KDGKDEID = V_IDGARAN ; 
				UPDATE KPGARTAR SET KDGPRIVALO = V_MNTTOTAL , KDGPRIVALA = V_MNTTOTAL , KDGPRIUNIT = 'D' WHERE KDGKDEID = V_IDGARAN ; 
			END IF ; 
			 
			SET V_ERROR = 0 ; 
			SET V_MNTTOTAL = 0 ; 
			 
			SET V_IDGARAN = IDGARAN ; 
			CASE TRIM ( TYPECALPRIME ) 
				WHEN 'M' THEN 
					SET V_MNTHT = VALPRIME ; 
				WHEN 'X' THEN 
					IF ( TRIM ( UNITPRIME ) = 'D' ) THEN 
						SET V_MNTHT = ( VALOBJ * VALPRIME ) ; 
					END IF ; 
					IF ( TRIM ( UNITPRIME ) = '%' ) THEN 
						SET V_MNTHT = ( VALOBJ * VALPRIME / 100 ) ; 
					END IF ; 
					IF ( TRIM ( UNITPRIME ) = '%0' ) THEN 
						SET V_MNTHT = ( VALOBJ * VALPRIME / 1000 ) ; 
					END IF ; 
				ELSE 
					SET V_MNTHT = 0 ; 
					SET V_ERROR = 1 ; 
			END CASE ; 
			IF ( V_MNTHT = 0 ) THEN 
				SET V_ERROR = 1 ; 
			ELSE 
				SET V_MNTTOTAL = V_MNTTOTAL + V_MNTHT ; 
			END IF ; 
		ELSE 
			CASE TRIM ( TYPECALPRIME ) 
				WHEN 'M' THEN 
					SET V_MNTHT = VALPRIME ; 
				WHEN 'X' THEN 
					IF ( TRIM ( UNITPRIME ) = 'D' ) THEN 
						SET V_MNTHT = ( VALOBJ * VALPRIME ) ; 
					END IF ; 
					IF ( TRIM ( UNITPRIME ) = '%' ) THEN 
						SET V_MNTHT = ( VALOBJ * VALPRIME / 100 ) ; 
					END IF ; 
					IF ( TRIM ( UNITPRIME ) = '%0' ) THEN 
						SET V_MNTHT = ( VALOBJ * VALPRIME / 1000 ) ; 
					END IF ; 
				ELSE 
					SET V_ERROR = 1 ; 
			END CASE ; 
			IF ( V_MNTHT = 0 OR VALOBJ = 0 ) THEN 
				SET V_ERROR = 1 ; 
			ELSE 
				SET V_MNTTOTAL = V_MNTTOTAL + V_MNTHT ; 
			END IF ; 
		END IF ; 
		UPDATE KPGARAP SET KDFMNT = V_MNTHT WHERE KDFID = IDPORTEE ; 
		 
		IF ( V_ERROR = 0 AND V_NUMAVN > 0 ) THEN 
			SET V_DATEAVNOPT = 0 ; 
			SET V_NUMAVNOPT = 0 ; 
			SELECT KDBAVG , ( KDBAVA * 10000 + KDBAVM * 100 + KDBAVJ ) 
				INTO V_NUMAVNOPT , V_DATEAVNOPT 
				FROM KPOPT 
			WHERE KDBIPB = P_CODEOFFRE AND KDBALX = P_VERSION AND KDBTYP = P_TYPE AND KDBFOR = CODEFOR AND KDBOPT = CODEOPT ; 
			IF ( V_NUMAVNOPT <> V_NUMAVN ) THEN 
				IF ( V_DATEAVNOPT <> 0 AND V_DATEAVNOPT < DATEAVNOBJ ) THEN 
					SET V_DATEAVNOPT = DATEAVNOBJ ; 
				END IF ; 
				IF ( V_DATEAVNOPT < V_DATEAVN ) THEN 
					SET V_DATEAVNOPT = V_DATEAVN ; 
				END IF ; 
				 
				SET V_YEARAVN = ROUND ( V_DATEAVNOPT / 10000 , 0 ) ; 
				SET V_MONTHAVN = ROUND ( ( V_DATEAVNOPT - ( V_YEARAVN * 10000 ) ) / 100 , 0 ) ; 
				SET V_DAYAVN = ROUND ( ( V_DATEAVNOPT - ( V_YEARAVN * 10000 ) - ( V_MONTHAVN * 100 ) ) , 0 ) ; 
				 
				UPDATE KPOPT SET KDBAVG = V_NUMAVN , KDBAVA = V_YEARAVN , KDBAVM = V_MONTHAVN , KDBAVJ = V_DAYAVN 
					WHERE KDBIPB = P_CODEOFFRE AND KDBALX = P_VERSION AND KDBTYP = P_TYPE AND KDBFOR = CODEFOR AND KDBOPT = CODEOPT ; 
			END IF ; 
		END IF ; 
		 
	END FOR ; 
	 
	IF ( V_ERROR = 1 ) THEN 
		SET V_MNTTOTAL = 0 ; 
	END IF ; 
	 --UPDATE KPGARTAW SET KDGPRIVALO = V_MNTTOTAL , KDGPRIVALA = V_MNTTOTAL , KDGPRIUNIT = 'D' WHERE KDGKDEID = V_IDGARAN ; 
	UPDATE KPGARTAR SET KDGPRIVALO = V_MNTTOTAL , KDGPRIVALA = V_MNTTOTAL , KDGPRIUNIT = 'D' WHERE KDGKDEID = V_IDGARAN ; 
  
END P1  ; 
  


