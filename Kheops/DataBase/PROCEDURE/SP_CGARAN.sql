CREATE OR REPLACE PROCEDURE SP_CGARAN(
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODEOPTIONDTL INTEGER , 
	IN P_NEWCODEOPTIONDTL INTEGER , 
	IN P_NEWVERSION INTEGER , 
	IN P_CODECONTRAT CHAR(9) , 
	IN P_VERSIONCONTRAT INTEGER , 
	IN P_DATESYSTEME VARCHAR(8) , 
	IN P_USER VARCHAR(15) , 
	IN P_TRAITEMENT VARCHAR(1) , 
	IN P_COPYCODEOFFRE CHAR(9) , 
	IN P_COPYVERSION INTEGER , 
	IN P_MODECOPY CHAR(7) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_NEWCODEGARAN INTEGER DEFAULT 0 ; 
	DECLARE V_NEWCODEGARAP INTEGER DEFAULT 0 ; 
	DECLARE V_NEWCODEINVEN INTEGER DEFAULT 0 ; 
	 
	DECLARE V_CODEOFFRE VARCHAR ( 9 ) DEFAULT '' ; 
	DECLARE V_TYPEOFFRE VARCHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_VERSOFFRE INTEGER DEFAULT 0 ; 
	DECLARE V_NEWVERS INTEGER DEFAULT 0 ; 
	 
	 
	SET P_CODEOFFRE = LPAD ( TRIM ( P_CODEOFFRE ) , 9 , ' ') ;
	SET P_CODECONTRAT = LPAD ( TRIM ( P_CODECONTRAT ) , 9 , ' ') ;
	SET P_COPYCODEOFFRE = LPAD ( TRIM ( P_COPYCODEOFFRE ) , 9 , ' ') ;

	SET V_CODEOFFRE = P_CODEOFFRE ; 
	SET V_TYPEOFFRE = P_TYPE ; 
	SET V_VERSOFFRE = P_VERSION ; 
	SET V_NEWVERS = P_NEWVERSION ; 
	 
	IF ( P_TRAITEMENT = 'P' ) THEN 
		SET V_CODEOFFRE = P_CODECONTRAT ; 
		SET V_TYPEOFFRE = 'P' ; 
		SET V_VERSOFFRE = P_VERSIONCONTRAT ; 
		SET V_NEWVERS = P_VERSIONCONTRAT ; 
	END IF ; 
	 
	IF ( P_TRAITEMENT = 'C' ) THEN 
		SET V_CODEOFFRE = P_COPYCODEOFFRE ; 
		SET V_VERSOFFRE = P_COPYVERSION ; 
		SET V_NEWVERS = P_COPYVERSION ; 
	END IF ; 
	 
	FOR FORM_LOOP AS FREE_LIST CURSOR FOR 
		SELECT KDEID CODEGARAN , KDEKDFID CODEGARAP , KDEINVEN CODEINVEN FROM KPGARAN 
		WHERE KDEKDCID = P_CODEOPTIONDTL 
	DO 
		CALL SP_SECOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDEID' , CODEGARAN , V_NEWCODEGARAN ) ; 
		IF ( V_NEWCODEGARAN = 0 ) THEN 
			CALL SP_NCHRONO ( 'KDEID' , V_NEWCODEGARAN ) ; 
			CALL SP_INCOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDEID' , CODEGARAN , V_NEWCODEGARAN ) ; 
		END IF ; 
		 
		IF ( TRIM ( P_MODECOPY ) = 'VERSION' ) THEN 
			INSERT INTO KPGARAN 
			( SELECT V_NEWCODEGARAN , V_TYPEOFFRE , V_CODEOFFRE , V_NEWVERS , KDEFOR , KDEOPT , P_NEWCODEOPTIONDTL , KDEGARAN , 
			KDESEQ , KDENIVEAU , KDESEM , KDESE1 , KDETRI , KDENUMPRES , KDEAJOUT , KDECAR , KDENAT , KDEGAN , V_NEWCODEGARAP , 
			KDEDEFG , KDEKDHID , KDEDATDEB , KDEHEUDEB , KDEDATFIN , KDEHEUFIN , KDEDUREE , KDEDURUNI , KDEPRP , KDETYPEMI , 
			KDEALIREF , KDECATNAT , KDEINA , KDETAXCOD , KDETAXREP , 0 , P_USER , P_DATESYSTEME , 0 , KDEASVALO , 
			KDEASVALA , KDEASVALW , KDEASUNIT , KDEASBASE , KDEASMOD , KDEASOBLI , KDEINVSP , KDEINVEN , KDEWDDEB , 
			KDEWHDEB , KDEWDFIN , KDEWHFIN , KDETCD , KDEMODI , KDEPIND , KDEPCATN , KDEPREF , KDEPPRP , KDEPEMI , KDEPTAXC , KDEPNTM , KDEALA , KDEPALA , KDEALO 
			FROM KPGARAN WHERE KDEID = CODEGARAN ) ; 
			 
			CALL SP_CGARTAR ( P_CODEOFFRE , P_VERSION , P_TYPE , CODEGARAN , V_NEWCODEGARAN , P_NEWVERSION , P_CODECONTRAT , P_VERSIONCONTRAT , P_DATESYSTEME , P_USER , P_TRAITEMENT , P_COPYCODEOFFRE , P_COPYVERSION , P_MODECOPY ) ; 
			 
			CALL SP_CGARAP ( P_CODEOFFRE , P_VERSION , P_TYPE , CODEGARAN , V_NEWCODEGARAN , P_NEWVERSION , P_CODECONTRAT , P_VERSIONCONTRAT , P_DATESYSTEME , P_USER , P_TRAITEMENT , P_COPYCODEOFFRE , P_COPYVERSION ) ; 
			 
			INSERT INTO KPGARAH 
			( SELECT V_NEWCODEGARAN , V_TYPEOFFRE , V_CODEOFFRE , V_NEWVERS , KDEFOR , KDEOPT , P_NEWCODEOPTIONDTL , KDEGARAN , 
			KDESEQ , KDENIVEAU , KDESEM , KDESE1 , KDETRI , KDENUMPRES , KDEAJOUT , KDECAR , KDENAT , KDEGAN , V_NEWCODEGARAP , 
			KDEDEFG , KDEKDHID , KDEDATDEB , KDEHEUDEB , KDEDATFIN , KDEHEUFIN , KDEDUREE , KDEDURUNI , KDEPRP , KDETYPEMI , 
			KDEALIREF , KDECATNAT , KDEINA , KDETAXCOD , KDETAXREP , 0 , P_USER , P_DATESYSTEME , 0 , KDEASVALO , 
			KDEASVALA , KDEASVALW , KDEASUNIT , KDEASBASE , KDEASMOD , KDEASOBLI , KDEINVSP , V_NEWCODEINVEN , KDEWDDEB , 
			KDEWHDEB , KDEWDFIN , KDEWHFIN , KDETCD , KDEMODI , KDEPIND , KDEPCATN , KDEPREF , KDEPPRP , KDEPEMI , KDEPTAXC , KDEPNTM , KDEALA , KDEPALA , KDEALO 
			FROM KPGARAH WHERE KDEID = CODEGARAN ) ; 
		 
		ELSE 
			IF ( TRIM ( P_MODECOPY ) = 'AFFNOUV' OR TRIM ( P_MODECOPY ) = 'VERSION' ) THEN 
				INSERT INTO KPGARAN 
				( SELECT V_NEWCODEGARAN , V_TYPEOFFRE , V_CODEOFFRE , V_NEWVERS , KDEFOR , KDEOPT , P_NEWCODEOPTIONDTL , KDEGARAN , 
				KDESEQ , KDENIVEAU , KDESEM , KDESE1 , KDETRI , KDENUMPRES , KDEAJOUT , KDECAR , KDENAT , KDEGAN , V_NEWCODEGARAP , 
				KDEDEFG , KDEKDHID , KDEDATDEB , KDEHEUDEB , KDEDATFIN , KDEHEUFIN , KDEDUREE , KDEDURUNI , KDEPRP , KDETYPEMI , 
				KDEALIREF , KDECATNAT , KDEINA , KDETAXCOD , KDETAXREP , 0 , P_USER , P_DATESYSTEME , 0 , KDEASVALO , 
				KDEASVALA , KDEASVALW , KDEASUNIT , KDEASBASE , KDEASMOD , KDEASOBLI , KDEINVSP , KDEINVEN , 0 , 
				0 , 0 , 0 , KDETCD , KDEMODI , KDEPIND , KDEPCATN , KDEPREF , KDEPPRP , KDEPEMI , KDEPTAXC , KDEPNTM , KDEALA , KDEPALA , KDEALO 
				FROM KPGARAN WHERE KDEID = CODEGARAN ) ; 
			ELSE 
				INSERT INTO KPGARAN 
				( SELECT V_NEWCODEGARAN , V_TYPEOFFRE , V_CODEOFFRE , V_NEWVERS , KDEFOR , KDEOPT , P_NEWCODEOPTIONDTL , KDEGARAN , 
				KDESEQ , KDENIVEAU , KDESEM , KDESE1 , KDETRI , KDENUMPRES , KDEAJOUT , KDECAR , KDENAT , KDEGAN , V_NEWCODEGARAP , 
				KDEDEFG , KDEKDHID , 0 , 0 , 0 , 0 , 0 , '' , KDEPRP , KDETYPEMI , 
				KDEALIREF , KDECATNAT , KDEINA , KDETAXCOD , KDETAXREP , 0 , P_USER , P_DATESYSTEME , 0 , 0 , 
				0 , 0 , KDEASUNIT , KDEASBASE , KDEASMOD , KDEASOBLI , KDEINVSP , KDEINVEN , 0 , 
				0 , 0 , 0 , KDETCD , KDEMODI , KDEPIND , KDEPCATN , KDEPREF , KDEPPRP , KDEPEMI , KDEPTAXC , KDEPNTM , KDEALA , KDEPALA , KDEALO 
				FROM KPGARAN WHERE KDEID = CODEGARAN ) ; 
			END IF ; 
						 
			CALL SP_CGARTAR ( P_CODEOFFRE , P_VERSION , P_TYPE , CODEGARAN , V_NEWCODEGARAN , P_NEWVERSION , P_CODECONTRAT , P_VERSIONCONTRAT , P_DATESYSTEME , P_USER , P_TRAITEMENT , P_COPYCODEOFFRE , P_COPYVERSION , P_MODECOPY ) ; 
			 
			CALL SP_CGARAP ( P_CODEOFFRE , P_VERSION , P_TYPE , CODEGARAN , V_NEWCODEGARAN , P_NEWVERSION , P_CODECONTRAT , P_VERSIONCONTRAT , P_DATESYSTEME , P_USER , P_TRAITEMENT , P_COPYCODEOFFRE , P_COPYVERSION ) ; 
			 
			IF ( TRIM ( P_MODECOPY ) = 'AFFNOUV' OR TRIM ( P_MODECOPY ) = 'VERSION' ) THEN 
				INSERT INTO KPGARAH 
				( SELECT V_NEWCODEGARAN , V_TYPEOFFRE , V_CODEOFFRE , V_NEWVERS , KDEFOR , KDEOPT , P_NEWCODEOPTIONDTL , KDEGARAN , 
				KDESEQ , KDENIVEAU , KDESEM , KDESE1 , KDETRI , KDENUMPRES , KDEAJOUT , KDECAR , KDENAT , KDEGAN , V_NEWCODEGARAP , 
				KDEDEFG , KDEKDHID , KDEDATDEB , KDEHEUDEB , KDEDATFIN , KDEHEUFIN , KDEDUREE , KDEDURUNI , KDEPRP , KDETYPEMI , 
				KDEALIREF , KDECATNAT , KDEINA , KDETAXCOD , KDETAXREP , 0 , P_USER , P_DATESYSTEME , 0 , KDEASVALO , 
				KDEASVALA , KDEASVALW , KDEASUNIT , KDEASBASE , KDEASMOD , KDEASOBLI , KDEINVSP , V_NEWCODEINVEN , 0 , 
				0 , 0 , 0 , KDETCD , KDEMODI , KDEPIND , KDEPCATN , KDEPREF , KDEPPRP , KDEPEMI , KDEPTAXC , KDEPNTM , KDEALA , KDEPALA , KDEALO 
				FROM KPGARAH WHERE KDEID = CODEGARAN ) ; 
			ELSE 
				INSERT INTO KPGARAH 
				( SELECT V_NEWCODEGARAN , V_TYPEOFFRE , V_CODEOFFRE , V_NEWVERS , KDEFOR , KDEOPT , P_NEWCODEOPTIONDTL , KDEGARAN , 
				KDESEQ , KDENIVEAU , KDESEM , KDESE1 , KDETRI , KDENUMPRES , KDEAJOUT , KDECAR , KDENAT , KDEGAN , V_NEWCODEGARAP , 
				KDEDEFG , KDEKDHID , 0 , 0 , 0 , 0 , 0 , '' , KDEPRP , KDETYPEMI , 
				KDEALIREF , KDECATNAT , KDEINA , KDETAXCOD , KDETAXREP , 0 , P_USER , P_DATESYSTEME , 0 , 0 , 
				0 , 0 , KDEASUNIT , KDEASBASE , KDEASMOD , KDEASOBLI , KDEINVSP , V_NEWCODEINVEN , 0 , 
				0 , 0 , 0 , KDETCD , KDEMODI , KDEPIND , KDEPCATN , KDEPREF , KDEPPRP , KDEPEMI , KDEPTAXC , KDEPNTM , KDEALA , KDEPALA , KDEALO 
				FROM KPGARAH WHERE KDEID = CODEGARAN ) ; 
			END IF ; 
		END IF ; 
	 
	 
	END FOR ; 
  
END P1  ; 
  

  

