CREATE PROCEDURE SP_CHECKDATESGAR ( 
	IN P_GUIDID INTEGER , 
	IN P_DATEDEB NUMERIC(14, 0) , 
	IN P_DATEFIN NUMERIC(14, 0) , 
	OUT P_RETOUR INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_CHECKDATESGAR 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	 
	DECLARE CNT_ASC INTEGER DEFAULT 0 ; 
	DECLARE CNT_DSC INTEGER DEFAULT 0 ; 
	 
	 --contrôle du père 
	WITH GARANTIES ( IDGARANTIE , SEQ , SEQPARENT , CODEAFFAIRE , CODEFORMULE , CODEOPTION , TYPEGAR , VERSIONGAR , DATEDEB , DATEFIN ) AS 
	( 
	SELECT KDEID , KDESEQ , KDESEM , KDEIPB , KDEFOR , KDEOPT , KDETYP , KDEALX , ( KDEDATDEB * 1000000 + KDEHEUDEB ) , ( KDEDATFIN * 1000000 + KDEHEUFIN ) 
	FROM KPGARAN 
	WHERE KDEID = P_GUIDID 
	UNION ALL 
	SELECT KDEID , KDESEQ , KDESEM , KDEIPB , KDEFOR , KDEOPT , KDETYP , KDEALX , ( KDEDATDEB * 1000000 + KDEHEUDEB ) , ( KDEDATFIN * 1000000 + KDEHEUFIN ) 
	FROM KPGARAN 
			INNER JOIN GARANTIES ON KDESEQ = GARANTIES . SEQPARENT 
			AND KDEIPB = F_PADLEFT ( 9 , GARANTIES . CODEAFFAIRE ) 
			AND KDEFOR = GARANTIES . CODEFORMULE 
			AND KDEOPT = GARANTIES . CODEOPTION AND KDETYP = GARANTIES . TYPEGAR AND KDEALX = GARANTIES . VERSIONGAR 
	) 
	SELECT COUNT ( * ) INTO CNT_ASC 
	FROM GARANTIES 
	WHERE ( ( DATEDEB <> 0 AND DATEFIN <> 0 AND DATEFIN <> 235900 AND P_DATEDEB <> 0 AND ( DATEDEB > P_DATEDEB OR DATEFIN < P_DATEDEB ) ) 
		OR ( DATEDEB <> 0 AND DATEFIN <> 0 AND DATEFIN <> 235900 AND P_DATEFIN <> 0 AND ( DATEFIN < P_DATEFIN OR DATEDEB > P_DATEFIN ) ) 
		OR ( DATEDEB <> 0 AND DATEFIN = 0 AND P_DATEDEB <> 0 AND DATEDEB > P_DATEDEB ) 
		OR ( DATEDEB = 0 AND DATEFIN <> 0 AND DATEFIN <> 235900 AND P_DATEDEB <> 0 AND DATEFIN < P_DATEDEB ) 
		OR ( DATEDEB = 0 AND DATEFIN <> 0 AND DATEFIN <> 235900 AND P_DATEFIN <> 0 AND DATEFIN < P_DATEFIN ) 
		OR ( DATEDEB <> 0 AND DATEFIN = 0 AND P_DATEFIN <> 0 AND DATEDEB > P_DATEFIN ) ) 
		AND IDGARANTIE <> P_GUIDID ; 
		 
		 
	 --contrôle du fils	 
	WITH GARANTIES ( IDGARANTIE , SEQ , SEQPARENT , CODEAFFAIRE , CODEFORMULE , CODEOPTION , TYPEGAR , VERSIONGAR , DATEDEB , DATEFIN ) AS 
	( 
	SELECT KDEID , KDESEQ , KDESEM , KDEIPB , KDEFOR , KDEOPT , KDETYP , KDEALX , ( KDEDATDEB * 1000000 + KDEHEUDEB ) , ( KDEDATFIN * 1000000 + KDEHEUFIN ) 
	FROM KPGARAN 
	WHERE KDEID = P_GUIDID 
	UNION ALL 
	SELECT KDEID , KDESEQ , KDESEM , KDEIPB , KDEFOR , KDEOPT , KDETYP , KDEALX , ( KDEDATDEB * 1000000 + KDEHEUDEB ) , ( KDEDATFIN * 1000000 + KDEHEUFIN ) 
	FROM KPGARAN 
			INNER JOIN GARANTIES ON KDESEM = GARANTIES . SEQ 
			AND KDEIPB = F_PADLEFT ( 9 , GARANTIES . CODEAFFAIRE ) 
			AND KDEFOR = GARANTIES . CODEFORMULE 
			AND KDEOPT = GARANTIES . CODEOPTION AND KDETYP = GARANTIES . TYPEGAR AND KDEALX = GARANTIES . VERSIONGAR 
	) 
	SELECT COUNT ( * ) INTO CNT_DSC 
	FROM GARANTIES 
	WHERE ( ( DATEDEB <> 0 AND DATEFIN <> 0 AND DATEFIN <> 235900 AND P_DATEDEB <> 0 AND ( DATEDEB < P_DATEDEB OR DATEFIN < P_DATEDEB ) ) 
		OR ( DATEDEB <> 0 AND DATEFIN <> 0 AND DATEFIN <> 235900 AND P_DATEFIN <> 0 AND ( DATEFIN > P_DATEFIN OR DATEDEB > P_DATEFIN ) ) 
		OR ( DATEDEB <> 0 AND DATEFIN = 0 AND P_DATEDEB <> 0 AND DATEDEB < P_DATEDEB ) 
		OR ( DATEDEB = 0 AND DATEFIN <> 0 AND DATEFIN <> 235900 AND P_DATEDEB <> 0 AND DATEFIN < P_DATEDEB ) 
		OR ( DATEDEB = 0 AND DATEFIN <> 0 AND DATEFIN <> 235900 AND P_DATEFIN <> 0 AND DATEFIN > P_DATEFIN ) 
		OR ( DATEDEB <> 0 AND DATEFIN = 0 AND P_DATEFIN <> 0 AND DATEDEB > P_DATEFIN ) ) 
		AND IDGARANTIE <> P_GUIDID ; 
		 
		 
	SET P_RETOUR = CNT_ASC + CNT_DSC ; 
  
END P1  ; 
  

  

