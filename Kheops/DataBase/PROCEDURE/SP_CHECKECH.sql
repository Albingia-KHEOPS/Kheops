CREATE PROCEDURE SP_CHECKECH ( 
	IN P_CODECONTRAT CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODEAVN INTEGER , 
	IN P_DATENOW INTEGER , 
	OUT P_ERROR INTEGER ) 
	LANGUAGE SQL 
	SPECIFIC SP_CHECKECH 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_PERIODICITE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NBLIGN INTEGER DEFAULT 0 ; 
	DECLARE V_SUMECH DECIMAL ( 9 , 6 ) DEFAULT 0 ; 
	DECLARE V_DIFFMONT DECIMAL ( 9 , 6 ) DEFAULT 0 ; 
	DECLARE V_DIFFECH DECIMAL ( 9 , 6 ) DEFAULT 0 ; 
	DECLARE V_SOUSECH DECIMAL ( 20 , 6 ) DEFAULT 0 ; 
  
	DECLARE V_TOTAL DECIMAL ( 11 , 2 ) DEFAULT 0 ; 
	DECLARE V_SUMYPOMONT DECIMAL ( 20 , 6 ) DEFAULT 0 ; 
	DECLARE V_SUMYPOECH DECIMAL ( 20 , 6 ) DEFAULT 0 ; 
		 
	SET P_ERROR = 0 ; 
	 
	FOR LOOP_ECH AS FREE_LIST CURSOR FOR 
		SELECT ( PIEHA * 10000 + PIEHM * 100 + PIEHJ ) DATEECH 
			FROM YPOECHE 
			WHERE TRIM ( PIIPB ) = TRIM ( P_CODECONTRAT ) AND PIALX = P_VERSION AND PITYP = P_TYPE AND PIEHE <> 1 
	DO 
		IF ( DATEECH < P_DATENOW ) THEN 
			SET P_ERROR = 3 ; /* ERREUR: DATE ECHÉANCE EST INCOHÉRENTE AVEC LA DATE DE JOUR  */ 
		END IF ; 
	END FOR ; 
  
	IF ( P_ERROR = 0 ) THEN 
	 
	/* SELECT JDTMG - ( SELECT SUM ( PIPMR ) FROM YPOECHE WHERE TRIM ( PIIPB ) = TRIM ( P_CODECONTRAT ) AND PIALX = P_VERSION AND PITYP = P_TYPE ) INTO V_DIFFECH           
	FROM YPRTENT           
		WHERE TRIM ( JDIPB ) = TRIM ( P_CODECONTRAT ) AND JDALX = P_VERSION ;   */ 
	/* CHANGEMENT DU CONTRÔLE : ON CONTRÔLE LA SOMME DES POURCENTAGES (VU AVEC FDU LE 03-10-2015)	 */ 
	/* SELECT SUM(PIPCR), SUM ( PIPCC ) INTO V_DIFFMONT, V_DIFFECH FROM YPOECHE WHERE TRIM ( PIIPB ) = TRIM ( P_CODECONTRAT ) AND PIALX = P_VERSION AND PITYP = P_TYPE ;          
	          
	IF ( V_DIFFMONT != 100 AND V_DIFFECH != 100 ) THEN          
		SET P_ERROR = 2 ;          
	ELSE */	 
		SELECT PBPER INTO V_PERIODICITE FROM YPOBASE WHERE TRIM ( PBIPB ) = TRIM ( P_CODECONTRAT ) AND PBALX = P_VERSION AND PBTYP = P_TYPE AND PBAVN = P_CODEAVN ; 
		IF ( TRIM ( V_PERIODICITE ) = 'E' ) THEN 
			SET V_NBLIGN = 0 ; 
			SELECT COUNT ( * ) INTO V_NBLIGN FROM YPOECHE WHERE TRIM ( PIIPB ) = TRIM ( P_CODECONTRAT ) AND PIALX = P_VERSION AND PITYP = P_TYPE AND PIEHE <> 1 ; 
			IF ( V_NBLIGN < 1 ) THEN 
				SET P_ERROR = 1 ; /* ERREUR : IL FAUT SAISIR AU MOINS UNE ÉCHEANCE */ 
			ELSE 
				SET V_SUMECH = 0 ; 
				SELECT SUM ( PIPCR ) , SUM ( PIPCC ) INTO V_DIFFMONT , V_DIFFECH FROM YPOECHE WHERE TRIM ( PIIPB ) = TRIM ( P_CODECONTRAT ) AND PIALX = P_VERSION AND PITYP = P_TYPE ; 
				 
				SELECT JDTMG , SUM ( PIPMR ) , SUM ( PIPMC ) INTO V_TOTAL , V_SUMYPOMONT , V_SUMYPOECH 
					FROM YPRTENT 
						INNER JOIN YPOECHE ON PIIPB = JDIPB AND PIALX = JDALX AND PITYP = P_TYPE 
					WHERE TRIM ( JDIPB ) = TRIM ( P_CODECONTRAT ) AND JDALX = P_VERSION 
					GROUP BY JDTMG ; 
				 
				IF ( ( V_DIFFMONT != 100 AND V_DIFFECH != 100 ) OR ( ( V_TOTAL - V_SUMYPOMONT ) != 0 AND ( V_TOTAL - V_SUMYPOECH ) != 0 ) ) THEN  --OR ( V_SOUSECH != 0 ) ) THEN 
					SET P_ERROR = 2 ; /* ERREUR : LA SOMME DES MONTANTS N'EST PAS ÉGALE À LA PRIME TOTALE */ 
				END IF ;			 
			END IF ; 
		END IF ; 
	/* END IF ;  */ 
	END IF ; 
END P1  ; 
  

  

