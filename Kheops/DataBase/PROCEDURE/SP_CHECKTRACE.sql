CREATE OR REPLACE PROCEDURE SP_CHECKTRACE(
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_AVENANT INTEGER , 
	IN P_PERIMETRE CHAR(10) , 
	IN P_STOP CHAR(10) , 
	IN P_DESCRIPTION CHAR(5000) , 
	IN P_REGIMETAXE CHAR(1) , 
	IN P_CATNAT CHAR(1) , 
	IN P_ANTECEDENT CHAR(1) , 
	IN P_PERIODICITE CHAR(1) , 
	IN P_ECHPRINCIPJOUR INTEGER , 
	IN P_ECHPRINCIPMOIS INTEGER , 
	IN P_PROCHECHJOUR INTEGER , 
	IN P_PROCHECHMOIS INTEGER , 
	IN P_PROCHECHANNEE INTEGER , 
	IN P_FINEFFETJOUR INTEGER , 
	IN P_FINEFFETMOIS INTEGER , 
	IN P_FINEFFETANNEE INTEGER , 
	IN P_FINEFFETHEURE INTEGER , 
	IN P_DUREE INTEGER , 
	IN P_DUREEUNITE CHAR(1) , 
	IN P_NBMOISRESIL INTEGER , 
	IN P_APERITEUR CHAR(6) , 
	IN P_NATURECONTRAT CHAR(1) , 
	IN P_PARTALBINGIA DECIMAL(5, 2) , 
	IN P_FRAISAPE DECIMAL(5, 2) , 
	IN P_COUVERTURE INTEGER , 
	IN P_INTERCALAIRE CHAR(1) , 
	IN P_COURTIERGEST INTEGER , 
	IN P_ENCAISSEMENT CHAR(1) , 
	IN P_COURTIERPAY INTEGER , 
	IN P_PRENEURASS INTEGER , 
	IN P_PRENEURESTASSURE CHAR(1) , 
	IN P_ADRCP CHAR(5) , 
	IN P_ADRDEP CHAR(2) , 
	IN P_ADRVILLE CHAR(32) , 
	IN P_USER CHAR(10) , 
	IN P_DATENOWJOUR INTEGER , 
	IN P_DATENOWMOIS INTEGER , 
	IN P_DATENOWANNEE INTEGER , 
	IN P_HEURENOW INTEGER ) 
	LANGUAGE SQL 
	SPECIFIC SP_CHECKTRACE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	 
	DECLARE V_OLDREGIMETAXE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_OLDANTECEDENT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_OLDSTOP CHAR ( 10 ) DEFAULT '' ; 
	DECLARE V_OLDPERIODICITE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_OLDECHJOUR INTEGER DEFAULT 0 ; 
	DECLARE V_OLDECHMOIS INTEGER DEFAULT 0 ; 
	DECLARE V_OLDECHEANCE INTEGER DEFAULT 0 ; 
	DECLARE V_ECHEANCE INTEGER DEFAULT 0 ; 
	DECLARE V_OLDFINEFFETJOUR INTEGER DEFAULT 0 ; 
	DECLARE V_OLDFINEFFETMOIS INTEGER DEFAULT 0 ; 
	DECLARE V_OLDFINEFFETANNEE INTEGER DEFAULT 0 ; 
	DECLARE V_OLDFINEFFET INTEGER DEFAULT 0 ; 
	DECLARE V_FINEFFET INTEGER DEFAULT 0 ; 
	DECLARE V_OLDFINEFFETHEURE INTEGER DEFAULT 0 ; 
	DECLARE V_OLDDUREE INTEGER DEFAULT 0 ; 
	DECLARE V_OLDDUREEUNITE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_OLDNATURECONTRAT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_OLDPARTALBINGIA DECIMAL ( 5 , 2 ) DEFAULT 0 ; 
	DECLARE V_OLDCOUVERTURE INTEGER DEFAULT 0 ; 
	DECLARE V_OLDCATNAT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_OLDPROCHECHJOUR INTEGER DEFAULT 0 ; 
	DECLARE V_OLDPROCHECHMOIS INTEGER DEFAULT 0 ; 
	DECLARE V_OLDPROCHECHANNEE INTEGER DEFAULT 0 ; 
	DECLARE V_OLDPROCHECHEANCE INTEGER DEFAULT 0 ; 
	DECLARE V_PROCHECHEANCE INTEGER DEFAULT 0 ; 
	DECLARE V_OLDPREAVIS INTEGER DEFAULT 0 ; 
	DECLARE V_OLDINTERCALAIRE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_OLDAPERITEUR CHAR ( 6 ) DEFAULT '' ; 
	DECLARE V_OLDFRAISAPERITEUR DECIMAL ( 5 , 2 ) DEFAULT 0 ; 
  
	DECLARE V_OLDCOURTIERGEST INTEGER DEFAULT 0 ; 
	DECLARE V_OLDENCAISS CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_OLDCOURTIERPAY INTEGER DEFAULT 0 ; 
	DECLARE V_OLDPRENEURASSU INTEGER DEFAULT 0 ; 
	DECLARE V_OLDDEP CHAR ( 2 ) DEFAULT '' ; 
	DECLARE V_OLDCPO CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_OLDVILLE CHAR ( 32 ) DEFAULT '' ; 
	DECLARE V_OLDISPRENEURASSU CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_OLDADR CHAR ( 50 ) DEFAULT '' ; 
	DECLARE V_ADR CHAR ( 50 ) DEFAULT '' ; 
	DECLARE V_ADRCP CHAR ( 4 ) DEFAULT '' ; 
	 
	DECLARE V_CODEDESI INTEGER DEFAULT 0 ; 
	DECLARE V_DATENOW INTEGER DEFAULT 0 ; 
	DECLARE V_EXIT INTEGER DEFAULT 0 ; 
	 
	SET P_CODEOFFRE = LPAD ( TRIM ( P_CODEOFFRE ) , 9 , ' ');

	SET V_DATENOW = P_DATENOWANNEE * 10000 + P_DATENOWMOIS * 100 + P_DATENOWJOUR ; 
  
	DELETE FROM KPAVTRC WHERE KHOIPB = P_CODEOFFRE AND KHOALX = P_VERSION AND KHOTYP = P_TYPE AND KHOPERI = TRIM ( P_PERIMETRE ) ; 
	 
	CASE TRIM ( P_PERIMETRE ) 
		WHEN 'GEN' THEN 
			 --TRAITEMENT DES TRACES POUR LES AVENANTS INFO GENERALES 
			SELECT KAAAVDS INTO V_CODEDESI FROM KPENT WHERE KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
			IF ( V_CODEDESI = 0 ) THEN 
				CALL SP_NCHRONO ( 'KADCHR' , V_CODEDESI ) ; 
				INSERT INTO KPDESI 
					( KADCHR , KADTYP , KADIPB , KADALX , KADDESI ) 
				VALUES 
					( V_CODEDESI , P_TYPE , P_CODEOFFRE , P_VERSION , TRIM ( P_DESCRIPTION ) ) ; 
				UPDATE KPENT SET KAAAVDS = V_CODEDESI WHERE KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
			ELSE 
				UPDATE KPDESI SET KADDESI = TRIM ( P_DESCRIPTION ) WHERE KADCHR = V_CODEDESI ; 
			END IF ;		 
		 
			SELECT PBRGT , PBANT , PBSTP , PBPER , PBECM , PBECJ , 
				PBFEJ , PBFEM , PBFEA , PBFEH , 
				PBCTD , PBCTU , PBNPL , PBAPP , PBPCV , 
				JDCNA , JDPEJ , JDPEM , JDPEA , JDDPV , JDITC , 
				PBAPR 
				INTO V_OLDREGIMETAXE , V_OLDANTECEDENT , V_OLDSTOP , V_OLDPERIODICITE , V_OLDECHJOUR , V_OLDECHMOIS , 
					V_OLDFINEFFETJOUR , V_OLDFINEFFETMOIS , V_OLDFINEFFETANNEE , V_OLDFINEFFETHEURE , 
					V_OLDDUREE , V_OLDDUREEUNITE , V_OLDNATURECONTRAT , V_OLDPARTALBINGIA , V_OLDCOUVERTURE , 
					V_OLDCATNAT , V_OLDPROCHECHJOUR , V_OLDPROCHECHMOIS , V_OLDPROCHECHANNEE , V_OLDPREAVIS , V_OLDINTERCALAIRE , 
					V_OLDAPERITEUR 
			FROM YHPBASE 
				INNER JOIN YHRTENT ON PBIPB = JDIPB AND PBALX = JDALX AND PBAVN = JDAVN AND PBHIN = JDHIN 
			WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE AND PBAVN = ( P_AVENANT - 1 ) AND PBHIN = 1 ; 
  
			SET V_OLDFRAISAPERITEUR = 0 ; 
			SELECT SUM ( PHTXF ) INTO V_OLDFRAISAPERITEUR 
				FROM YHPCOAS 
				WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE AND PHAVN = ( P_AVENANT - 1 ) AND PHHIN = 1 ; 
			 
			IF ( V_OLDREGIMETAXE != P_REGIMETAXE ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PBRGT' , 'M' , V_OLDREGIMETAXE , P_REGIMETAXE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
			IF ( V_OLDANTECEDENT != P_ANTECEDENT ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PBANT' , 'M' , V_OLDANTECEDENT , P_ANTECEDENT , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDSTOP != P_STOP ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PBSTP' , 'M' , V_OLDSTOP , P_STOP , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDPERIODICITE != P_PERIODICITE ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PBPER' , 'M' , V_OLDPERIODICITE , P_PERIODICITE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDECHJOUR != P_ECHPRINCIPJOUR OR V_OLDECHMOIS != P_ECHPRINCIPMOIS ) THEN 
				SET V_OLDECHEANCE = ( V_OLDECHMOIS * 100 + V_OLDECHJOUR ) ; 
				SET V_ECHEANCE = ( P_ECHPRINCIPMOIS * 100 + P_ECHPRINCIPJOUR ) ; 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'ECHPRIN' , 'M' , V_OLDECHEANCE , V_ECHEANCE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ;			 
			END IF ; 
		 
			IF ( V_OLDFINEFFETJOUR != P_FINEFFETJOUR OR V_OLDFINEFFETMOIS != P_FINEFFETMOIS OR V_OLDFINEFFETANNEE != P_FINEFFETANNEE ) THEN 
				SET V_OLDFINEFFET = ( V_OLDFINEFFETANNEE * 10000 + V_OLDFINEFFETMOIS * 100 + V_OLDFINEFFETJOUR ) ; 
				SET V_FINEFFET = ( P_FINEFFETANNEE * 1000 + P_FINEFFETMOIS * 100 + P_FINEFFETJOUR ) ; 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'FINEFFD' , 'M' , V_OLDFINEFFET , V_FINEFFET , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDFINEFFETHEURE != P_FINEFFETHEURE ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'FINEFFH' , 'M' , V_OLDFINEFFETHEURE , P_FINEFFETHEURE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDDUREE != P_DUREE ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PBCTD' , 'M' , V_OLDDUREE , P_DUREE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDDUREEUNITE != P_DUREEUNITE ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PBCTU' , 'M' , V_OLDDUREEUNITE , P_DUREEUNITE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDNATURECONTRAT != P_NATURECONTRAT ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PBNPL' , 'M' , V_OLDNATURECONTRAT , P_NATURECONTRAT , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDPARTALBINGIA != P_PARTALBINGIA ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PBAPP' , 'M' , V_OLDPARTALBINGIA , P_PARTALBINGIA , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDCOUVERTURE != P_COUVERTURE ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PBPCV' , 'M' , V_OLDCOUVERTURE , P_COUVERTURE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
			IF ( V_OLDCATNAT != P_CATNAT ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'JDCNA' , 'M' , V_OLDCATNAT , P_CATNAT , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDPROCHECHJOUR != P_PROCHECHJOUR OR V_OLDPROCHECHMOIS != P_PROCHECHMOIS OR V_OLDPROCHECHANNEE != P_PROCHECHANNEE ) THEN 
				SET V_OLDPROCHECHEANCE = ( V_OLDPROCHECHANNEE * 10000 + V_OLDPROCHECHMOIS * 100 + V_OLDPROCHECHJOUR ) ; 
				SET V_PROCHECHEANCE = ( P_PROCHECHANNEE * 10000 + P_PROCHECHMOIS * 100 + P_PROCHECHJOUR ) ; 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PROECH' , 'M' , V_OLDPROCHECHEANCE , V_PROCHECHEANCE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDPREAVIS != P_NBMOISRESIL ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'JDDPV' , 'M' , V_OLDPREAVIS , P_NBMOISRESIL , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDINTERCALAIRE != P_INTERCALAIRE ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'JDITC' , 'M' , V_OLDINTERCALAIRE , P_INTERCALAIRE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
			IF ( V_OLDAPERITEUR != P_APERITEUR ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PBAPR' , 'M' , V_OLDAPERITEUR , P_APERITEUR , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		 
			IF ( V_OLDFRAISAPERITEUR != P_FRAISAPE ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'PHTXF' , 'M' , V_OLDFRAISAPERITEUR , P_FRAISAPE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
			IF ( ( ( V_OLDNATURECONTRAT = 'A' OR V_OLDNATURECONTRAT = 'E' ) AND ( P_NATURECONTRAT = 'C' OR P_NATURECONTRAT = 'D' OR P_NATURECONTRAT = '' ) ) 
				OR ( ( V_OLDNATURECONTRAT = 'C' OR V_OLDNATURECONTRAT = 'D' ) AND ( P_NATURECONTRAT = 'A' OR P_NATURECONTRAT = 'E' OR P_NATURECONTRAT = '' ) ) ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , 'GEN' , 0 , 0 , 0 , 0 , 'GEN' , 'COASS' , 'M' , '' , '' , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
		WHEN 'BAS' THEN 
			 --TRAITEMENT DES TRACES POUR LES AVENANTS INFO DE BASE 
			IF ( P_ADRCP <> '' ) THEN 
				IF ( LENGTH ( TRIM ( P_ADRCP ) ) = 5 ) THEN 
					SET V_ADRCP = SUBSTR ( P_ADRCP , 3 , 3 ) ; 
				ELSE 
					IF ( TRIM ( P_ADRCP ) = '' OR TRIM ( P_ADRCP ) = '0' ) THEN 
						SET V_ADRCP = '0' ; 
					ELSE 
						SET V_ADRCP = TRIM ( P_ADRCP ) ; 
					END IF ;				 
				END IF ; 
			END IF ; 
  
			SELECT PBICT , PBCTP , PBIAS , PBDEP , PBCPO , PBVIL , 
					JDENC , 
					KAAASS 
			INTO V_OLDCOURTIERGEST , V_OLDCOURTIERPAY , V_OLDPRENEURASSU , V_OLDDEP , V_OLDCPO , V_OLDVILLE , 
					V_OLDENCAISS , 
					V_OLDISPRENEURASSU 
			FROM YHPBASE 
				INNER JOIN YHRTENT ON PBIPB = JDIPB AND PBALX = JDALX AND PBAVN = JDAVN AND PBHIN = JDHIN 
				INNER JOIN HPENT ON PBIPB = KAAIPB AND PBALX = KAAALX AND PBTYP = KAATYP AND PBAVN = KAAAVN AND PBHIN = KAAHIN 
			WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE AND PBAVN = ( P_AVENANT - 1 ) AND PBHIN = 1 ; 
  
			IF ( V_OLDCOURTIERGEST != P_COURTIERGEST ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , P_PERIMETRE , 0 , 0 , 0 , 0 , 'GEN' , 'PBICT' , 'M' , V_OLDCOURTIERGEST , P_COURTIERGEST , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
			IF ( V_OLDCOURTIERPAY != P_COURTIERPAY ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , P_PERIMETRE , 0 , 0 , 0 , 0 , 'GEN' , 'PBCTP' , 'M' , V_OLDCOURTIERPAY , P_COURTIERPAY , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
			IF ( V_OLDPRENEURASSU != P_PRENEURASS ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , P_PERIMETRE , 0 , 0 , 0 , 0 , 'GEN' , 'JDENC' , 'M' , V_OLDENCAISS , P_ENCAISSEMENT , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
			IF ( V_OLDDEP != P_ADRDEP OR V_OLDCPO != V_ADRCP OR V_OLDVILLE != P_ADRVILLE ) THEN 
				SET V_OLDADR = TRIM ( V_OLDDEP ) CONCAT ' ' CONCAT V_OLDCPO CONCAT ' ' CONCAT V_OLDVILLE ; 
				SET V_ADR = TRIM ( P_ADRDEP ) CONCAT ' ' CONCAT V_ADRCP CONCAT ' ' CONCAT P_ADRVILLE ; 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , P_PERIMETRE , 0 , 0 , 0 , 0 , 'GEN' , 'ADDRPRIN' , 'M' , V_OLDADR , V_ADR , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
			IF ( V_OLDENCAISS != P_ENCAISSEMENT ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , P_PERIMETRE , 0 , 0 , 0 , 0 , 'GEN' , 'PBIAS' , 'M' , V_OLDPRENEURASSU , P_PRENEURASS , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
			IF ( V_OLDISPRENEURASSU != P_PRENEURESTASSURE ) THEN 
				CALL SP_AVENANTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , P_PERIMETRE , 0 , 0 , 0 , 0 , 'GEN' , 'JDENC' , 'M' , V_OLDISPRENEURASSU , P_PRENEURESTASSURE , 'N' , '' , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
			 
		ELSE 
			SET V_EXIT = 0 ; 
	END CASE ; 
	 
END P1  ; 
  

  

