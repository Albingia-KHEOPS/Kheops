CREATE OR REPLACE PROCEDURE SP_COBJ(
	IN P_CODEOFFRE VARCHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE VARCHAR(1) , 
	IN P_CODERSQ INTEGER , 
	IN P_NEWVERSION INTEGER , 
	IN P_CODECONTRAT VARCHAR(9) , 
	IN P_VERSCONTRAT INTEGER , 
	IN P_TRAITEMENT VARCHAR(1) , 
	IN P_COPYCODEOFFRE CHAR(9) , 
	IN P_COPYVERSION INTEGER , 
	IN P_MODECOPY CHAR(7) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_SELOBJ VARCHAR ( 1 ) DEFAULT 'N' ; 
	DECLARE V_CODEOFFRE VARCHAR ( 9 ) DEFAULT '' ; 
	DECLARE V_TYPEOFFRE VARCHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NEWVERS INTEGER DEFAULT 0 ; 

	SET P_CODEOFFRE = LPAD ( TRIM ( P_CODEOFFRE ) , 9 , ' ') ;
	SET P_CODECONTRAT = LPAD ( TRIM ( P_CODECONTRAT ) , 9 , ' ') ;
	SET P_COPYCODEOFFRE = LPAD ( TRIM ( P_COPYCODEOFFRE ) , 9 , ' ') ;
	 
	FOR LOOP_RSQ AS FREE_LIST CURSOR FOR 
		SELECT JGIPB , JGALX , JGRSQ V_JGRSQ , JGOBJ V_JGOBJ , JGCCH V_JGCCH , JGIGD V_JGIGD , JGBRA V_JGBRA , JGSBR V_JGSBR , 
		JGCAT V_JGCAT , JGRCS V_JGRCS , JGCCS V_JGCCS , JGVAL V_JGVAL , JGVAA V_JGVAA , JGVAW V_JGVAW , JGVAT V_JGVAT , 
		JGVAU V_JGVAU , JGVAH V_JGVAH , JGNOJ V_JGNOJ , JGMMQ V_JGMMQ , JGMTY V_JGMTY , JGMSR V_JGMSR , JGMFA V_JGMFA , 
		JGTEM V_JGTEM , JGVGD V_JGVGD , JGVGU V_JGVGU , JGVDA V_JGVDA , JGVDM V_JGVDM , JGVDJ V_JGVDJ , JGVDH V_JGVDH , 
		JGVFA V_JGVFA , JGVFM V_JGVFM , JGVFJ V_JGVFJ , JGVFH V_JGVFH , JGRGT V_JGRGT , JGTRR V_JGTRR , JGCNA V_JGCNA , 
		JGINA V_JGINA , JGIND V_JGIND , JGIXC V_JGIXC , JGIXF V_JGIXF , JGIXL V_JGIXL , JGIXP V_JGIXP , JGIVO V_JGIVO , 
		JGIVA V_JGIVA , JGIVW V_JGIVW , JGGAU V_JGGAU , JGGVL V_JGGVL , JGGUN V_JGGUN , JGPBN V_JGPBN , JGPBS V_JGPBS , 
		JGPBR V_JGPBR , JGPBT V_JGPBT , JGPBC V_JGPBC , JGPBP V_JGPBP , JGPBA V_JGPBA , JGCLV V_JGCLV , JGAGM V_JGAGM , 
		JGAVE V_JGAVE , JGAVA V_JGAVA , JGAVM V_JGAVM , JGAVJ V_JGAVJ , JGRUL V_JGRUL , JGRUT V_JGRUT , JGAVF V_JGAVF 
		FROM YPRTOBJ 
		WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION AND JGRSQ = P_CODERSQ 
	DO 
		SET V_CODEOFFRE = P_CODEOFFRE ; 
		SET V_NEWVERS = P_NEWVERSION ; 
		 
		IF ( P_TRAITEMENT = 'P' ) THEN 
			SET V_SELOBJ = 'O' ; 
			 
			SET V_CODEOFFRE = P_CODECONTRAT ; 
			SET V_NEWVERS = P_VERSCONTRAT ; 
		END IF ; 
		 
		IF ( P_TRAITEMENT = 'C' ) THEN 
			SET V_CODEOFFRE = P_COPYCODEOFFRE ; 
			SET V_NEWVERS = P_COPYVERSION ; 
		END IF ; 
		 
		IF ( P_TRAITEMENT = 'V' OR V_SELOBJ = 'O' OR P_TRAITEMENT = 'C' ) THEN 
		 
			CALL SP_CKPOBJ ( P_CODEOFFRE , P_VERSION , P_TYPE , P_CODERSQ , V_JGOBJ , P_NEWVERSION , P_CODECONTRAT , P_VERSCONTRAT , P_TRAITEMENT , P_COPYCODEOFFRE , P_COPYVERSION , P_MODECOPY ) ; 
			 
			IF ( TRIM ( P_MODECOPY ) = 'VERSION' OR TRIM ( P_MODECOPY ) = 'AFFNOUV' ) THEN 
				INSERT INTO YPRTOBJ 
				( JGIPB , JGALX , JGRSQ , JGOBJ , JGCCH , JGIGD , JGBRA , JGSBR , JGCAT , JGRCS , JGCCS , JGVAL , JGVAA , 
				JGVAW , JGVAT , JGVAU , JGVAH , JGNOJ , JGMMQ , JGMTY , JGMSR , JGMFA , JGTEM , JGVGD , JGVGU , JGVDA , 
				JGVDM , JGVDJ , JGVDH , JGVFA , JGVFM , JGVFJ , JGVFH , 
				JGRGT , JGTRR , JGCNA , JGINA , JGIND , JGIXC , 
				JGIXF , JGIXL , JGIXP , JGIVO , JGIVA , JGIVW , JGGAU , JGGVL , JGGUN , JGPBN , JGPBS , JGPBR , JGPBT , 
				JGPBC , JGPBP , JGPBA , JGCLV , JGAGM , JGAVE , JGAVA , JGAVM , JGAVJ , JGRUL , JGRUT , JGAVF ) 
				VALUES 
				( V_CODEOFFRE , V_NEWVERS , P_CODERSQ , V_JGOBJ , V_JGCCH , V_JGIGD , V_JGBRA , V_JGSBR , V_JGCAT , V_JGRCS , V_JGCCS , V_JGVAL , V_JGVAA , 
				V_JGVAW , V_JGVAT , V_JGVAU , V_JGVAH , V_JGNOJ , V_JGMMQ , V_JGMTY , V_JGMSR , V_JGMFA , V_JGTEM , V_JGVGD , V_JGVGU , V_JGVDA , 
				V_JGVDM , V_JGVDJ , V_JGVDH , V_JGVFA , V_JGVFM , V_JGVFJ , V_JGVFH , 
				V_JGRGT , V_JGTRR , V_JGCNA , V_JGINA , V_JGIND , V_JGIXC , 
				V_JGIXF , V_JGIXL , V_JGIXP , V_JGIVO , V_JGIVA , V_JGIVW , V_JGGAU , V_JGGVL , V_JGGUN , V_JGPBN , V_JGPBS , V_JGPBR , V_JGPBT , 
				V_JGPBC , V_JGPBP , V_JGPBA , V_JGCLV , V_JGAGM , 0 , 0 , 0 , 0 , V_JGRUL , V_JGRUT , 0 ) ; 
			ELSE 
				IF ( TRIM ( P_MODECOPY ) = 'CNVA' OR TRIM ( P_MODECOPY ) = 'OFFRE' OR TRIM ( P_MODECOPY ) = 'AFNCOPY' ) THEN 
					INSERT INTO YPRTOBJ 
					( JGIPB , JGALX , JGRSQ , JGOBJ , JGCCH , JGIGD , JGBRA , JGSBR , JGCAT , JGRCS , JGCCS , JGVAL , JGVAA , 
					JGVAW , JGVAT , JGVAU , JGVAH , JGNOJ , JGMMQ , JGMTY , JGMSR , JGMFA , JGTEM , JGVGD , JGVGU , JGVDA , 
					JGVDM , JGVDJ , JGVDH , JGVFA , JGVFM , JGVFJ , JGVFH , JGRGT , JGTRR , JGCNA , JGINA , JGIND , JGIXC , 
					JGIXF , JGIXL , JGIXP , JGIVO , JGIVA , JGIVW , JGGAU , JGGVL , JGGUN , JGPBN , JGPBS , JGPBR , JGPBT , 
					JGPBC , JGPBP , JGPBA , JGCLV , JGAGM , JGAVE , JGAVA , JGAVM , JGAVJ , JGRUL , JGRUT , JGAVF ) 
					VALUES 
					( V_CODEOFFRE , V_NEWVERS , P_CODERSQ , V_JGOBJ , V_JGCCH , V_JGIGD , V_JGBRA , V_JGSBR , V_JGCAT , V_JGRCS , V_JGCCS , 0 , V_JGVAA , 
					V_JGVAW , V_JGVAT , V_JGVAU , V_JGVAH , V_JGNOJ , V_JGMMQ , V_JGMTY , V_JGMSR , V_JGMFA , V_JGTEM , V_JGVGD , V_JGVGU , 0 , 
					0 , 0 , 0 , 0 , 0 , 0 , 0 , V_JGRGT , V_JGTRR , V_JGCNA , V_JGINA , V_JGIND , V_JGIXC , 
					V_JGIXF , V_JGIXL , V_JGIXP , V_JGIVO , V_JGIVA , V_JGIVW , V_JGGAU , V_JGGVL , V_JGGUN , V_JGPBN , V_JGPBS , V_JGPBR , V_JGPBT , 
					V_JGPBC , V_JGPBP , V_JGPBA , V_JGCLV , V_JGAGM , 0 , 0 , 0 , 0 , V_JGRUL , V_JGRUT , 0 ) ; 
				ELSE 
					INSERT INTO YPRTOBJ 
					( JGIPB , JGALX , JGRSQ , JGOBJ , JGCCH , JGIGD , JGBRA , JGSBR , JGCAT , JGRCS , JGCCS , JGVAL , JGVAA , 
					JGVAW , JGVAT , JGVAU , JGVAH , JGNOJ , JGMMQ , JGMTY , JGMSR , JGMFA , JGTEM , JGVGD , JGVGU , JGVDA , 
					JGVDM , JGVDJ , JGVDH , JGVFA , JGVFM , JGVFJ , JGVFH , JGRGT , JGTRR , JGCNA , JGINA , JGIND , JGIXC , 
					JGIXF , JGIXL , JGIXP , JGIVO , JGIVA , JGIVW , JGGAU , JGGVL , JGGUN , JGPBN , JGPBS , JGPBR , JGPBT , 
					JGPBC , JGPBP , JGPBA , JGCLV , JGAGM , JGAVE , JGAVA , JGAVM , JGAVJ , JGRUL , JGRUT , JGAVF ) 
					VALUES 
					( V_CODEOFFRE , V_NEWVERS , P_CODERSQ , V_JGOBJ , V_JGCCH , V_JGIGD , V_JGBRA , V_JGSBR , V_JGCAT , V_JGRCS , V_JGCCS , V_JGVAL , V_JGVAA , 
					V_JGVAW , V_JGVAT , V_JGVAU , V_JGVAH , V_JGNOJ , V_JGMMQ , V_JGMTY , V_JGMSR , V_JGMFA , V_JGTEM , V_JGVGD , V_JGVGU , 0 , 
					0 , 0 , 0 , 0 , 0 , 0 , 0 , V_JGRGT , V_JGTRR , V_JGCNA , V_JGINA , V_JGIND , V_JGIXC , 
					V_JGIXF , V_JGIXL , V_JGIXP , V_JGIVO , V_JGIVA , V_JGIVW , V_JGGAU , V_JGGVL , V_JGGUN , V_JGPBN , V_JGPBS , V_JGPBR , V_JGPBT , 
					V_JGPBC , V_JGPBP , V_JGPBA , V_JGCLV , V_JGAGM , 0 , 0 , 0 , 0 , V_JGRUL , V_JGRUT , 0 ) ; 
				END IF ; 
			END IF ; 
		END IF ; 
		 
	 
	END FOR ; 
  
END P1  ; 
  

  

