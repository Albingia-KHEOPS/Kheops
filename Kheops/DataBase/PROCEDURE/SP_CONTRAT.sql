CREATE PROCEDURE SP_CONTRAT ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODECONTRAT CHAR(9) , 
	IN P_VERSIONCONTRAT INTEGER , 
	IN P_TYPECONTRAT CHAR(1) , 
	IN P_DATEACCORD CHAR(8) , 
	IN P_DATEEFFET CHAR(8) , 
	IN P_HEUREEFFET CHAR(4) , 
	IN P_CONTRATREMP CHAR(9) , 
	IN P_VERSIONREMP INTEGER , 
	IN P_SOUSCRIPTEUR CHAR(10) , 
	IN P_GESTIONNAIRE CHAR(10) , 
	IN P_BRANCHE CHAR(2) , 
	IN P_CIBLE CHAR(10) , 
	IN P_DATENOW CHAR(8) , 
	IN P_USER CHAR(15) , 
	IN P_TRAITEMENT CHAR(1) , 
	IN P_OBSERVATION CHAR(5000) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_CONTRAT 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
--VALEUR POSSIBLE DANS P_TRAITEMENT : P (POLICE) 
DECLARE V_NEWCODEADR INTEGER DEFAULT 0 ; 
DECLARE V_LIENADR INTEGER DEFAULT 0 ; 
  
DECLARE V_PBMER VARCHAR ( 1 ) DEFAULT '' ; 
DECLARE V_PBFOR VARCHAR ( 1 ) DEFAULT '' ; 
  
DECLARE V_YEARSAISIE VARCHAR ( 4 ) DEFAULT '' ; 
DECLARE V_MONTHSAISIE VARCHAR ( 2 ) DEFAULT '' ; 
DECLARE V_DAYSAISIE VARCHAR ( 2 ) DEFAULT '' ; 
  
DECLARE V_YEAREFFET VARCHAR ( 4 ) DEFAULT '' ; 
DECLARE V_MONTHEFFET VARCHAR ( 2 ) DEFAULT '' ; 
DECLARE V_DAYEFFET VARCHAR ( 2 ) DEFAULT '' ; 
  
DECLARE V_YEARNOW VARCHAR ( 4 ) DEFAULT '' ; 
DECLARE V_MONTHNOW VARCHAR ( 2 ) DEFAULT '' ; 
DECLARE V_DAYNOW VARCHAR ( 2 ) DEFAULT '' ; 
  
DECLARE V_CODECONX INTEGER DEFAULT 0 ; 
DECLARE V_CODEOBSV INTEGER DEFAULT 0 ; 
DECLARE V_CODEOBSA INTEGER DEFAULT 0 ; 
DECLARE V_CODEOBSC INTEGER DEFAULT 0 ; 
  
DECLARE V_MODE_COPIE CHAR ( 7 ) DEFAULT 'AFFNOUV' ; 
DECLARE V_PETATOFFRE CHAR ( 1 ) DEFAULT '' ; 
  
DECLARE V_DESIASSU INTEGER DEFAULT 0 ; 
DECLARE V_NEWDESI INTEGER DEFAULT 0 ; 
  
DECLARE V_CODEEXPLCI INTEGER DEFAULT 0 ; 
DECLARE V_CODEEXPFRH INTEGER DEFAULT 0 ; 
  
DECLARE V_CODEEXPLCINEW INTEGER DEFAULT 0 ; 
DECLARE V_CODEEXPFRHNEW INTEGER DEFAULT 0 ; 
  
DECLARE V_COUNTCOUR INTEGER DEFAULT 0 ; 
  
DECLARE V_COURTGES INTEGER DEFAULT 0 ; 
DECLARE V_COURTAPP INTEGER DEFAULT 0 ; 
DECLARE V_NBLIGNE INTEGER DEFAULT 0 ; 

DECLARE V_JDAFC CHAR ( 1 ) DEFAULT '' ; 
DECLARE V_JDAFR DECIMAL ( 7 , 0 ) DEFAULT 0 ; 
DECLARE V_SOUSBRANCHE CHAR ( 2 ) DEFAULT '' ; 
DECLARE V_CATEGORIE CHAR ( 5 ) DEFAULT '' ; 

  
DELETE FROM KPCOPID WHERE KFLIPB = P_CODEOFFRE AND KFLALX = P_VERSION AND KFLTYP = P_TYPE ; 
  
IF ( P_TYPECONTRAT = 'M' OR P_TYPECONTRAT = 'A' ) THEN 
SET V_PBMER = P_TYPECONTRAT ; 
END IF ; 
  
IF ( P_CONTRATREMP != '' ) THEN 
SET V_PBFOR = 'O' ; 
END IF ; 
  
SET V_YEARSAISIE = SUBSTR ( P_DATEACCORD , 1 , 4 ) ; 
SET V_MONTHSAISIE = SUBSTR ( P_DATEACCORD , 5 , 2 ) ; 
SET V_DAYSAISIE = SUBSTR ( P_DATEACCORD , 7 , 2 ) ; 
  
SET V_YEAREFFET = SUBSTR ( P_DATEEFFET , 1 , 4 ) ; 
SET V_MONTHEFFET = SUBSTR ( P_DATEEFFET , 5 , 2 ) ; 
SET V_DAYEFFET = SUBSTR ( P_DATEEFFET , 7 , 2 ) ; 
  
SET V_YEARNOW = SUBSTR ( P_DATENOW , 1 , 4 ) ; 
SET V_MONTHNOW = SUBSTR ( P_DATENOW , 5 , 2 ) ; 
SET V_DAYNOW = SUBSTR ( P_DATENOW , 7 , 2 ) ; 
  
  
SELECT PBADH INTO V_LIENADR FROM YPOBASE WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
IF ( V_LIENADR != 0 ) THEN 
CALL SP_SECOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'YADRESS' , V_LIENADR , V_NEWCODEADR ) ; 
IF ( V_NEWCODEADR = 0 ) THEN 
CALL SP_YCHRONO ( 'ADRESSE_CHRONO' , V_NEWCODEADR ) ; 
CALL SP_INCOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'YADRESS' , V_LIENADR , V_NEWCODEADR ) ; 
  
INSERT INTO YADRESS 
( SELECT V_NEWCODEADR , ABPLG3 , ABPNUM , ABPEXT , ABPLBN , ABPLG4 , ABPL4F , ABPLG5 , ABPDP6 , ABPCP6 , ABPVI6 , 
ABPCDX , ABPCEX , ABPL6F , ABPPAY , ABPLOC , ABPMAT , ABPRET , ABPERR , ABPMJU , ABPMJA , ABPMJM , ABPMJJ , ABPVIX 
FROM YADRESS WHERE ABPCHR = V_LIENADR ) ; 
END IF ; 
END IF ; 
  
  
INSERT INTO YPOBASE 
( PBTYP , PBIPB , PBALX , PBTBR , PBIAS , PBREF , PBBRA , PBSBR , PBCAT , PBICT , PBTIL , PBIN5 , PBOCT , 
PBAD1 , PBAD2 , PBDEP , PBCPO , PBVIL , PBPAY , PBSAA , PBSAM , PBSAJ , PBSAH , PBAPR , PBAPP , PBMO1 , 
PBMO2 , PBMO3 , PBCLE , PBANT , PBCTD , PBCTU , PBAPO , PBDUR , PBREL , PBRLD , PBATT , PBRMP , PBVRF , 
PBOLV , PBFOA , PBFOM , PBCOU , PBFOE , PBDEV , PBRGT , PBTCO , PBNAT , PBDST , PBLIE , PBGES , PBSOU , 
PBORI , PBMAI , PBEFA , PBEFM , PBEFJ , PBOFF , PBOFV , PBIPA , PBALA , PBECM , PBECJ , PBPCV , PBCTA , 
PBNRQ , PBNPL , PBPER , PBAVN , PBAVC , PBAVA , PBAVM , PBAVJ , PBRSC , PBRSA , PBRSM , PBRSJ , PBMER , 
PBETA , PBSIT , PBSTA , PBSTM , PBSTJ , PBSTQ , PBEDT , PBTAC , PBTAA , PBTAM , PBTAJ , PBCRU , PBCRA , 
PBCRM , PBCRJ , PBMJU , PBMJA , PBMJM , PBMJJ , PBDEU , PBDEA , PBDEM , PBDEJ , PBCTP , PBEFH , PBFEA , 
PBFEM , PBFEJ , PBFEH , PBSTP , PBNVA , PBFEC , PBPOR , PBCON , PBTTR , PBAVK , PBADH , PBSTF , PBORK ) 
( SELECT 'P' , P_CODECONTRAT , P_VERSIONCONTRAT , PBTBR , PBIAS , PBREF , PBBRA , PBSBR , PBCAT , PBICT , PBTIL , PBIN5 , PBOCT , 
PBAD1 , PBAD2 , PBDEP , PBCPO , PBVIL , PBPAY , CAST ( V_YEARSAISIE AS INTEGER ) , CAST ( V_MONTHSAISIE AS INTEGER ) , CAST ( V_DAYSAISIE AS INTEGER ) , 0 , PBAPR , PBAPP , PBMO1 , 
PBMO2 , PBMO3 , PBCLE , PBANT , PBCTD , PBCTU , '' , 0 , '' , 0 , 0 , '' , 0 , 
0 , 0 , '' , 0 , '' , PBDEV , PBRGT , PBTCO , PBNAT , PBDST , '' , P_GESTIONNAIRE , P_SOUSCRIPTEUR , 
'' , 0 , CAST ( V_YEAREFFET AS INTEGER ) , CAST ( V_MONTHEFFET AS INTEGER ) , CAST ( V_DAYEFFET AS INTEGER ) , PBIPB , PBALX , '' , 0 , PBECM , PBECJ , PBPCV , PBICT , 
PBNRQ , PBNPL , PBPER , PBAVN , PBAVC , CAST ( V_YEAREFFET AS INTEGER ) , CAST ( V_MONTHEFFET AS INTEGER ) , CAST ( V_DAYEFFET AS INTEGER ) , PBRSC , PBRSA , PBRSM , PBRSJ , V_PBMER , 
'N' , 'A' , CAST ( V_YEARNOW AS INTEGER ) , CAST ( V_MONTHNOW AS INTEGER ) , CAST ( V_DAYNOW AS INTEGER ) , 'P' , 'N' , 'N' , 0 , 0 , 0 , P_USER , CAST ( V_YEARNOW AS INTEGER ) , 
CAST ( V_MONTHNOW AS INTEGER ) , CAST ( V_DAYNOW AS INTEGER ) , P_USER , CAST ( V_YEARNOW AS INTEGER ) , CAST ( V_MONTHNOW AS INTEGER ) , CAST ( V_DAYNOW AS INTEGER ) , 'SPRINKS' , CAST ( V_YEARNOW AS INTEGER ) , CAST ( V_MONTHNOW AS INTEGER ) , CAST ( V_DAYNOW AS INTEGER ) , PBICT , CAST ( P_HEUREEFFET AS INTEGER ) , PBFEA , 
PBFEM , PBFEJ , PBFEH , '' , '' , '' , V_PBFOR , '' , 'AFFNV' , 0 , V_NEWCODEADR , '' , 'KHE' 
FROM YPOBASE 
WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ) ; 
  
--29.04.2015 : AJOUT SUITE SPEC FDU PASSAGE DE L'OFFRE EN RÉALISÉE_V1.DOCX DU 24/04/2015 
SELECT PBETA INTO V_PETATOFFRE FROM YPOBASE 
WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
  
IF ( V_PETATOFFRE <> 'R' ) THEN 
	UPDATE YPOBASE 
		SET PBREL = 'N' , 
		PBRLD = 0 , 
		PBETA = 'R' , 
		PBSTA = V_YEARNOW , 
		PBSTM = V_MONTHNOW , 
		PBSTJ = V_DAYNOW , 
		PBMJA = V_YEARNOW , 
		PBMJM = V_MONTHNOW , 
		PBMJJ = V_DAYNOW , 
		PBMJU = P_USER 
	WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
		 
END IF ; 
-- suppression des courriers de relance de l'offre
DELETE FROM YOFCOUL WHERE TRIM ( EAIPB ) = TRIM ( P_CODEOFFRE ) ; 
  
--FIN AJOUT 
INSERT INTO KPOFENT 
( KFHPOG , KFHALG , KFHIPB , KFHALX , KFHNPO , KFHEFD , KFHSAD , KFHBRA , KFHCIBLE , KFHIPR , KFHALR , KFHTYPO , KFHIPM , KHFSIT , KFHSTU , KFHSTD ) 
VALUES 
( P_CODECONTRAT , P_VERSIONCONTRAT , P_CODEOFFRE , P_VERSION , 1 , P_DATEEFFET , P_DATEACCORD , P_BRANCHE , P_CIBLE , P_CONTRATREMP , P_VERSIONREMP , P_TYPECONTRAT , P_CODECONTRAT , 'A' , P_USER , P_DATENOW ) ; 
  
  
SELECT JDAFC, JDAFR  INTO V_JDAFC, V_JDAFR
FROM YPRTENT WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ;

SELECT KAISBR , KAICAT INTO V_SOUSBRANCHE , V_CATEGORIE 
FROM KCIBLEF WHERE KAICIBLE = P_CIBLE AND KAIBRA = P_BRANCHE ;
 
IF (V_JDAFC = 'S') THEN
	SELECT CAAFR 
	INTO V_JDAFR
	FROM YCATEGO 
	WHERE CABRA = P_BRANCHE AND CASBR = V_SOUSBRANCHE AND CACAT = V_CATEGORIE ; 
END IF;

    INSERT INTO YPRTENT ( JDIPB , JDALX , JDSHT , JDENC , JDITC , JDVAL , JDVAA , JDVAW , JDVAT , JDVAU , JDVAH , JDDRQ , JDNBR , JDTXL , 
    JDTRR , JDXCM , JDNEX , JDNPA , JDAFC , JDAFR , JDATT , JDCNA , JDCNC , JDINA , JDIND , JDIXC , JDIXF , JDIXL , JDIXP , JDIVO , JDIVA , JDIVW , 
    JDMHT , JDREA , JDREB , JDREH , JDDPV , JDGAU , JDGVL , JDGUN , JDPBN , JDPBS , JDPBR , JDPBT , JDPBC , JDPBP , JDPBA , JDRCG , JDCCG , JDRCS , 
    JDCCS , JDCLV , JDAGM , JDLCV , JDLCA , JDLCW , JDLCU , JDLCE , JDDPA , JDDPM , JDDPJ , JDFPA , JDFPM , JDFPJ , JDPEA , JDPEM , JDPEJ , JDACQ , 
    JDTMC , JDTFO , JDTFT , JDTFF , JDTFP , JDPRO , JDTMI , JDTFM , JDTMA , JDTMG , JDCMC , JDCFO , JDCFT , JDCFH , JDCHT , JDCTT , JDCCP , JDEHH , 
    JDEHC , JDSMP , JDIVX , JDTCR , JDNPG , JDEDI , JDEDN , JDEDA , JDEDM , JDEDJ , JDEHI , JDIAX , JDTED , JDDOO , JDRUA , JDRUM , JDRUJ , JDECG , 
JDECP , JDAPT , JDAPR , JDAAT , JDAAR , JDACR , JDACV , JDAXT , JDAXC , JDAXF , JDAXM , JDAXG , JDATA , JDATX , JDAUT , JDAUF , 
JDLTA , JDLTASP , JDLDEB, JDLDEH, JDLFIN, JDLFIH, JDLDUR, JDLDUU ) 
    ( SELECT P_CODECONTRAT , P_VERSIONCONTRAT , JDSHT , JDENC , JDITC , 0 , 0 , 0 , '' , '' , JDVAH , 0 , 0 , 0 , 
    JDTRR , JDXCM , 0 , 0 , JDAFC , V_JDAFR , JDATT , JDCNA , JDCNC , JDINA , JDIND , JDIXC , JDIXF , JDIXL , JDIXP , 0 , 0 , 0 , 
    0 , JDREA , JDREB , JDREH , JDDPV , JDGAU , JDGVL , JDGUN , JDPBN , JDPBS , JDPBR , JDPBT , JDPBC , JDPBP , JDPBA , JDRCG , JDCCG , JDRCS , 
    JDCCS , JDCLV , JDAGM , JDLCV , JDLCA , JDLCW , JDLCU , JDLCE , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , JDACQ , 
    JDTMC , JDTFO , JDTFT , JDTFF , 0 , JDPRO , JDTMI , JDTFM , 0 , 0 , 0 , '' , '' , '' , 0 , 0 , 0 , 0 , 
    0 , 0 , '' , '' , 0 , '' , 0 , 0 , 0 , 0 , 0 , '' , '' , '' , JDRUA , JDRUM , JDRUJ , JDECG , 
JDECP , JDAPT , JDAPR , JDAAT , JDAAR , JDACR , JDACV , JDAXT , JDAXC , JDAXF , JDAXM , JDAXG , JDATA , JDATX , JDAUT , JDAUF  , 
JDLTA , JDLTASP , JDLDEB, JDLDEH, JDLFIN, JDLFIH, JDLDUR, JDLDUU
    FROM YPRTENT WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ) ; 
	
FOR CURSOR_ASSU AS FREE_LIST CURSOR FOR 
	SELECT PCIAS IDASSU , PCDESI DESIASSU FROM YPOASSU WHERE PCTYP = P_TYPE AND TRIM ( PCIPB ) = TRIM ( P_CODEOFFRE ) AND PCALX = P_VERSION 
DO 
	SET V_NEWDESI = 0 ; 
	IF ( DESIASSU > 0 ) THEN 
		CALL SP_NCHRONO ( 'KADCHR' , V_NEWDESI ) ; 
		INSERT INTO KPDESI ( KADCHR , KADTYP , KADIPB , KADALX , KADPERI , KADRSQ , KADOBJ , KADDESI ) 
		( SELECT V_NEWDESI , 'P' , P_CODECONTRAT , P_VERSIONCONTRAT , KADPERI , KADRSQ , KADOBJ , KADDESI FROM KPDESI WHERE KADCHR = DESIASSU ) ; 
	END IF ; 
	INSERT INTO YPOASSU ( PCTYP , PCIPB , PCALX , PCIAS , PCPRI , PCQL1 , PCQL2 , PCQL3 , PCQLD , PCCNR , PCASS , PCSCP , PCDESI ) 
	( SELECT 'P' , P_CODECONTRAT , P_VERSIONCONTRAT , PCIAS , PCPRI , PCQL1 , PCQL2 , PCQL3 , PCQLD , PCCNR , PCASS , PCSCP , V_NEWDESI 
	FROM YPOASSU WHERE PCTYP = P_TYPE AND TRIM ( PCIPB ) = TRIM ( P_CODEOFFRE ) AND PCALX = P_VERSION AND PCIAS = IDASSU AND PCDESI = DESIASSU ) ; 
END FOR ; 

  
INSERT INTO YPOCOAS ( PHTYP , PHIPB , PHALX , PHTAP , PHCIE , PHIN5 , PHPOL , PHAPP , PHCOM , PHTXF , PHAFR , PHEPA , PHEPM , PHEPJ , 
PHFPA , PHFPM , PHFPJ ) 
( SELECT 'P' , P_CODECONTRAT , P_VERSIONCONTRAT , PHTAP , PHCIE , PHIN5 , PHPOL , PHAPP , PHCOM , PHTXF , PHAFR , PHEPA , PHEPM , PHEPJ , 
PHFPA , PHFPM , PHFPJ 
FROM YPOCOAS WHERE PHTYP = P_TYPE AND PHIPB = P_CODEOFFRE AND PHALX = P_VERSION ) ; 
  
IF ( P_CONTRATREMP != '' ) THEN 
CALL SP_YCHRONO ( 'POLICE_CONNEX_01' , V_CODECONX ) ; 
  
INSERT INTO YPOCONX 
( PJTYP , PJCCX , PJCNX , PJIPB , PJALX , PJBRA , PJSBR , PJCAT ) 
VALUES 
( 'P' , '01' , V_CODECONX , P_CODECONTRAT , P_VERSIONCONTRAT , P_BRANCHE , '' , '' ) ; 
  
INSERT INTO YPOCONX 
( PJTYP , PJCCX , PJCNX , PJIPB , PJALX , PJBRA , PJSBR , PJCAT ) 
( SELECT 'P' , '01' , V_CODECONX , P_CONTRATREMP , P_VERSIONREMP , PBBRA , '' , '' 
FROM YPOBASE WHERE PBIPB = P_CONTRATREMP AND PBALX = P_VERSIONREMP ) ; 
END IF ; 
  
	 -- Copie des courtiers de YPOCOUR 
	INSERT INTO YPOCOUR ( PFTYP , PFIPB , PFALX , PFCTI , PFICT , PFSAA , PFSAM , PFSAJ , PFSAH , PFSIT , PFSTA , PFSTM , PFSTJ , PFGES , 
		PFSOU , PFCOM , PFOCT , PFXCM , PFXCN ) 
	( SELECT 'P' , P_CODECONTRAT , P_VERSIONCONTRAT , PFCTI , PFICT , V_YEARNOW , V_MONTHNOW , V_DAYNOW , PFSAH , PFSIT , PFSTA , PFSTM , PFSTJ , PFGES , 
		PFSOU , 100 , PFOCT , PFXCM , PFXCN 
	FROM YPOCOUR WHERE PFTYP = P_TYPE AND PFIPB = P_CODEOFFRE AND PFALX = P_VERSION ) ; 
  
	SELECT PBICT , PBCTA INTO V_COURTGES , V_COURTAPP FROM YPOBASE WHERE TRIM ( PBIPB ) = TRIM ( P_CODEOFFRE ) AND PBTYP = P_TYPE AND PBALX = P_VERSION ; 
  
	IF ( V_COURTGES <> V_COURTAPP ) THEN 
		DELETE FROM YPOCOUR WHERE TRIM ( PFIPB ) = TRIM ( P_CODECONTRAT ) AND PFALX = P_VERSIONCONTRAT AND PFTYP = 'P' AND PFCTI = 'O' ; 
		 
		SET V_NBLIGNE = 0 ; 
		SELECT COUNT ( * ) INTO V_NBLIGNE FROM YPOCOUR WHERE TRIM ( PFIPB ) = TRIM ( P_CODECONTRAT ) AND PFALX = P_VERSIONCONTRAT AND PFTYP = 'P' AND PFCTI = 'A' ; 
	 
		IF ( V_NBLIGNE > 0 ) THEN 
			UPDATE YPOCOUR SET PFICT = V_COURTGES WHERE TRIM ( PFIPB ) = TRIM ( P_CODECONTRAT ) AND PFALX = P_VERSIONCONTRAT AND PFTYP = 'P' AND PFCTI = 'A' ; 
		ELSE 
			INSERT INTO YPOCOUR ( PFIPB , PFALX , PFTYP , PFCTI , PFICT ) VALUES ( P_CODECONTRAT , P_VERSIONCONTRAT , 'P' , 'A' , V_COURTGES ) ;				 
		END IF ; 
		 
	END IF ; 
  
CALL SP_CKPENT ( P_CODEOFFRE , P_VERSION , P_TYPE , P_CODECONTRAT , P_VERSIONCONTRAT , P_TRAITEMENT , V_MODE_COPIE ) ; 
  
/* TRAITEMENT DES EXPRESSIONS COMPLEXES */ 
SET V_CODEEXPLCI = 0 ; 
SET V_CODEEXPFRH = 0 ; 
  
SELECT KAAKDIID , KAAKDKID INTO V_CODEEXPLCI , V_CODEEXPFRH FROM KPENT WHERE TRIM ( KAAIPB ) = TRIM ( P_CODEOFFRE ) AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
IF ( V_CODEEXPLCI != 0 ) THEN 
	SET V_CODEEXPLCINEW = 0 ; 
	 
	CALL SP_SECOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDIID' , V_CODEEXPLCI , V_CODEEXPLCINEW ) ; 
	IF ( V_CODEEXPLCINEW != 0 ) THEN 
		INSERT INTO KPEXPLCI 
			( KDIID , KDITYP , KDIIPB , KDIALX , KDILCE , KDIDESC , KDIDESI , KDIORI , KDIMODI ) 
			( SELECT V_CODEEXPLCINEW , 'P' , P_CODECONTRAT , P_VERSIONCONTRAT , KDILCE , KDIDESC , KDIDESI , KDIORI , KDIMODI 
					FROM KPEXPLCI WHERE KDIID = V_CODEEXPLCI ) ; 
		CALL SP_CPEXLCI ( P_CODEOFFRE , P_VERSION , P_TYPE , P_VERSIONCONTRAT , V_CODEEXPLCI , V_CODEEXPLCINEW ) ; 
	END IF ; 
END IF ; 
IF ( V_CODEEXPFRH != 0 ) THEN 
	SET V_CODEEXPFRHNEW = 0 ; 
	 
	CALL SP_SECOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDKID' , V_CODEEXPFRH , V_CODEEXPFRHNEW ) ; 
	IF ( V_CODEEXPFRHNEW != 0 ) THEN 
		INSERT INTO KPEXPFRH 
			( KDKID , KDKTYP , KDKIPB , KDKALX , KDKFHE , KDKDESC , KDKDESI , KDKORI , KDKMODI ) 
			( SELECT V_CODEEXPFRHNEW , 'P' , P_CODECONTRAT , P_VERSIONCONTRAT , KDKFHE , KDKDESC , KDKDESI , KDKORI , KDKMODI 
				FROM KPEXPFRH WHERE KDKID = V_CODEEXPFRH ) ; 
		CALL SP_CPEXFRH ( P_CODEOFFRE , P_VERSION , P_TYPE , P_VERSIONCONTRAT , V_CODEEXPFRHNEW , V_CODEEXPFRH ) ; 
	END IF ; 
END IF ; 
  
-- 2017-04-27 : mise en commentaire de l'update => on reprend toujours l'information de l'offre à partir de laquelle l'AN a été créé 
-- UPDATE KPENT SET KAAASS = 'O' WHERE KAATYP = 'P' AND TRIM ( KAAIPB ) = TRIM ( P_CODECONTRAT ) AND KAAALX = P_VERSIONCONTRAT ; 
SELECT KAAOBSV , KAAOBSA , KAAOBSC INTO V_CODEOBSV , V_CODEOBSA , V_CODEOBSC 
FROM KPENT 
WHERE KAAIPB = P_CODECONTRAT AND KAATYP = 'P' AND KAAALX = P_VERSIONCONTRAT ; 
IF ( V_CODEOBSV != 0 ) THEN 
INSERT INTO KPOBSV ( KAJCHR , KAJTYP , KAJIPB , KAJALX , KAJTYPOBS , KAJOBSV ) 
VALUES 
( V_CODEOBSV , 'P' , P_CODECONTRAT , P_VERSIONCONTRAT , 'GENERALE' , P_OBSERVATION ) ; 
END IF ; 
IF ( V_CODEOBSA != 0 ) THEN 
INSERT INTO KPOBSV ( KAJCHR , KAJTYP , KAJIPB , KAJALX , KAJTYPOBS , KAJOBSV ) 
VALUES 
( V_CODEOBSA , 'P' , P_CODECONTRAT , P_VERSIONCONTRAT , '' , '' ) ; 
END IF ; 
IF ( V_CODEOBSC != 0 ) THEN 
  
INSERT INTO KPOBSV ( KAJCHR , KAJTYP , KAJIPB , KAJALX , KAJTYPOBS , KAJOBSV ) 
( SELECT V_CODEOBSC , 'P' , P_CODECONTRAT , P_VERSIONCONTRAT , KAJTYPOBS , KAJOBSV 
	FROM KPENT 
		INNER JOIN KPOBSV ON KAJCHR = KAAOBSC AND KAJIPB = KAAIPB AND KAJALX = KAAALX AND KAJTYP = KAATYP 
	WHERE TRIM ( KAAIPB ) = TRIM ( P_CODEOFFRE ) AND KAAALX = P_VERSION AND KAATYP = P_TYPE ) ; 
END IF ; 
  

END P1  ; 
  

  

