CREATE PROCEDURE SP_COOBJET ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_CODECONTRAT CHAR(9) , 
	IN P_VERSIONCONTRAT INTEGER , 
	IN P_CODERISQUE INTEGER , 
	IN P_CHECKRSQ CHAR(1) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_COOBJET 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
DECLARE V_CHECKOBJ VARCHAR ( 1 ) DEFAULT '' ; 
DECLARE V_CODECHR INTEGER DEFAULT 0 ; 
  
FOR LOOP_OBJ AS FREE_LIST CURSOR FOR 
SELECT JGOBJ FROM YPRTOBJ 
WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION AND JGRSQ = P_CODERISQUE 
  
DO 
CALL SP_COVERIF ( P_CODECONTRAT , P_VERSIONCONTRAT , 'O' , P_CODERISQUE , JGOBJ , V_CHECKOBJ ) ; 
  
IF ( V_CHECKOBJ = '' ) THEN 
IF ( P_CHECKRSQ = 'N' ) THEN 
SET V_CHECKOBJ = 'N' ; 
ELSE 
SET V_CHECKOBJ = 'O' ; 
END IF ; 
  
CALL SP_NCHRONO ( 'KFICHR' , V_CODECHR ) ; 
  
INSERT INTO KPOFRSQ 
( KFIPOG , KFIALG , KFIIPB , KFIALX , KFICHR , KFITYE , KFIRSQ , KFIOBJ , KFIINV , KFISEL ) 
VALUES 
( P_CODECONTRAT , P_VERSIONCONTRAT , P_CODEOFFRE , P_VERSION , V_CODECHR , 'O' , P_CODERISQUE , JGOBJ , '' , V_CHECKOBJ ) ; 
END IF ; 
  
SET V_CHECKOBJ = '' ; 
END FOR ; 
  
END P1  ; 
  

  

