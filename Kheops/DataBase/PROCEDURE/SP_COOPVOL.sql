CREATE PROCEDURE SP_COOPVOL ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODECONTRAT CHAR(9) , 
	IN P_VERSIONCONTRAT INTEGER ,
	IN P_RETURNVAL INTEGER DEFAULT 1 )
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_COOPVOL 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
DECLARE V_NUMCHR INTEGER DEFAULT 0 ; 
  
DECLARE V_CODEFOR INTEGER DEFAULT 0 ; 
DECLARE V_CODEOPT INTEGER DEFAULT 0 ; 
DECLARE V_FORCHECK VARCHAR ( 1 ) DEFAULT 'N' ; 
DECLARE V_OPTCHECK VARCHAR ( 1 ) DEFAULT 'N' ; 
DECLARE V_VOLCHECK VARCHAR ( 1 ) DEFAULT 'N' ; 
  
DECLARE V_CHECKVERIF VARCHAR ( 1 ) DEFAULT '' ; 
  
DECLARE CURSOR_FORM CURSOR FOR 
SELECT KABRSQ CODERISQUE , 0 CODEOBJ , KABDESC DESCRISQUE , KDAID GUIDFORM , KDAFOR CODEFORM , KDAALPHA LETTREFORM , KDADESC DESCFORMULE , 
KDBID GUIDOPT , KDBOPT CODEOPT , KAKID GUIDVOLET , KAKVOLET CODEVOLET , KAKDESC DESCVOLET , KFJSEL CHECKROWDB 
FROM KPOFRSQ 
INNER JOIN KPRSQ ON KFIIPB = KABIPB AND KFIALX = KABALX AND KFIRSQ = KABRSQ 
INNER JOIN KPOPTAP ON KFIIPB = KDDIPB AND KFIALX = KDDALX AND KFIRSQ = KDDRSQ AND KDDPERI = 'RQ' 
INNER JOIN KPFOR ON KDDIPB = KDAIPB AND KDDALX = KDAALX AND KDDFOR = KDAFOR 
INNER JOIN KPOPT ON KDAIPB = KDBIPB AND KDAALX = KDBALX AND KDAFOR = KDBFOR 
INNER JOIN KPOFOPT ON KFIPOG = KFJPOG AND KFIALG = KFJALG AND KFIIPB = KFJIPB AND KFIALX = KFJALX AND KDDFOR = KFJFOR 
INNER JOIN KVOLET ON KFJKAKID = KAKID 
WHERE KFIPOG = P_CODECONTRAT AND KFIALG = P_VERSIONCONTRAT AND KFITYE = 'R' AND KFISEL = 'O' AND KFIIPB = P_CODEOFFRE AND KFIALX = P_VERSION 
UNION 
SELECT KACRSQ CODERISQUE , KACOBJ CODEOBJ , KACDESC DESCRISQUE , KDAID GUIDFORM , KDAFOR CODEFORM , KDAALPHA LETTREFORM , KDADESC DESCFORMULE , 
KDBID GUIDOPT , KDBOPT CODEOPT , KAKID GUIDVOLET , KAKVOLET CODEVOLET , KAKDESC DESCVOLET , KFJSEL CHECKROWDB 
FROM KPOFRSQ 
INNER JOIN KPOBJ ON KFIIPB = KACIPB AND KFIALX = KACALX AND KFIRSQ = KACRSQ AND KFIOBJ = KACOBJ 
INNER JOIN KPOPTAP ON KFIIPB = KDDIPB AND KFIALX = KDDALX AND KFIRSQ = KDDRSQ AND KFIOBJ = KDDOBJ AND KDDPERI = 'OB' 
INNER JOIN KPFOR ON KDDIPB = KDAIPB AND KDDALX = KDAALX AND KDDFOR = KDAFOR 
INNER JOIN KPOPT ON KDAIPB = KDBIPB AND KDAALX = KDBALX AND KDAFOR = KDBFOR 
INNER JOIN KPOFOPT ON KFIPOG = KFJPOG AND KFIALG = KFJALG AND KFIIPB = KFJIPB AND KFIALX = KFJALX AND KDDFOR = KFJFOR 
INNER JOIN KVOLET ON KFJKAKID = KAKID 
WHERE KFIPOG = P_CODECONTRAT AND KFIALG = P_VERSIONCONTRAT AND KFITYE = 'O' AND KFISEL = 'O' AND KFIIPB = P_CODEOFFRE AND KFIALX = P_VERSION 
ORDER BY CODERISQUE , CODEOBJ , CODEFORM , CODEOPT , GUIDVOLET ; 
  
FOR LOOP_FOROPT AS FREE_LIST CURSOR FOR 
SELECT DISTINCT KDBFOR CODEFOR , KDBOPT CODEOPT , KDBKDAID GUIDFOR , KDBID GUIDOPT , KDCKAKID GUIDVOLET 
FROM KPFOR 
INNER JOIN KPOPT ON KDAID = KDBKDAID 
INNER JOIN KPOPTAP ON KDBID = KDDKDBID 
INNER JOIN KPOFRSQ ON KFIPOG = P_CODECONTRAT AND KFIALG = P_VERSIONCONTRAT AND KFIRSQ = KDDRSQ AND KFIOBJ = KDDOBJ AND KFISEL = 'O' 
INNER JOIN KPOPTD ON KDCKDBID = KDBID AND KDCTENG = 'V' 
WHERE KDAIPB = P_CODEOFFRE AND KDAALX = P_VERSION AND KDATYP = P_TYPE 
ORDER BY KDBFOR , KDBOPT 
DO 
SET V_FORCHECK = 'O' ; 
SET V_OPTCHECK = 'N' ; 
  
IF ( V_CODEFOR = CODEFOR AND V_CODEOPT = CODEOPT ) THEN 
SET V_VOLCHECK = 'O' ; 
ELSE 
SET V_VOLCHECK = 'N' ; 
END IF ; 
  
IF ( V_CODEFOR != CODEFOR ) THEN 
SET V_CODEOPT = 0 ; 
SET V_OPTCHECK = 'O' ; 
SET V_VOLCHECK = 'O' ; 
  
CALL SP_COFVERI ( P_CODECONTRAT , P_VERSIONCONTRAT , P_CODEOFFRE , P_VERSION , 'F' , CODEFOR , 0 , GUIDFOR , 0 , 0 , V_CHECKVERIF ) ; 
IF ( V_CHECKVERIF = '' ) THEN 
  
CALL SP_NCHRONO ( 'KFJCHR' , V_NUMCHR ) ; 
  
INSERT INTO KPOFOPT 
( KFJPOG , KFJALG , KFJIPB , KFJALX , KFJCHR , KFJTENG , KFJFOR , KFJOPT , KFJKDAID , KFJKDBID , KFJKAKID , KFJSEL ) 
VALUES 
( P_CODECONTRAT , P_VERSIONCONTRAT , P_CODEOFFRE , P_VERSION , V_NUMCHR , 'F' , CODEFOR , 0 , GUIDFOR , 0 , 0 , V_FORCHECK ) ; 
  
END IF ; 
SET V_CHECKVERIF = '' ; 
END IF ; 
  
IF ( V_CODEOPT != CODEOPT ) THEN 
CALL SP_COFVERI ( P_CODECONTRAT , P_VERSIONCONTRAT , P_CODEOFFRE , P_VERSION , 'O' , CODEFOR , CODEOPT , GUIDFOR , GUIDOPT , 0 , V_CHECKVERIF ) ; 
IF ( V_CHECKVERIF = '' ) THEN 
  
CALL SP_NCHRONO ( 'KFJCHR' , V_NUMCHR ) ; 
  
INSERT INTO KPOFOPT 
( KFJPOG , KFJALG , KFJIPB , KFJALX , KFJCHR , KFJTENG , KFJFOR , KFJOPT , KFJKDAID , KFJKDBID , KFJKAKID , KFJSEL ) 
VALUES 
( P_CODECONTRAT , P_VERSIONCONTRAT , P_CODEOFFRE , P_VERSION , V_NUMCHR , 'O' , CODEFOR , CODEOPT , GUIDFOR , GUIDOPT , 0 , V_OPTCHECK ) ; 
  
END IF ; 
SET V_CHECKVERIF = '' ; 
END IF ; 
  
CALL SP_COFVERI ( P_CODECONTRAT , P_VERSIONCONTRAT , P_CODEOFFRE , P_VERSION , 'V' , CODEFOR , CODEOPT , GUIDFOR , GUIDOPT , GUIDVOLET , V_CHECKVERIF ) ; 
IF ( V_CHECKVERIF = '' ) THEN 
CALL SP_NCHRONO ( 'KFJCHR' , V_NUMCHR ) ; 
  
INSERT INTO KPOFOPT 
( KFJPOG , KFJALG , KFJIPB , KFJALX , KFJCHR , KFJTENG , KFJFOR , KFJOPT , KFJKDAID , KFJKDBID , KFJKAKID , KFJSEL ) 
VALUES 
( P_CODECONTRAT , P_VERSIONCONTRAT , P_CODEOFFRE , P_VERSION , V_NUMCHR , 'V' , CODEFOR , CODEOPT , GUIDFOR , GUIDOPT , GUIDVOLET , V_VOLCHECK ) ; 
  
END IF ; 
SET V_CHECKVERIF = '' ; 
  
SET V_CODEFOR = CODEFOR ; 
SET V_CODEOPT = CODEOPT ; 
SET V_NUMCHR = 0 ; 
END FOR ; 
  
IF ( P_RETURNVAL = 1 ) THEN
OPEN CURSOR_FORM ; 
END IF ;
  
END P1  ; 
  

  

