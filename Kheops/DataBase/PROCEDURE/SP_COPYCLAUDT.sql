CREATE OR REPLACE PROCEDURE SP_COPYCLAUDT(
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_NEWCODEOFFRE CHAR(9) , 
	IN P_NEWVERSION INTEGER , 
	IN P_NEWTYPE CHAR(1) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	 
		DECLARE V_NEWID INTEGER DEFAULT 0 ; 
		DECLARE V_EXIT INTEGER DEFAULT 0 ;	 

		SET P_CODEOFFRE = LPAD ( TRIM ( P_CODEOFFRE ) , 9 , ' ') ;
		SET P_NEWCODEOFFRE = LPAD ( TRIM ( P_NEWCODEOFFRE ) , 9 , ' ') ;
					 
		FOR LOOP_CLAUDT AS FREE_LIST CURSOR FOR 
			SELECT KHOKCAID KCAID , KHOORI ORI , KHOIDO IDO , KHOINF INF 
				FROM KPCLAUDT 
			WHERE KHOIPB = P_CODEOFFRE AND KHOALX = P_VERSION AND KHOTYP = P_TYPE 
		DO		 
			CALL SP_NCHRONO ( 'KHOID' , V_NEWID ) ; 
			INSERT INTO KPCLAUDT 
				( KHOID , KHOKCAID , KHOORI , KHOIDO , KHOTYP , KHOIPB , KHOALX , KHOINF ) 
			VALUES 
				( V_NEWID , KCAID , ORI , IDO , P_NEWTYPE , P_NEWCODEOFFRE , P_NEWVERSION , INF ) ; 
		END FOR ; 
		 
		FOR LOOP_ADR AS FREE_LIST CURSOR FOR 
			SELECT KFLTAB V_TABLE , KFLIDO V_OLDCODE , KFLIDC V_NEWCODE FROM KPCOPID 
				WHERE KFLTYP = P_TYPE AND KFLIPB = P_CODEOFFRE AND KFLALX = P_VERSION AND ( KFLTAB = 'KCAID' OR KFLTAB = 'KBFID' ) DO 
			IF ( V_OLDCODE != 0 ) THEN 
				CASE V_TABLE 
					WHEN 'KCAID' THEN 
						 
						UPDATE KPCLAUDT 
						SET KHOKCAID = V_NEWCODE 
						WHERE KHOIPB = P_NEWCODEOFFRE AND KHOALX = P_NEWVERSION AND KHOTYP = P_NEWTYPE AND KHOKCAID = V_OLDCODE ; 
						 
						 
					WHEN 'KBFID' THEN 
					 
						UPDATE KPCLAUDT 
						SET KHOIDO = V_NEWCODE 
						WHERE KHOIPB = P_NEWCODEOFFRE AND KHOALX = P_NEWVERSION AND KHOTYP = P_NEWTYPE AND KHOIDO = V_OLDCODE ; 
				 
					ELSE 
						SET V_EXIT = 1 ; 
				END CASE ; 
			END IF ; 
		 
		END FOR ; 
	 
	END P1  ;

