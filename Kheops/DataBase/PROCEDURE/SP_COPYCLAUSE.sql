
CREATE OR REPLACE PROCEDURE SP_COPYCLAUSE ( 
	IN P_CODEOFFRE VARCHAR(9) , 
	IN P_VERSOFFRE INTEGER , 
	IN P_TYPEOFFRE VARCHAR(1) , 
	IN P_NEWVERS INTEGER , 
	IN P_MODECOPY CHAR(7) , 
	IN P_CODECLAUSE INTEGER , 
	IN P_CODECLIBRE INTEGER , 
	IN P_CODEINVEN INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC	 
		 
	DECLARE V_NEWCODECLAUSE INTEGER DEFAULT 0 ; 
	DECLARE V_NEWP_CODEINVEN INTEGER DEFAULT 0 ; 
	DECLARE V_NEWP_CODECLIBRE INTEGER DEFAULT 0 ; 
	DECLARE V_NEWID INTEGER DEFAULT 0 ; 
	 
	DECLARE V_OLDCHEMIN CHAR ( 250 ) DEFAULT '' ; 
	DECLARE V_NEWCHEMIN CHAR ( 250 ) DEFAULT '' ; 
	DECLARE V_NEWNOM CHAR ( 250 ) DEFAULT '' ; 
  
	DECLARE V_CODESOURCE CHAR ( 9 ) DEFAULT '' ; 
	DECLARE V_VERSIONSOURCE INTEGER DEFAULT 0 ; 
	DECLARE V_TYPESOURCE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_SOURCEIPBALXTYP CHAR ( 20 ) DEFAULT '' ; 
	DECLARE V_DESTIPBALXTYP CHAR ( 20 ) DEFAULT '' ; 
	DECLARE V_SOURCEIPBALX CHAR ( 20 ) DEFAULT '' ; 
	DECLARE V_DESTIPBALX CHAR ( 20 ) DEFAULT '' ; 
	DECLARE V_TYPEDOCAJOUTE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_IDDOCLIBRE INTEGER DEFAULT 0 ; 
	DECLARE V_KERCHM CHAR ( 255 ) DEFAULT '' ; 
	DECLARE V_KERNOM CHAR ( 255 ) DEFAULT '' ; 
	 
	DECLARE V_DATENOW NUMERIC ( 8 ) DEFAULT 0 ; 
	 
	SET P_CODEOFFRE = LPAD ( TRIM ( P_CODEOFFRE ) , 9 , ' ') ;

	SET V_DATENOW = YEAR ( CURDATE ( ) ) * 10000 + MONTH ( CURDATE ( ) ) * 100 + DAY ( CURDATE ( ) ) ; 
	 
	SET V_NEWP_CODECLIBRE = 0 ; 
	 
	IF ( P_CODECLIBRE = 0 AND ( TRIM ( P_MODECOPY ) <> 'CNVA' OR TRIM ( P_MODECOPY ) <> 'OFFRE' OR TRIM ( P_MODECOPY ) <> 'AFNCOPY' ) ) THEN 
		 
		IF ( P_CODEINVEN != 0 ) THEN 
			CALL SP_SECOPID ( P_CODEOFFRE , P_VERSOFFRE , P_TYPEOFFRE , 'KBEID' , P_CODEINVEN , V_NEWP_CODEINVEN ) ; 
		END IF ; 
	 
		IF ( P_CODECLIBRE != 0 ) THEN 
			CALL SP_NCHRONO ( 'KFOID' , V_NEWP_CODECLIBRE ) ; 
			INSERT INTO KPCLATXT 
				( SELECT V_NEWP_CODECLIBRE , KFODESC , KFOTXT FROM KPCLATXT WHERE KFOID = P_CODECLIBRE ) ; 
		END IF ; 
	 
						 
		CALL SP_SECOPID ( P_CODEOFFRE , P_VERSOFFRE , P_TYPEOFFRE , 'KCAID' , P_CODECLAUSE , V_NEWCODECLAUSE ) ; 
		 
		IF ( V_NEWCODECLAUSE = 0 ) THEN 
			CALL SP_NCHRONO ( 'KCAID' , V_NEWCODECLAUSE ) ; 
			CALL SP_INCOPID ( P_CODEOFFRE , P_VERSOFFRE , P_TYPEOFFRE , 'KCAID' , P_CODECLAUSE , V_NEWCODECLAUSE ) ; 
		END IF ; 
		 
		 -- CALL SP_NCHRONO ( 'KCAID' , V_NEWCODECLAUSE ) ;		 
			INSERT INTO KPCLAUSE 
				( KCAID , KCATYP , KCAIPB , KCAALX , KCAETAFF , KCAPERI , KCARSQ , KCAOBJ , KCAINVEN , KCAINLGN , 
					KCAFOR , KCAOPT , KCAGAR , KCACTX , KCAAJT , KCANTA , KCAKDUID , KCACLNM1 , KCACLNM2 , KCACLNM3 , KCAVER , KCATXL , KCAMER , KCADOC , 
					KCACHI , KCACHIS , KCAIMP , KCACXI , KCAIAN , KCAIAC , KCASIT , KCASITD , KCAAVNC , KCACRD , KCAAVNM , KCAMAJD , KCASPA , KCATYPO , KCAAIM , KCATAE , 
					KCAELGO , KCAELGI , KCAXTL , KCATYPD , KCAETAPE ) 
				( SELECT V_NEWCODECLAUSE , P_TYPEOFFRE , P_CODEOFFRE , P_NEWVERS , KCAETAFF , KCAPERI , KCARSQ , KCAOBJ , V_NEWP_CODEINVEN , KCAINLGN , 
					KCAFOR , KCAOPT , KCAGAR , KCACTX , KCAAJT , KCANTA , KCAKDUID , KCACLNM1 , KCACLNM2 , KCACLNM3 , KCAVER , V_NEWP_CODECLIBRE , KCAMER , KCADOC , 
					KCACHI , KCACHIS , KCAIMP , KCACXI , KCAIAN , KCAIAC , KCASIT , V_DATENOW , 0 , V_DATENOW , 0 , V_DATENOW , KCASPA , KCATYPO , KCAAIM , KCATAE , 
					KCAELGO , KCAELGI , KCAXTL , KCATYPD , KCAETAPE 
					FROM KPCLAUSE 
						WHERE KCAID = P_CODECLAUSE ) ; 
		 
	ELSE 
		IF ( P_CODECLIBRE != 0 AND ( TRIM ( P_MODECOPY ) = 'CNVA' OR TRIM ( P_MODECOPY ) = 'OFFRE' OR TRIM ( P_MODECOPY ) = 'AFNCOPY' OR TRIM ( P_MODECOPY ) = 'AFFNOUV' OR TRIM ( P_MODECOPY ) = 'VERSION' ) ) THEN	 
			IF ( P_CODEINVEN != 0 ) THEN 
				CALL SP_SECOPID ( P_CODEOFFRE , P_VERSOFFRE , P_TYPEOFFRE , 'KBEID' , P_CODEINVEN , V_NEWP_CODEINVEN ) ; 
			END IF ; 
			 
		SELECT KCATYPD , KCATXL INTO V_TYPEDOCAJOUTE , V_IDDOCLIBRE FROM KPCLAUSE 
		WHERE KCAID = P_CODECLAUSE ; 
		 
		CALL SP_NCHRONO ( 'KCAID' , V_NEWCODECLAUSE ) ; 
		 
		 
		IF ( V_TYPEDOCAJOUTE <> 'E' ) THEN  --DOC AJOUTÉ OU GÉNÉRÉ 
			CALL SP_NCHRONO ( 'KEQID' , V_NEWID ) ; 
			 
			SELECT KEQIPB , KEQALX , KEQTYP , KEQNOM , KEQCHM INTO V_CODESOURCE , V_VERSIONSOURCE , V_TYPESOURCE , V_NEWNOM , V_OLDCHEMIN FROM KPDOC WHERE KEQID = P_CODECLIBRE ; 
			 
			SET V_SOURCEIPBALXTYP = TRIM ( V_CODESOURCE ) CONCAT '__' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || V_VERSIONSOURCE , 4 ) CONCAT '__' CONCAT V_TYPESOURCE ; 
			SET V_DESTIPBALXTYP = TRIM ( P_CODEOFFRE ) CONCAT '__' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || P_NEWVERS , 4 ) CONCAT '__' CONCAT P_TYPEOFFRE ;	 
			 
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_OLDCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			 
			SET V_SOURCEIPBALXTYP = TRIM ( V_CODESOURCE ) CONCAT '_' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || V_VERSIONSOURCE , 4 ) CONCAT '_' CONCAT V_TYPESOURCE ; 
			SET V_DESTIPBALXTYP = TRIM ( P_CODEOFFRE ) CONCAT '_' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || P_NEWVERS , 4 ) CONCAT '_' CONCAT P_TYPEOFFRE ;	 
			 
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_NEWCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			 
			SET V_SOURCEIPBALXTYP = TRIM ( V_CODESOURCE ) CONCAT '__' CONCAT V_VERSIONSOURCE CONCAT '__' CONCAT V_TYPESOURCE ; 
			SET V_DESTIPBALXTYP = TRIM ( P_CODEOFFRE ) CONCAT '__' CONCAT P_NEWVERS CONCAT '__' CONCAT P_TYPEOFFRE ;	 
			 
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_NEWCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			 
			SET V_SOURCEIPBALXTYP = TRIM ( V_CODESOURCE ) CONCAT '_' CONCAT V_VERSIONSOURCE CONCAT '_' CONCAT V_TYPESOURCE ; 
			SET V_DESTIPBALXTYP = TRIM ( P_CODEOFFRE ) CONCAT '_' CONCAT P_NEWVERS CONCAT '_' CONCAT P_TYPEOFFRE ;	 
			 
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_NEWCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			 
			SET V_SOURCEIPBALX = TRIM ( V_CODESOURCE ) CONCAT '__' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || V_VERSIONSOURCE , 4 ) ; 
			SET V_DESTIPBALX = TRIM ( P_CODEOFFRE ) CONCAT '__' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || P_NEWVERS , 4 ) ; 
  
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_NEWCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALX ) ) , TRIM ( LOWER ( V_DESTIPBALX ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALX ) ) , TRIM ( LOWER ( V_DESTIPBALX ) ) ) ; 
			 
			SET V_SOURCEIPBALX = TRIM ( V_CODESOURCE ) CONCAT '_' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || V_VERSIONSOURCE , 4 ) ; 
			SET V_DESTIPBALX = TRIM ( P_CODEOFFRE ) CONCAT '_' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || P_NEWVERS , 4 ) ; 
  
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_NEWCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALX ) ) , TRIM ( LOWER ( V_DESTIPBALX ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALX ) ) , TRIM ( LOWER ( V_DESTIPBALX ) ) ) ; 
			 
			INSERT INTO KPDOC ( KEQID , KEQTYP , KEQIPB , KEQALX , KEQSUA , KEQNUM , KEQSBR , KEQSERV , KEQACTG , KEQACTN , KEQECO , KEQAVN , KEQETAP , KEQKEMID , KEQORD , KEQTGL , KEQTDOC , KEQKESID , 
											KEQAJT , KEQTRS , KEQMAIT , KEQLIEN , KEQCDOC , KEQVER , KEQLIB , KEQNTA , KEQDACC , KEQTAE , KEQNOM , KEQCHM , KEQSTU , KEQSIT , KEQSTD , KEQSTH , KEQENVU , KEQENVD , 
											KEQENVH , KEQTEDI , KEQORID , KEQTYDS , KEQTYI , KEQIDS , KEQINL , KEQNBEX , KEQCRU , KEQCRD , KEQCRH , KEQMAJU , KEQMAJD , KEQMAJH , KEQSTG , KEQDIMP ) 
									( SELECT V_NEWID , P_TYPEOFFRE , P_CODEOFFRE , P_NEWVERS , KEQSUA , KEQNUM , KEQSBR , KEQSERV , KEQACTG , 
				KEQACTN , KEQECO , KEQAVN , KEQETAP , KEQKEMID , KEQORD , KEQTGL , KEQTDOC , 
				KEQKESID , KEQAJT , KEQTRS , KEQMAIT , KEQLIEN , KEQCDOC , KEQVER , KEQLIB , 
				KEQNTA , KEQDACC , KEQTAE , V_NEWNOM , V_NEWCHEMIN , KEQSTU , KEQSIT , KEQSTD , KEQSTH , 
				KEQENVU , KEQENVD , KEQENVH , KEQTEDI , KEQORID , KEQTYDS , KEQTYI , KEQIDS , KEQINL , 
				KEQNBEX , KEQCRU , KEQCRD , KEQCRH , KEQMAJU , KEQMAJD , KEQMAJH , KEQSTG , KEQDIMP 
			FROM KPDOC WHERE KEQID = P_CODECLIBRE ) ; 
			 
			INSERT INTO KPCOPDC				 
				( KHQIPB , KHQALX , KHQTYP , KHQAVN , KHQOLDC , KHQCODE , KHQNOMD , KHQTABLE , KHQOLDID ) 
			VALUES 
				( P_CODEOFFRE , P_NEWVERS , P_TYPEOFFRE , 0 , TRIM ( V_OLDCHEMIN ) , V_NEWID , TRIM ( V_NEWCHEMIN ) , 'KPDOC' , P_CODECLIBRE ) ; 
			 
		ELSE  --DOC EXTERNE 
			CALL SP_NCHRONO ( 'KERID' , V_NEWID ) ; 
		 
			SELECT KERCHM , KERNOM , KERIPB , KERALX , KERTYP INTO V_KERCHM , V_KERNOM , V_CODESOURCE , V_VERSIONSOURCE , V_TYPESOURCE 
			FROM KPDOCEXT 
			WHERE KERID = P_CODECLIBRE ; 
  
			SET V_SOURCEIPBALXTYP = TRIM ( V_CODESOURCE ) CONCAT '__' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || V_VERSIONSOURCE , 4 ) CONCAT '__' CONCAT V_TYPESOURCE ; 
			SET V_DESTIPBALXTYP = TRIM ( P_CODEOFFRE ) CONCAT '__' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || P_NEWVERS , 4 ) CONCAT '__' CONCAT P_TYPEOFFRE ;	 
			 
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_KERCHM ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_KERNOM ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			 
			SET V_SOURCEIPBALXTYP = TRIM ( V_CODESOURCE ) CONCAT '_' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || V_VERSIONSOURCE , 4 ) CONCAT '_' CONCAT V_TYPESOURCE ; 
			SET V_DESTIPBALXTYP = TRIM ( P_CODEOFFRE ) CONCAT '_' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || P_NEWVERS , 4 ) CONCAT '_' CONCAT P_TYPEOFFRE ;	 
			 
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_NEWCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			 
			SET V_SOURCEIPBALXTYP = TRIM ( V_CODESOURCE ) CONCAT '__' CONCAT V_VERSIONSOURCE CONCAT '__' CONCAT V_TYPESOURCE ; 
			SET V_DESTIPBALXTYP = TRIM ( P_CODEOFFRE ) CONCAT '__' CONCAT P_NEWVERS CONCAT '__' CONCAT P_TYPEOFFRE ;	 
			 
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_NEWCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			 
			SET V_SOURCEIPBALXTYP = TRIM ( V_CODESOURCE ) CONCAT '_' CONCAT V_VERSIONSOURCE CONCAT '_' CONCAT V_TYPESOURCE ; 
			SET V_DESTIPBALXTYP = TRIM ( P_CODEOFFRE ) CONCAT '_' CONCAT P_NEWVERS CONCAT '_' CONCAT P_TYPEOFFRE ;	 
			 
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_NEWCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALXTYP ) ) , TRIM ( LOWER ( V_DESTIPBALXTYP ) ) ) ; 
			 
			SET V_SOURCEIPBALX = TRIM ( V_CODESOURCE ) CONCAT '__' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || V_VERSIONSOURCE , 4 ) ; 
			SET V_DESTIPBALX = TRIM ( P_CODEOFFRE ) CONCAT '__' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || P_NEWVERS , 4 ) ; 
  
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_NEWCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALX ) ) , TRIM ( LOWER ( V_DESTIPBALX ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALX ) ) , TRIM ( LOWER ( V_DESTIPBALX ) ) ) ; 
			 
			SET V_SOURCEIPBALX = TRIM ( V_CODESOURCE ) CONCAT '_' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || V_VERSIONSOURCE , 4 ) ; 
			SET V_DESTIPBALX = TRIM ( P_CODEOFFRE ) CONCAT '_' CONCAT RIGHT ( REPEAT ( '0' , 4 ) || P_NEWVERS , 4 ) ; 
  
			SET V_NEWCHEMIN = REPLACE ( LOWER ( V_NEWCHEMIN ) , TRIM ( LOWER ( V_SOURCEIPBALX ) ) , TRIM ( LOWER ( V_DESTIPBALX ) ) ) ; 
			SET V_NEWNOM = REPLACE ( LOWER ( V_NEWNOM ) , TRIM ( LOWER ( V_SOURCEIPBALX ) ) , TRIM ( LOWER ( V_DESTIPBALX ) ) ) ; 
			 
			INSERT INTO KPDOCEXT 
			( KERID , KERTYP , KERIPB , KERALX , KERSUA , KERNUM , KERSBR , KERSERV , KERACTG , KERAVN , KERORD , KERTYPO , 
			KERLIB , KERNOM , KERCHM , KERSTU , KERSIT , KERSTD , KERSTH , KERCRU , KERCRD , KERCRH , KERREF )		 
			( SELECT V_NEWID , P_TYPEOFFRE , P_CODEOFFRE , P_NEWVERS , KERSUA , KERNUM , KERSBR , KERSERV , KERACTG , KERAVN , KERORD , KERTYPO , 
			KERLIB , V_NEWNOM , V_NEWCHEMIN , KERSTU , KERSIT , KERSTD , KERSTH , KERCRU , KERCRD , KERCRH , KERREF 
			FROM KPDOCEXT 
			WHERE KERID = P_CODECLIBRE ) ; 
			 
			INSERT INTO KPCOPDC 
				( KHQIPB , KHQALX , KHQTYP , KHQAVN , KHQOLDC , KHQCODE , KHQNOMD , KHQTABLE , KHQOLDID ) 
			VALUES 
				( P_CODEOFFRE , P_NEWVERS , P_TYPEOFFRE , 0 , TRIM ( V_KERCHM ) , V_NEWID , TRIM ( V_NEWCHEMIN ) , 'KPDOCEXT' , P_CODECLIBRE ) ; 
			 
		END IF ; 
				 
			IF ( TRIM ( P_MODECOPY ) <> 'AFFNOUV' ) THEN 
			 
				CALL SP_SECOPID ( P_CODEOFFRE , P_VERSOFFRE , P_TYPEOFFRE , 'KCAID' , P_CODECLAUSE , V_NEWCODECLAUSE ) ; 
		 
				IF ( V_NEWCODECLAUSE = 0 ) THEN 
					CALL SP_NCHRONO ( 'KCAID' , V_NEWCODECLAUSE ) ; 
					CALL SP_INCOPID ( P_CODEOFFRE , P_VERSOFFRE , P_TYPEOFFRE , 'KCAID' , P_CODECLAUSE , V_NEWCODECLAUSE ) ; 
				END IF ; 
			 
				INSERT INTO KPCLAUSE 
					( KCAID , KCATYP , KCAIPB , KCAALX , KCAETAFF , KCAPERI , KCARSQ , KCAOBJ , KCAINVEN , KCAINLGN , 
					KCAFOR , KCAOPT , KCAGAR , KCACTX , KCAAJT , KCANTA , KCAKDUID , KCACLNM1 , KCACLNM2 , KCACLNM3 , KCAVER , KCATXL , KCAMER , KCADOC , 
					KCACHI , KCACHIS , KCAIMP , KCACXI , KCAIAN , KCAIAC , KCASIT , KCASITD , KCAAVNC , KCACRD , KCAAVNM , KCAMAJD , KCASPA , KCATYPO , KCAAIM , KCATAE , 
					KCAELGO , KCAELGI , KCAXTL , KCATYPD , KCAETAPE ) 
				( SELECT V_NEWCODECLAUSE , P_TYPEOFFRE , P_CODEOFFRE , P_NEWVERS , KCAETAFF , KCAPERI , KCARSQ , KCAOBJ , V_NEWP_CODEINVEN , KCAINLGN , 
					KCAFOR , KCAOPT , KCAGAR , KCACTX , KCAAJT , KCANTA , KCAKDUID , KCACLNM1 , KCACLNM2 , KCACLNM3 , KCAVER , V_NEWID , KCAMER , KCADOC , 
					KCACHI , KCACHIS , KCAIMP , KCACXI , KCAIAN , KCAIAC , KCASIT , V_DATENOW , 0 , V_DATENOW , 0 , V_DATENOW , KCASPA , KCATYPO , KCAAIM , KCATAE , 
					KCAELGO , KCAELGI , KCAXTL , KCATYPD , KCAETAPE 
				FROM KPCLAUSE 
				WHERE KCAID = P_CODECLAUSE ) ;				 
			ELSE 
			 
				CALL SP_SECOPID ( P_CODEOFFRE , P_VERSOFFRE , P_TYPEOFFRE , 'KCAID' , P_CODECLAUSE , V_NEWCODECLAUSE ) ; 
			 
				IF ( V_NEWCODECLAUSE = 0 ) THEN 
					CALL SP_NCHRONO ( 'KCAID' , V_NEWCODECLAUSE ) ; 
					CALL SP_INCOPID ( P_CODEOFFRE , P_VERSOFFRE , P_TYPEOFFRE , 'KCAID' , P_CODECLAUSE , V_NEWCODECLAUSE ) ; 
				END IF ; 
			 
				INSERT INTO KPCLAUSE 
					( KCAID , KCATYP , KCAIPB , KCAALX , KCAETAFF , KCAPERI , KCARSQ , KCAOBJ , KCAINVEN , KCAINLGN , 
					KCAFOR , KCAOPT , KCAGAR , KCACTX , KCAAJT , KCANTA , KCAKDUID , KCACLNM1 , KCACLNM2 , KCACLNM3 , KCAVER , KCATXL , KCAMER , KCADOC , 
					KCACHI , KCACHIS , KCAIMP , KCACXI , KCAIAN , KCAIAC , KCASIT , KCASITD , KCAAVNC , KCACRD , KCAAVNM , KCAMAJD , KCASPA , KCATYPO , KCAAIM , KCATAE , 
					KCAELGO , KCAELGI , KCAXTL , KCATYPD , KCAETAPE , KCAXTLM ) 
				( SELECT V_NEWCODECLAUSE , P_TYPEOFFRE , P_CODEOFFRE , P_NEWVERS , KCAETAFF , KCAPERI , KCARSQ , KCAOBJ , V_NEWP_CODEINVEN , KCAINLGN , 
					KCAFOR , KCAOPT , KCAGAR , KCACTX , KCAAJT , KCANTA , KCAKDUID , KCACLNM1 , KCACLNM2 , KCACLNM3 , KCAVER , V_NEWID , KCAMER , KCADOC , 
					KCACHI , KCACHIS , KCAIMP , KCACXI , KCAIAN , KCAIAC , KCASIT , V_DATENOW , 0 , V_DATENOW , 0 , V_DATENOW , KCASPA , KCATYPO , KCAAIM , KCATAE , 
					KCAELGO , KCAELGI , KCAXTL , KCATYPD , KCAETAPE , KCAXTLM 
			FROM KPCLAUSE 
			WHERE KCAID = P_CODECLAUSE ) ; 
			 
			END IF ; 
		END IF ; 
	 
	END IF ; 
END P1  ;

