CREATE PROCEDURE SP_COPYEXPRCOMPREFERENTIEL ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_TYPEEXPR CHAR(9) , 
	IN P_IDEXPR INTEGER , 
	IN P_MODEREF CHAR(1) , 
	OUT P_NEWIDEXPR INTEGER ) 
	LANGUAGE SQL 
	SPECIFIC SP_COPYEXPRCOMPREFERENTIEL 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	 --Si P_MODEREF égal 'O' => mode référentiel (non modifiable), sinon mode modele => modifiable 
	DECLARE V_IDDESI INTEGER DEFAULT 0 ; 
	DECLARE V_NEWIDDESI INTEGER DEFAULT 0 ; 
	DECLARE V_NEWIDEXPRD INTEGER DEFAULT 0 ; 
	DECLARE V_DESISTR VARCHAR ( 5000 ) DEFAULT '' ; 
	DECLARE V_NEWCODEEXPR CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_MAXORDRE INTEGER DEFAULT 1 ; 
	DECLARE V_CODE CHAR ( 5 ) DEFAULT '' ; 
	 
	SET P_TYPEEXPR = UPPER ( P_TYPEEXPR ) ; 
	 
	IF ( P_MODEREF = 'O' ) THEN 
			/* RÉCUPÉRATION DE LA DÉSIGNATION DE L'EXPRESSION COMPLEXE */ 
			CASE P_TYPEEXPR 
					WHEN 'LCI' THEN 
						SELECT KHGDESI INTO V_IDDESI FROM KEXPLCI WHERE KHGID = P_IDEXPR ; 
					WHEN 'FRANCHISE' THEN 
						SELECT KHEDESI INTO V_IDDESI FROM KEXPFRH WHERE KHEID = P_IDEXPR ; 
					ELSE 
						SET V_IDDESI = 0 ; 
			END CASE ; 
			 
			/* ENREGISTREMENT DE LA DÉSIGNATION */ 
			IF ( V_IDDESI > 0 ) THEN 
				SELECT KDWDESI INTO V_DESISTR FROM KDESI WHERE KDWID = V_IDDESI ; 
				CALL SP_NCHRONO ( 'KADCHR' , V_NEWIDDESI ) ; 
				INSERT INTO KPDESI 
					( KADCHR , KADTYP , KADIPB , KADALX , KADPERI , KADRSQ , KADOBJ , KADDESI ) 
				VALUES 
					( V_NEWIDDESI , P_TYPE , P_CODEOFFRE , P_VERSION , '' , 0 , 0 , V_DESISTR ) ; 
			END IF ;	 
		 
			CASE P_TYPEEXPR 
				WHEN 'LCI' THEN 
					CALL SP_NCHRONO ( 'KDIID' , P_NEWIDEXPR ) ; 
		 
					/* INSERTION DE L'EXPRESSION COMPLEXE */ 
					INSERT INTO KPEXPLCI 
						( KDIID , KDITYP , KDIIPB , KDIALX , KDILCE , KDIDESC , KDIDESI , KDIORI , KDIMODI ) 
					( SELECT P_NEWIDEXPR , P_TYPE , P_CODEOFFRE , P_VERSION , KHGLCE , KHGDESC , V_NEWIDDESI , 'R' , KHGMODI 
						FROM KEXPLCI WHERE KHGID = P_IDEXPR ) ; 
						 
					/* INSERTION DES DÉTAILS DE L'EXPRESSION COMPLEXE */ 
					FOR LOOP_LCI AS FREE_LIST CURSOR FOR 
						SELECT KHHORDRE ORDRE , KHHLCVAL LCIVAL , KHHLCVAU LCIUNITE , KHHLCBASE LCITYPE , 
								KHHLOVAL CONCUVAL , KHHLOVAU CONCUUNITE , KHHLOBASE CONCUTYPE 
						FROM KEXPLCID WHERE KHHKHGID = P_IDEXPR 
					DO 
						CALL SP_NCHRONO ( 'KDJID' , V_NEWIDEXPRD ) ; 
						INSERT INTO KPEXPLCID 
							( KDJID , KDJKDIID , KDJORDRE , KDJLCVAL , KDJLCVAU , KDJLCBASE , KDJLOVAL , KDJLOVAU , KDJLOBASE ) 
						VALUES 
							( V_NEWIDEXPRD , P_NEWIDEXPR , ORDRE , LCIVAL , LCIUNITE , LCITYPE , CONCUVAL , CONCUUNITE , CONCUTYPE ) ; 
					END FOR ; 
				WHEN 'FRANCHISE' THEN 
					CALL SP_NCHRONO ( 'KDKID' , P_NEWIDEXPR ) ; 
		 
					/* INSERTION DE L'EXPRESSION COMPLEXE */ 
					INSERT INTO KPEXPFRH 
						( KDKID , KDKTYP , KDKIPB , KDKALX , KDKFHE , KDKDESC , KDKDESI , KDKORI , KDKMODI ) 
					( SELECT P_NEWIDEXPR , P_TYPE , P_CODEOFFRE , P_VERSION , KHEFHE , KHEDESC , V_NEWIDDESI , 'R' , KHEMODI 
						FROM KEXPFRH WHERE KHEID = P_IDEXPR ) ; 
						 
					/* INSERTION DES DÉTAILS DE L'EXPRESSION COMPLEXE */ 
					FOR LOOP_FRH AS FREE_LIST CURSOR FOR 
						SELECT KHFORDRE ORDRE , KHFFHVAL FRHVAL , KHFFHVAU FRHUNITE , KHFBASE FRHTYPE , KHFIND INDICE , 
								KHFIVO INDICEVAL , KHFFHMINI FRHMINI , KHFFHMAXI FRHMAXI , KHFLIMDEB LIMITEDEB , KHFLIMFIN LIMITEFIN 
						FROM KEXPFRHD WHERE KHFKHEID = P_IDEXPR 
					DO 
						CALL SP_NCHRONO ( 'KDLID' , V_NEWIDEXPRD ) ; 
						INSERT INTO KPEXPFRHD 
							( KDLID , KDLKDKID , KDLORDRE , KDLFHVAL , KDLFHVAU , KDLFHBASE , KDLIND , KDLIVO , KDLFHMINI , KDLFHMAXI , KDLLIMDEB , KDLLIMFIN ) 
						VALUES 
							( V_NEWIDEXPRD , P_NEWIDEXPR , ORDRE , FRHVAL , FRHUNITE , FRHTYPE , INDICE , INDICEVAL , FRHMINI , FRHMAXI , LIMITEDEB , LIMITEFIN ) ; 
					END FOR ; 
				ELSE 
					SET P_NEWIDEXPR = 0 ; 
			END CASE ; 
	 
	ELSE  -- Mode modèle 
		IF ( TRIM ( P_TYPEEXPR ) = 'LCI' ) THEN			 
			CALL SP_NCHRONO ( 'KDIID' , P_NEWIDEXPR ) ; 
		 
		/* RÉCUPÉRATION DE LA DÉSIGNATION DE L'EXPRESSION COMPLEXE */ 
			CASE P_TYPEEXPR 
					WHEN 'LCI' THEN 
						SELECT KHGDESI INTO V_IDDESI FROM KEXPLCI WHERE KHGID = P_IDEXPR ; 
					WHEN 'FRANCHISE' THEN 
						SELECT KHEDESI INTO V_IDDESI FROM KEXPFRH WHERE KHEID = P_IDEXPR ; 
					ELSE 
						SET V_IDDESI = 0 ; 
			END CASE ; 
		 
			IF ( V_IDDESI > 0 ) THEN 
				SELECT KDWDESI INTO V_DESISTR FROM KDESI WHERE KDWID = V_IDDESI ; 
				CALL SP_NCHRONO ( 'KADCHR' , V_NEWIDDESI ) ; 
				INSERT INTO KPDESI 
					( KADCHR , KADTYP , KADIPB , KADALX , KADPERI , KADRSQ , KADOBJ , KADDESI ) 
				VALUES 
					( V_NEWIDDESI , P_TYPE , P_CODEOFFRE , P_VERSION , '' , 0 , 0 , V_DESISTR ) ; 
			END IF ;	 
			 
			/* SELECT 'L' CONCAT RIGHT ( REPEAT ( '0' , 2 ) || IFNULL ( MAX ( CAST ( SUBSTRING ( KDILCE , 3 ) AS INT ) ) + 1 , 1 ) , 2 ) INTO V_CODE FROM KPEXPLCI     
				WHERE KDITYP = P_TYPE AND TRIM ( KDIIPB ) = TRIM ( P_CODEOFFRE ) AND KDIALX = P_VERSION     
					AND SUBSTRING ( KDILCE , 1 , 3 ) <> 'EXP' AND SUBSTRING ( KDILCE , 1 , 1 ) = 'L' ;  */ 
			 
			/* MISE EN COMMENTAIRE LE 2015-03-30 RÉDUCTION DU NOMBRE DE CARACTÈRES DE L'EXPRESSION COMPLEXE */ 
			SELECT 'LL' CONCAT RIGHT ( REPEAT ( '0' , 3 ) || IFNULL ( MAX ( CAST ( SUBSTRING ( KDILCE , 3 ) AS INT ) ) + 1 , 1 ) , 3 ) INTO V_CODE FROM KPEXPLCI 
WHERE KDITYP = P_TYPE AND TRIM ( KDIIPB ) = TRIM ( P_CODEOFFRE ) AND KDIALX = P_VERSION 
AND SUBSTRING ( KDILCE , 1 , 3 ) <> 'EXP' AND SUBSTRING ( KDILCE , 1 , 2 ) = 'LL' ; 
  
					/* INSERTION DE L'EXPRESSION COMPLEXE */ 
			INSERT INTO KPEXPLCI 
			( KDIID , KDITYP , KDIIPB , KDIALX , KDILCE , KDIDESC , KDIDESI , KDIORI , KDIMODI ) 
			( SELECT P_NEWIDEXPR , P_TYPE , P_CODEOFFRE , P_VERSION , V_CODE , KHGDESC , V_NEWIDDESI , 'S' , 'O' 
			FROM KEXPLCI WHERE KHGID = P_IDEXPR ) ; 
		 
			/* INSERTION DES DÉTAILS DE L'EXPRESSION COMPLEXE */ 
			FOR LOOP_LCIMDL AS FREE_LIST CURSOR FOR 
				SELECT KHHORDRE ORDRE , KHHLCVAL LCIVAL , KHHLCVAU LCIUNITE , KHHLCBASE LCITYPE , 
						KHHLOVAL CONCUVAL , KHHLOVAU CONCUUNITE , KHHLOBASE CONCUTYPE 
				FROM KEXPLCID WHERE KHHKHGID = P_IDEXPR 
				DO					 
					CALL SP_NCHRONO ( 'KDJID' , V_NEWIDEXPRD ) ; 
					SELECT IFNULL ( MAX ( KHHORDRE ) , 0 ) + 1 INTO V_MAXORDRE FROM KEXPLCID WHERE KHHKHGID = P_IDEXPR ; 
						 
					INSERT INTO KPEXPLCID 
							( KDJID , KDJKDIID , KDJORDRE , KDJLCVAL , KDJLCVAU , KDJLCBASE , KDJLOVAL , KDJLOVAU , KDJLOBASE ) 
					VALUES 
							( V_NEWIDEXPRD , P_NEWIDEXPR , ORDRE , LCIVAL , LCIUNITE , LCITYPE , CONCUVAL , CONCUUNITE , CONCUTYPE ) ; 
			END FOR ;		 
		END IF ; 
		 
		IF ( TRIM ( P_TYPEEXPR ) = 'FRANCHISE' ) THEN		 
				CALL SP_NCHRONO ( 'KDKID' , P_NEWIDEXPR ) ;	 
				 
				/* RÉCUPÉRATION DE LA DÉSIGNATION DE L'EXPRESSION COMPLEXE */ 
				CASE P_TYPEEXPR 
						WHEN 'LCI' THEN 
							SELECT KHGDESI INTO V_IDDESI FROM KEXPLCI WHERE KHGID = P_IDEXPR ; 
						WHEN 'FRANCHISE' THEN 
							SELECT KHEDESI INTO V_IDDESI FROM KEXPFRH WHERE KHEID = P_IDEXPR ; 
						ELSE 
							SET V_IDDESI = 0 ; 
				END CASE ; 
				 
				IF ( V_IDDESI > 0 ) THEN 
				SELECT KDWDESI INTO V_DESISTR FROM KDESI WHERE KDWID = V_IDDESI ; 
				CALL SP_NCHRONO ( 'KADCHR' , V_NEWIDDESI ) ; 
				INSERT INTO KPDESI 
					( KADCHR , KADTYP , KADIPB , KADALX , KADPERI , KADRSQ , KADOBJ , KADDESI ) 
				VALUES 
					( V_NEWIDDESI , P_TYPE , P_CODEOFFRE , P_VERSION , '' , 0 , 0 , V_DESISTR ) ; 
			END IF ;	 
				 
			/* SELECT 'F' CONCAT RIGHT ( REPEAT ( '0' , 2 ) || IFNULL ( MAX ( CAST ( SUBSTRING ( KDKFHE , 3 ) AS INT ) ) + 1 , 1 ) , 2 ) INTO V_CODE FROM KPEXPFRH     
				WHERE KDKTYP = P_TYPE AND TRIM ( KDKIPB ) = TRIM ( P_CODEOFFRE ) AND KDKALX = P_VERSION     
					AND SUBSTRING ( KDKFHE , 1 , 3 ) <> 'EXP' AND SUBSTRING ( KDKFHE , 1 , 1 ) = 'F' ;  */ 
  
				 
				SELECT 'LF' CONCAT RIGHT ( REPEAT ( '0' , 3 ) || IFNULL ( MAX ( CAST ( SUBSTRING ( KDKFHE , 3 ) AS INT ) ) + 1 , 1 ) , 3 ) INTO V_CODE FROM KPEXPFRH 
WHERE KDKTYP = P_TYPE AND TRIM ( KDKIPB ) = TRIM ( P_CODEOFFRE ) AND KDKALX = P_VERSION 
AND SUBSTRING ( KDKFHE , 1 , 3 ) <> 'EXP' AND SUBSTRING ( KDKFHE , 1 , 2 ) = 'LF' ; 
				 
			/* INSERTION DE L'EXPRESSION COMPLEXE */ 
			INSERT INTO KPEXPFRH 
				( KDKID , KDKTYP , KDKIPB , KDKALX , KDKFHE , KDKDESC , KDKDESI , KDKORI , KDKMODI ) 
		( SELECT P_NEWIDEXPR , P_TYPE , P_CODEOFFRE , P_VERSION , V_CODE , KHEDESC , V_NEWIDDESI , 'S' , 'O' 
						FROM KEXPFRH WHERE KHEID = P_IDEXPR ) ; 
		 
		/* INSERTION DES DÉTAILS DE L'EXPRESSION COMPLEXE */ 
			FOR LOOP_FRHMDL AS FREE_LIST CURSOR FOR 
				SELECT KHFORDRE ORDRE , KHFFHVAL FRHVAL , KHFFHVAU FRHUNITE , KHFBASE FRHTYPE , KHFIND INDICE , 
						KHFIVO INDICEVAL , KHFFHMINI FRHMINI , KHFFHMAXI FRHMAXI , KHFLIMDEB LIMITEDEB , KHFLIMFIN LIMITEFIN 
				FROM KEXPFRHD WHERE KHFKHEID = P_IDEXPR 
				DO					 
					CALL SP_NCHRONO ( 'KDLID' , V_NEWIDEXPRD ) ; 
					SELECT IFNULL ( MAX ( KHFORDRE ) , 0 ) + 1 INTO V_MAXORDRE FROM KEXPFRHD WHERE KHFKHEID = P_IDEXPR ; 
				 
					INSERT INTO KPEXPFRHD 
							( KDLID , KDLKDKID , KDLORDRE , KDLFHVAL , KDLFHVAU , KDLFHBASE , KDLIND , KDLIVO , KDLFHMINI , KDLFHMAXI , KDLLIMDEB , KDLLIMFIN ) 
					VALUES 
							( V_NEWIDEXPRD , P_NEWIDEXPR , ORDRE , FRHVAL , FRHUNITE , FRHTYPE , INDICE , INDICEVAL , FRHMINI , FRHMAXI , LIMITEDEB , LIMITEFIN ) ; 
			END FOR ; 
		END IF ;	 
		 
		 --SET P_NEWIDEXPR = V_NEWIDEXPRD ; 
	END IF ; 
END P1  ; 
  

  

