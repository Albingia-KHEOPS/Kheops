CREATE PROCEDURE SP_CORISQUE ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_CODECONTRAT CHAR(9) , 
	IN P_VERSIONCONTRAT INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_CORISQUE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
DECLARE V_CHECKRSQ VARCHAR ( 1 ) DEFAULT '' ; 
DECLARE V_CODECHR INTEGER DEFAULT 0 ; 
  
FOR LOOP_RSQ AS FREE_LIST CURSOR FOR 
SELECT JERSQ FROM YPRTRSQ 
WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION 
  
DO 
CALL SP_COVERIF ( P_CODECONTRAT , P_VERSIONCONTRAT , 'R' , JERSQ , 0 , V_CHECKRSQ ) ; 
  
IF ( V_CHECKRSQ = '' ) THEN 
SET V_CHECKRSQ = 'O' ; 
  
CALL SP_NCHRONO ( 'KFICHR' , V_CODECHR ) ; 
  
INSERT INTO KPOFRSQ 
( KFIPOG , KFIALG , KFIIPB , KFIALX , KFICHR , KFITYE , KFIRSQ , KFIOBJ , KFIINV , KFISEL ) 
VALUES 
( P_CODECONTRAT , P_VERSIONCONTRAT , P_CODEOFFRE , P_VERSION , V_CODECHR , 'R' , JERSQ , 0 , '' , V_CHECKRSQ ) ; 
  
END IF ; 
  
CALL SP_COOBJET ( P_CODEOFFRE , P_VERSION , P_CODECONTRAT , P_VERSIONCONTRAT , JERSQ , V_CHECKRSQ ) ; 
  
SET V_CHECKRSQ = '' ; 
END FOR ; 
  
  
END P1  ; 
  

  

