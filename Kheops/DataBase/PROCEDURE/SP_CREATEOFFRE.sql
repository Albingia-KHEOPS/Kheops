CREATE OR REPLACE PROCEDURE SP_CREATEOFFRE ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_INTERLOCUTEUR INTEGER , 
	IN P_DESCRIPTIF CHAR(40) , 
	IN P_MOTCLE1 CHAR(10) , 
	IN P_MOTCLE2 CHAR(10) , 
	IN P_MOTCLE3 CHAR(10) , 
	IN P_CODEPRENEURASSU INTEGER , 
	IN P_COURTIERGESTCODE INTEGER , 
	IN P_COURTIERAPPCODE INTEGER , 
	IN P_REFCOURTIER CHAR(25) , 
	IN P_BRANCHE CHAR(2) , 
	IN P_USER CHAR(10) , 
	IN P_YEARNOW INTEGER , 
	IN P_MONTHNOW INTEGER , 
	IN P_DAYNOW INTEGER , 
	IN P_SOUSCRIPTEURCODE CHAR(10) , 
	IN P_GESTIONNAIRECODE CHAR(10) , 
	IN P_YEARSAISIE INTEGER , 
	IN P_MONTHSAISIE INTEGER , 
	IN P_DAYSAISIE INTEGER , 
	IN P_HOURSAISIE INTEGER , 
	IN P_OBSERVATION CHAR(5000) , 
	IN P_CIBLE CHAR(10) , 
	IN P_INDICEREF CHAR(3) , 
	IN P_VALEUR DECIMAL(5, 2) , 
	IN P_INTERCALAIRE CHAR(1) , 
	IN P_CATNAT CHAR(1) , 
	IN P_DATENOW INTEGER , 
	IN P_HOURNOW INTEGER , 
	IN P_NATURECONTRAT CHAR(1) , 
	IN P_APERITEURCODE CHAR(1) , 
	IN P_PARTAPERITEUR DECIMAL(5, 2) , 
	IN P_FRAISAPERITION DECIMAL(5, 2) , 
	IN P_HASADRESSE CHAR(1) , 
	IN P_ADRCHRONO INTEGER , 
	IN P_BATIMENT CHAR(32) , 
	IN P_NUMVOIE CHAR(10) , 
	IN P_NUMVOIE2 CHAR(15) , 
	IN P_EXTVOIE CHAR(1) , 
	IN P_NOMVOIE CHAR(32) , 
	IN P_BP CHAR(32) , 
	IN P_LOC CHAR(5) , 
	IN P_DEPARTEMENT CHAR(2) , 
	IN P_CP CHAR(5) , 
	IN P_VILLE CHAR(26) , 
	IN P_VOIECOMPLETE CHAR(32) , 
	IN P_VILLECOMPLETE CHAR(32) , 
	IN P_CPCDX CHAR(5) , 
	IN P_VILLECDX CHAR(32) , 
	IN P_MATRICULEHEX INTEGER , 
	IN P_DATESAISIE INTEGER , 
	IN P_PRENEURESTASSURE CHAR(1) , 
	IN P_ISADDRESSEMPTY INTEGER , 
	IN P_LATITUDE NUMERIC(10, 7) , 
	IN P_LONGITUDE NUMERIC(10, 7) , 
	OUT P_MSGERROR CHAR(5000) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_CREATEOFFRE
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_NBLIGNE INTEGER DEFAULT 0 ; 
	DECLARE V_CODERSQ INTEGER DEFAULT 0 ; 
	DECLARE V_OBSCHRONO INTEGER DEFAULT 0 ; 
	DECLARE V_PRIMECATNAT DECIMAL ( 5 , 3 ) DEFAULT 0 ; 
	DECLARE V_DBLSAISIECHRONO INTEGER DEFAULT 0 ; 
	DECLARE V_TYPEINTERLOCUTEUR CHAR ( 1 ) DEFAULT '' ; 
	 
	DECLARE V_FIRSTRSQ INTEGER DEFAULT 0 ; 
	DECLARE V_RSQCATNAT CHAR ( 1 ) DEFAULT '' ; 
	 
	 
	DECLARE V_SOUSBRANCHE CHAR ( 2 ) DEFAULT '' ; 
	DECLARE V_CATEGORIE CHAR ( 5 ) DEFAULT '' ; 
  
	DECLARE V_COURTDIRECT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_TYPEENC CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CODEENC CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NEWCODEENC CHAR ( 1 ) DEFAULT '' ; 
  
	DECLARE V_PBORK CHAR ( 3 ) DEFAULT '' ; 
	 
  
	DECLARE V_MONTFRAISACC DECIMAL ( 7 , 0 ) DEFAULT 0 ; 
	DECLARE V_APPTAXEATT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_TXCOMCATNAT DECIMAL ( 5 , 3 ) DEFAULT 0 ; 
	DECLARE V_INDEXATION CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CODEINDICE CHAR ( 3 ) DEFAULT '' ; 
	DECLARE V_INDEXCAPITAUX CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_INDEXFRANCHISE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_INDEXLCI CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_INDEXPRIME CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CNA DECIMAL ( 5 , 3 ) DEFAULT 0 ; 
	 
	 -- TRAITEMENT DE L'OFFRE 
	SET P_MSGERROR = '' ; 
	 -- VÃ‰RIFICATION DU SOUSCRIPTEUR 
	IF ( P_SOUSCRIPTEURCODE != '' ) THEN 
		SET V_NBLIGNE = 0 ; 
		SELECT COUNT ( * ) INTO V_NBLIGNE FROM YUTILIS 
		WHERE UTIUT = P_SOUSCRIPTEURCODE AND UTSOU = 'O' ; 
		IF ( V_NBLIGNE = 0 ) THEN 
			SET P_MSGERROR = '; CODE SOUSCRIPTEUR INCONNU' ; 
		END IF ; 
	END IF ; 

	SET P_CODEOFFRE = LPAD ( TRIM(P_CODEOFFRE) , 9 , ' ');
  
	IF ( TRIM ( P_CODEOFFRE ) LIKE 'CV%' ) THEN 
		SET V_PBORK = 'KVS' ; 
	ELSE 
		SET V_PBORK = 'KHE' ; 
	END IF ; 
	 -- VÃ‰RIFICATION DU GESTIONNAIRE 
	IF ( P_GESTIONNAIRECODE != '' ) THEN 
		SET V_NBLIGNE = 0 ; 
		SELECT COUNT ( * ) INTO V_NBLIGNE FROM YUTILIS 
		WHERE UTIUT = P_GESTIONNAIRECODE AND UTGEP = 'O' ; 
		IF ( V_NBLIGNE = 0 ) THEN 
			SET P_MSGERROR = TRIM ( P_MSGERROR ) CONCAT '; CODE GESTIONNAIRE INCONNU' ; 
		END IF ; 
	END IF ; 
  
	IF ( P_MSGERROR = '' ) THEN 
		SELECT KAISBR , KAICAT INTO V_SOUSBRANCHE , V_CATEGORIE FROM KCIBLEF WHERE KAICIBLE = P_CIBLE AND KAIBRA = P_BRANCHE ; 
  
		 -- TRAITEMENT DE L'OFFRE 
		SET V_NBLIGNE = 0 ; 
		SELECT COUNT ( * ) INTO V_NBLIGNE FROM YPOBASE 
		WHERE PBIPB =  P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
  
		IF ( P_INTERLOCUTEUR != 0 ) THEN 
			SET V_TYPEINTERLOCUTEUR = 'T' ; 
		END IF ; 
  
		IF ( V_NBLIGNE > 0 ) THEN  --PBCTA = P_COURTIERAPPCODE , 
			UPDATE YPOBASE 
				SET PBREF = P_DESCRIPTIF , PBMO1 = P_MOTCLE1 , PBMO2 = P_MOTCLE2 , PBMO3 = P_MOTCLE3 , PBIAS = P_CODEPRENEURASSU , 
					PBICT = P_COURTIERGESTCODE , PBCTA = P_COURTIERGESTCODE , PBOCT = P_REFCOURTIER , PBIN5 = P_INTERLOCUTEUR , 
					PBTIL = V_TYPEINTERLOCUTEUR , PBBRA = P_BRANCHE , PBTBR = P_BRANCHE , PBMJU = P_USER , PBMJA = P_YEARNOW , PBMJM = P_MONTHNOW , PBMJJ = P_DAYNOW , 
					PBSOU = P_SOUSCRIPTEURCODE , PBGES = P_GESTIONNAIRECODE , PBSBR = V_SOUSBRANCHE , PBCAT = V_CATEGORIE , 
					PBSAA = P_YEARSAISIE , PBSAM = P_MONTHSAISIE , PBSAJ = P_DAYSAISIE 
			WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
		ELSE 
			INSERT INTO YPOBASE 
				( PBMO1 , PBMO2 , PBMO3 , PBIAS , PBICT , PBCTA , PBOCT , PBIN5 , PBTIL , 
					PBBRA , PBTBR , PBSAA , PBSAM , PBSAJ , PBSAH , PBMJU , PBMJA , PBMJM , PBMJJ , 
					PBIPB , PBALX , PBTYP , PBETA , PBSTA , PBSTM , PBSTJ , PBCRA , PBCRM , PBCRJ , 
					PBDEA , PBDEM , PBDEJ , PBDEU , PBTTR , PBCRU , PBSOU , PBGES , PBREF , PBSBR , PBCAT , PBORK ) 
			VALUES 
				( P_MOTCLE1 , P_MOTCLE2 , P_MOTCLE3 , P_CODEPRENEURASSU , P_COURTIERGESTCODE , P_COURTIERGESTCODE , P_REFCOURTIER , P_INTERLOCUTEUR , V_TYPEINTERLOCUTEUR , 
					P_BRANCHE , P_BRANCHE , P_YEARSAISIE , P_MONTHSAISIE , P_DAYSAISIE , P_HOURSAISIE , P_USER , P_YEARNOW , P_MONTHNOW , P_DAYNOW , 
					P_CODEOFFRE , P_VERSION , P_TYPE , 'N' , P_YEARNOW , P_MONTHNOW , P_DAYNOW , P_YEARNOW , P_MONTHNOW , P_DAYNOW , 
					P_YEARNOW , P_MONTHNOW , P_DAYNOW , 'SPRINKS' , 'OFFRE' , P_USER , P_SOUSCRIPTEURCODE , P_GESTIONNAIRECODE , P_DESCRIPTIF , V_SOUSBRANCHE , V_CATEGORIE , V_PBORK ) ; 
		END IF ; 
  
		 --TRAITEMENT DU PRENEUR D'ASSURANCE 
		IF ( P_CODEPRENEURASSU > 0 ) THEN 
			SET V_NBLIGNE = 0 ; 
			SELECT COUNT ( * ) INTO V_NBLIGNE FROM YPOASSU 
			WHERE PCIPB = P_CODEOFFRE AND PCALX = P_VERSION AND PCTYP = P_TYPE AND PCPRI = 'O' ; 
  
			IF ( V_NBLIGNE > 0 ) THEN 
				UPDATE YPOASSU SET PCIAS = P_CODEPRENEURASSU 
				WHERE PCIPB = P_CODEOFFRE AND PCALX = P_VERSION AND PCTYP = P_TYPE AND PCPRI = 'O' ; 
		ELSE 
				INSERT INTO YPOASSU ( PCIPB , PCTYP , PCALX , PCPRI , PCIAS ) 
				VALUES 
					( P_CODEOFFRE , P_TYPE , P_VERSION , 'O' , P_CODEPRENEURASSU ) ; 
			END IF ; 
		ELSE 
			DELETE FROM YPOASSU WHERE PCIPB = P_CODEOFFRE AND PCALX = P_VERSION AND PCTYP = P_TYPE AND PCPRI = 'O' ; 
		END IF ; 

		/*----- Traitement des courtiers ---------*/ 
		DELETE FROM YPOCOUR WHERE PFIPB = P_CODEOFFRE AND PFALX = P_VERSION AND PFTYP = P_TYPE ; 
		INSERT INTO YPOCOUR ( PFIPB , PFALX , PFTYP , PFCTI , PFICT ) VALUES ( P_CODEOFFRE , P_VERSION , P_TYPE , 'A' , P_COURTIERGESTCODE ) ; 
  
		/*----- Traitement des courtiers ---------*/ 
  
  
		 -- TRAITEMENT DE L'OBSERVATION DE L'OFFRE 
		SELECT KAAOBSV INTO V_OBSCHRONO FROM KPENT 
		WHERE KAAIPB = P_CODEOFFRE AND KAATYP = P_TYPE AND KAAALX = P_VERSION ; 
  
		IF ( TRIM ( P_OBSERVATION ) != '' AND V_OBSCHRONO = 0 ) THEN 
			CALL SP_NCHRONO ( 'KAJCHR' , V_OBSCHRONO ) ; 
			INSERT INTO KPOBSV 
				( KAJIPB , KAJALX , KAJCHR , KAJTYP , KAJTYPOBS , KAJOBSV ) 
			VALUES 
				( P_CODEOFFRE , P_VERSION , V_OBSCHRONO , P_TYPE , 'GENERALE' , TRIM ( P_OBSERVATION ) ) ; 
		ELSE 
			UPDATE KPOBSV SET KAJOBSV = TRIM ( P_OBSERVATION ) 
			WHERE KAJCHR = V_OBSCHRONO ; 
		END IF ; 
  
		 -- TRAITEMENT DES DONNÃ‰ES DE L'ENTÃŠTE 
		SET V_NBLIGNE = 0 ; 
		SELECT COUNT ( * ) INTO V_NBLIGNE FROM YPRTENT 
		WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
  
		SELECT CAAFR , CAATT , CACNC , CAINA , CAIND , CAIXC , CAIXF , CAIXL , CAIXP , CACNP 
				INTO V_MONTFRAISACC , V_APPTAXEATT , V_TXCOMCATNAT , V_INDEXATION , V_CODEINDICE , V_INDEXCAPITAUX , V_INDEXFRANCHISE , V_INDEXLCI , V_INDEXPRIME , V_CNA 
		FROM YCATEGO 
		WHERE CABRA = P_BRANCHE AND CASBR = V_SOUSBRANCHE AND CACAT = V_CATEGORIE ; 
  
		IF ( V_NBLIGNE = 0 ) THEN 
			INSERT INTO YPRTENT 
				( JDIPB , JDALX , JDDRQ , JDNBR , JDIND , JDIVO , JDIVA , JDITC , JDCNA , JDSHT , 
					JDAFC , JDAFR , JDATT , JDCNC , JDINA , JDIXC , 
					JDIXF , JDIXL , JDIXP ) 
			VALUES 
				( P_CODEOFFRE , P_VERSION , 1 , 1 , P_INDICEREF , P_VALEUR , P_VALEUR , P_INTERCALAIRE , P_CATNAT , 'H' , 
					'S' , V_MONTFRAISACC , V_APPTAXEATT , V_TXCOMCATNAT , V_INDEXATION , V_INDEXCAPITAUX , 
					V_INDEXFRANCHISE , V_INDEXLCI , V_INDEXPRIME ) ; 
		END IF ; 
  
		 -- SMALLER DISTANCE 
		/*TRAITEMENT DU TYPE D'ENCAISSEMENT*/ 
		SELECT TCENC , TCYEN INTO V_COURTDIRECT , V_TYPEENC FROM YCOURTI WHERE TCICT = P_COURTIERAPPCODE ; 
		SELECT JDENC INTO V_CODEENC FROM YPRTENT WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
		SET V_NEWCODEENC = V_CODEENC ; 
  
		IF ( TRIM ( V_COURTDIRECT ) = 'O' ) THEN 
			SET V_NEWCODEENC = 'D' ; 
		ELSE 
			IF ( TRIM ( V_CODEENC ) = '' ) THEN 
				SET V_NEWCODEENC = TRIM ( V_TYPEENC ) ; 
			ELSE 
				IF ( TRIM ( P_TYPE ) = 'O' ) THEN 
					SET V_NEWCODEENC = TRIM ( V_TYPEENC ) ; 
				END IF ; 
				IF ( TRIM ( P_TYPE ) = 'P' ) THEN 
					IF ( TRIM ( V_TYPEENC ) = 'D' ) THEN 
						SET V_NEWCODEENC = TRIM ( V_TYPEENC ) ; 
					END IF ; 
				END IF ; 
			END IF ; 
		END IF ; 
		IF ( TRIM ( V_NEWCODEENC ) = '' ) THEN 
			SET V_NEWCODEENC = 'C' ; 
		END IF ; 

		UPDATE YPRTENT SET JDENC = V_NEWCODEENC WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
		SET V_NBLIGNE = 0 ; 
		SELECT COUNT ( * ) INTO V_NBLIGNE FROM KPENT 
		WHERE KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
  
		IF ( V_NBLIGNE = 0 ) THEN 
			INSERT INTO KPENT 
				( KAAIPB , KAAALX , KAATYP , KAABONI , KAABONT , KAAANTI , KAADESI , KAAOBSV , KAACIBLE , KAAASS ) 
			VALUES 
				( P_CODEOFFRE , P_VERSION , P_TYPE , '' , 0 , '' , 0 , V_OBSCHRONO , P_CIBLE , P_PRENEURESTASSURE ) ; 
		ELSE 
			UPDATE KPENT SET KAAOBSV = V_OBSCHRONO , KAAASS = P_PRENEURESTASSURE ,KAACIBLE = P_CIBLE
			WHERE KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
		END IF ; 
  
		 -- TRAITEMENT DE LA DOUBLE SAISIE 
		SET V_NBLIGNE = 0 ; 
		SELECT COUNT ( * ) INTO V_NBLIGNE FROM KPODBLS 
		WHERE KAFIPB = P_CODEOFFRE AND KAFALX = P_VERSION AND KAFTYP = P_TYPE AND KAFACT = 'INI' ; 
  
		IF ( V_NBLIGNE = 0 ) THEN 
			CALL SP_NCHRONO ( 'KAFID' , V_DBLSAISIECHRONO ) ; 
			INSERT INTO KPODBLS 
				( KAFID , KAFIPB , KAFALX , KAFTYP , KAFICT , KAFSOU , KAFSAID , KAFSAIH , 
					KAFSIT , KAFSITD , KAFSITH , KAFCRD , KAFCRH , KAFCRU , KAFACT , KAFMOT ) 
			VALUES 
				( V_DBLSAISIECHRONO , P_CODEOFFRE , P_VERSION , P_TYPE , P_COURTIERAPPCODE , P_SOUSCRIPTEURCODE , P_DATESAISIE , P_HOURSAISIE , 
					'A' , P_DATENOW , P_HOURNOW , P_DATENOW , P_HOURNOW , P_USER , 'INI' , '' ) ; 
		END IF ; 
  
		 -- TRAITEMENT DU RISQUE 
		SET V_CODERSQ = 0 ; 
		SET V_NBLIGNE = 0 ; 
		 -- DÃ‰TERMINATION DU NOMBRE DE RISQUE POUR VÃ‰RIFIER SI ON ENREGISRE L'ADRESSE AU NIVEAU DU RISQUE 
		SET V_FIRSTRSQ = 0 ; 
		SELECT JERSQ INTO V_FIRSTRSQ FROM YPRTRSQ 
		WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION 
		ORDER BY JERSQ FETCH FIRST 1 ROW ONLY ; 
		IF ( V_FIRSTRSQ = 0 ) THEN 
			SET V_CODERSQ = 1 ; 
		END IF ; 
  
		IF ( V_CODERSQ > 0 ) THEN 
			SET V_NBLIGNE = 0 ; 
			SELECT COUNT ( * ) INTO V_NBLIGNE FROM YPRTRSQ 
			WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION AND JERSQ = V_CODERSQ ; 
  
			IF ( V_NBLIGNE = 0 ) THEN 
				SET V_RSQCATNAT = 'N' ;  --10/02/2017 : CORRECTION BUG 2253, RÃ‰CUPÃ‰RATION DE LA CATNAT PAR RAPPORT A YCATEGO 
				SET V_NBLIGNE = 0 ; 
				 -- CALCUL DU JECNA EN FONCTION DE YCATEGO 
				SELECT COUNT ( * ) INTO V_NBLIGNE FROM YCATEGO 
					INNER JOIN KCIBLEF ON CABRA = KAIBRA AND CASBR = KAISBR AND CACAT = KAICAT 
				WHERE KAICIBLE = P_CIBLE AND KAIBRA = P_BRANCHE ; 
				IF ( V_NBLIGNE != 0 ) THEN 
					SELECT CACNP INTO V_PRIMECATNAT FROM YCATEGO 
						INNER JOIN KCIBLEF ON CABRA = KAIBRA AND CASBR = KAISBR AND CACAT = KAICAT 
					WHERE KAICIBLE = P_CIBLE AND KAIBRA = P_BRANCHE ; 
  
					IF ( V_PRIMECATNAT != 0 ) THEN 
						SET V_RSQCATNAT = 'O' ; 
					END IF ; 
				END IF ; 
				 -- INSERTION DU RISQUE 
				 --ON FORCE LE CATNAT (VOIR BUG 1096) 
				INSERT INTO YPRTRSQ 
					( JEIPB , JEALX , JERSQ , JECCH , JEBRA , JEOBJ , JEDRO , JENBO , JERGT , JECNA , JESBR , JECAT ) 
				VALUES 
					( P_CODEOFFRE , P_VERSION , V_CODERSQ , V_CODERSQ , P_BRANCHE , 1 , 1 , 1 , 1 , V_RSQCATNAT , V_SOUSBRANCHE , V_CATEGORIE ) ; 
			END IF ; 
  
			 -- SI MONO RISQUE METTRE Ã€ JOUR LE CHAMP PBRGT DE YPOBASE Ã€ PARTIR DE JERGT DE YPRTRSQ ET METTRE Ã€ JOUR LE CHAMP JDCNA DE YPRTENT Ã€ PARTIR DE JECNA DE YPRTRSQ 
			SET V_NBLIGNE = 0 ; 
			SELECT COUNT ( * ) INTO V_NBLIGNE FROM YPRTRSQ 
			WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION ; 
			IF ( V_NBLIGNE = 1 ) THEN 
				 -- MAJ DU RÃ‰GIME TAXE DE L'OFFRE 
				UPDATE YPOBASE SET PBRGT = 1 
				WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
				 -- MAJ DE LA CATNAT DE L'OFFRE 
				UPDATE YPRTENT SET JDCNA = V_RSQCATNAT 
				WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
			END IF ; 
  
			 -- TRAITEMENT DE L'ENTÃŠTE DE RISQUE 
			SET V_NBLIGNE = 0 ; 
			SELECT COUNT ( * ) INTO V_NBLIGNE FROM KPRSQ 
			WHERE KABIPB = P_CODEOFFRE AND KABALX = P_VERSION AND KABTYP = P_TYPE AND KABRSQ = V_CODERSQ ; 
  
			IF ( V_NBLIGNE = 0 ) THEN 
				INSERT INTO KPRSQ 
					( KABIPB , KABALX , KABTYP , KABRSQ , KABCIBLE , KABDESI , KABOBSV ) 
				VALUES 
					( P_CODEOFFRE , P_VERSION , P_TYPE , V_CODERSQ , P_CIBLE , 0 , 0 ) ; 
			END IF ; 
  
			 -- TRAITEMENT DE L'OBJET 
			SET V_NBLIGNE = 0 ; 
			SELECT COUNT ( * ) INTO V_NBLIGNE FROM YPRTOBJ 
			WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION AND JGRSQ = V_CODERSQ ; 
  
			IF ( V_NBLIGNE = 0 ) THEN 
				INSERT INTO YPRTOBJ 
					( JGIPB , JGALX , JGRSQ , JGOBJ , JGCCH , JGBRA , JGSBR , JGCAT ) 
				VALUES 
					( P_CODEOFFRE , P_VERSION , V_CODERSQ , 1 , 1 , P_BRANCHE , V_SOUSBRANCHE , V_CATEGORIE ) ; 
			END IF ; 
  
			 -- TRAIMENT DE L'ENTÃŠTE DE L'OBJET 
			SET V_NBLIGNE = 0 ; 
			SELECT COUNT ( * ) INTO V_NBLIGNE FROM KPOBJ 
			WHERE KACIPB = P_CODEOFFRE AND KACALX = P_VERSION AND KACTYP = P_TYPE AND KACRSQ = V_CODERSQ ; 
  
			IF ( V_NBLIGNE = 0 ) THEN 
				INSERT INTO KPOBJ 
					( KACIPB , KACALX , KACTYP , KACRSQ , KACOBJ , KACCIBLE , KACINVEN , KACDESI , KACOBSV ) 
				VALUES 
					( P_CODEOFFRE , P_VERSION , P_TYPE , V_CODERSQ , 1 , P_CIBLE , 0 , 0 , 0 ) ; 
			END IF ; 
		END IF ; 
  
		 -- TRAITEMENT DE YPOCOAS 
		IF ( P_NATURECONTRAT != '' ) THEN 
			CASE P_NATURECONTRAT 
				WHEN 'A' THEN 
					DELETE FROM YPOCOAS 
					WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE AND PHTAP = 'A' ; 
				WHEN 'E' THEN 
					DELETE FROM YPOCOAS 
					WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE AND PHTAP = 'A' ; 
				WHEN 'C' THEN 
					DELETE FROM YPOCOAS 
					WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE ; 
					INSERT INTO YPOCOAS 
						( PHIPB , PHALX , PHTYP , PHTAP , PHCIE , PHAPP )  --, PHTXF) 
					VALUES 
						( P_CODEOFFRE , P_VERSION , P_TYPE , P_APERITEURCODE , P_PARTAPERITEUR , P_FRAISAPERITION ) ; 
				WHEN 'D' THEN 
					DELETE FROM YPOCOAS 
					WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE ; 
					INSERT INTO YPOCOAS 
						( PHIPB , PHALX , PHTYP , PHTAP , PHCIE , PHAPP )  --, PHTXF) 
					VALUES 
						( P_CODEOFFRE , P_VERSION , P_TYPE , P_APERITEURCODE , P_PARTAPERITEUR , P_FRAISAPERITION ) ; 
				ELSE 
					DELETE FROM YPOCOAS 
					WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE ; 
			END CASE ; 
		END IF ; 
		 
		CALL SP_CREATEOFFRE_ADR ( P_CODEOFFRE , P_VERSION , P_TYPE , P_BATIMENT , P_NUMVOIE , P_NUMVOIE2 , P_EXTVOIE , P_NOMVOIE , P_BP , P_LOC , P_DEPARTEMENT , P_CP , P_VILLE , P_VOIECOMPLETE , P_VILLECOMPLETE , P_CPCDX , P_VILLECDX , P_MATRICULEHEX , P_ISADDRESSEMPTY , P_HASADRESSE , P_ADRCHRONO, P_LATITUDE ,P_LONGITUDE) ; 
		 
		 -- TRAITEMENT D'UNE OFFRE CANEVAS 
		IF ( LOCATE ( 'CV' , P_CODEOFFRE ) != 0 ) THEN 
			UPDATE KCANEV SET KGOSIT = 'V' WHERE KGOCNVA = P_CODEOFFRE ; 
		END IF ; 
	END IF ; 
END P1  ; 

