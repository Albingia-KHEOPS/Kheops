CREATE OR REPLACE PROCEDURE SP_CRSQ(
	IN P_CODEOFFRE VARCHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_NEWVERSION INTEGER , 
	IN P_CODECONTRAT VARCHAR(9) , 
	IN P_VERSIONCONTRAT INTEGER , 
	IN P_TRAITEMENT VARCHAR(1) , 
	IN P_COPYCODEOFFRE CHAR(9) , 
	IN P_COPYVERSION INTEGER , 
	IN P_MODECOPY CHAR(7) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_SELRSQ VARCHAR ( 1 ) DEFAULT 'N' ; 
	DECLARE V_CODEOFFRE VARCHAR ( 9 ) DEFAULT '' ; 
	DECLARE V_TYPEOFFRE VARCHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NEWVERS INTEGER DEFAULT 0 ; 

	SET P_CODEOFFRE = LPAD ( TRIM ( P_CODEOFFRE ) , 9 , ' ') ;
	SET P_CODECONTRAT = LPAD ( TRIM ( P_CODECONTRAT ) , 9 , ' ') ;
	SET P_COPYCODEOFFRE = LPAD ( TRIM ( P_COPYCODEOFFRE ) , 9 , ' ') ;
	 
	 -- AJOUT LE 05/09/2016 SUIVANT LE DOC "KHEOPS - LISTE DES CHAMPS - RÈGLES DE MAPPAGES 13-06-16.XLSX" 
	 -- LA COPIE DE JEINA, JERUL ET JERUT SE FAIT TOUT LE TEMPS 
	FOR LOOP_RSQ AS FREE_LIST CURSOR FOR 
		SELECT JEIPB , JEALX , JERSQ V_JERSQ , JECCH V_JECCH , JEMGD V_JEMGD , JEBRA V_JEBRA , JESBR V_JESBR , JECAT V_JECAT , 
			JERCS V_JERCS , JECCS V_JECCS , JEVAL V_JEVAL , JEVAA V_JEVAA , JEVAW V_JEVAW , JEVAT V_JEVAT , JEVAU V_JEVAU , 
			JEVAH V_JEVAH , JETEM V_JETEM , JEVGD V_JEVGD , JEVGU V_JEVGU , JEVDA V_JEVDA , JEVDM V_JEVDM , JEVDJ V_JEVDJ , 
			JEVDH V_JEVDH , JEVFA V_JEVFA , JEVFM V_JEVFM , JEVFJ V_JEVFJ , JEVFH V_JEVFH , JEOBJ V_JEOBJ , JEROJ V_JEROJ , 
			JERGT V_JERGT , JETRR V_JETRR , JECNA V_JECNA , JEINA V_JEINA , JEIND V_JEIND , JEIXC V_JEIXC , JEIXF V_JEIXF , 
			JEIXL V_JEIXL , JEIXP V_JEIXP , JEGAU V_JEGAU , JEGVL V_JEGVL , JEGUN V_JEGUN , JEPBN V_JEPBN , JEPBS V_JEPBS , 
			JEPBR V_JEPBR , JEPBT V_JEPBT , JEPBC V_JEPBC , JEPBP V_JEPBP , JEPBA V_JEPBA , JECLV V_JECLV , JEAGM V_JEAGM , 
			JEIPM V_JEIPM , JEIVX V_JEIVX , JEDRO V_JEDRO , JENBO V_JENBO , JELCV V_JELCV , JELCA V_JELCA , JELCW V_JELCW , 
			JELCU V_JELCU , JELCE V_JELCE , JEAVE V_JEAVE , JEAVA V_JEAVA , JEAVM V_JEAVM , JEAVJ V_JEAVJ , JERUL V_JERUL , 
			JERUT V_JERUT , JEAVF V_JEAVF , JEEXT V_JEEXT 
			FROM YPRTRSQ 
			WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION 
	DO 
		SET V_CODEOFFRE = P_CODEOFFRE ; 
		SET V_NEWVERS = P_NEWVERSION ; 
		 
		IF ( P_TRAITEMENT = 'P' ) THEN 
			SET V_SELRSQ = 'O' ; 
			 
			SET V_CODEOFFRE = P_CODECONTRAT ; 
			SET V_NEWVERS = P_VERSIONCONTRAT ; 
		END IF ; 
		 
		IF ( P_TRAITEMENT = 'C' ) THEN 
			SET V_CODEOFFRE = P_COPYCODEOFFRE ; 
			SET V_NEWVERS = P_COPYVERSION ; 
		END IF ; 
		 
		IF ( P_TRAITEMENT = 'V' OR V_SELRSQ = 'O' OR P_TRAITEMENT = 'C' ) THEN 
		 
			CALL SP_CKPRSQ ( P_CODEOFFRE , P_VERSION , P_TYPE , V_JERSQ , P_NEWVERSION , P_CODECONTRAT , P_VERSIONCONTRAT , P_TRAITEMENT , P_COPYCODEOFFRE , P_COPYVERSION , P_MODECOPY ) ; 
			 
			IF ( TRIM ( P_MODECOPY ) = 'AFFNOUV' ) THEN 
				INSERT INTO YPRTRSQ 
					( JEIPB , JEALX , JERSQ , JECCH , JEMGD , JEBRA , JESBR , JECAT , JERCS , JECCS , JEVAL , JEVAA , JEVAW , 
					JEVAT , JEVAU , JEVAH , JETEM , JEVGD , JEVGU , JEVDA , JEVDM , JEVDJ , JEVDH , JEVFA , JEVFM , JEVFJ , JEVFH , 
					JEOBJ , JEROJ , JERGT , JETRR , JECNA , JEINA , JEIND , JEIXC , JEIXF , JEIXL , JEIXP , JEGAU , JEGVL , JEGUN , 
					JEPBN , JEPBS , JEPBR , JEPBT , JEPBC , JEPBP , JEPBA , JECLV , JEAGM , JEIPM , JEIVX , JEDRO , JENBO , JELCV , 
					JELCA , JELCW , JELCU , JELCE , JEAVE , JEAVA , JEAVM , JEAVJ , JERUL , JERUT , JEAVF , JEEXT ) 
				VALUES 
					( V_CODEOFFRE , V_NEWVERS , V_JERSQ , V_JECCH , V_JEMGD , V_JEBRA , V_JESBR , V_JECAT , V_JERCS , V_JECCS , 
					V_JEVAL , V_JEVAA , V_JEVAW , V_JEVAT , V_JEVAU , V_JEVAH , V_JETEM , V_JEVGD , V_JEVGU , V_JEVDA , V_JEVDM , 
					V_JEVDJ , V_JEVDH , V_JEVFA , V_JEVFM , V_JEVFJ , V_JEVFH , V_JEOBJ , V_JEROJ , V_JERGT , V_JETRR , V_JECNA , 
					V_JEINA , V_JEIND , V_JEIXC , V_JEIXF , V_JEIXL , V_JEIXP , V_JEGAU , V_JEGVL , V_JEGUN , V_JEPBN , V_JEPBS , 
					V_JEPBR , V_JEPBT , V_JEPBC , V_JEPBP , V_JEPBA , V_JECLV , V_JEAGM , V_JEIPM , V_JEIVX , V_JEDRO , V_JENBO , 
					V_JELCV , V_JELCA , V_JELCW , V_JELCU , V_JELCE , 0 , 0 , 0 , 0 , V_JERUL , V_JERUT , 
					0 , V_JEEXT ) ; 
			 
			ELSE 
				IF ( TRIM ( P_MODECOPY ) = 'VERSION' ) THEN 
				 
					INSERT INTO YPRTRSQ 
						( JEIPB , JEALX , JERSQ , JECCH , JEMGD , JEBRA , JESBR , JECAT , JERCS , JECCS , JEVAL , JEVAA , JEVAW , 
						JEVAT , JEVAU , JEVAH , JETEM , JEVGD , JEVGU , JEVDA , JEVDM , JEVDJ , JEVDH , JEVFA , JEVFM , JEVFJ , JEVFH , 
						JEOBJ , JEROJ , JERGT , JETRR , JECNA , JEINA , JEIND , JEIXC , JEIXF , JEIXL , JEIXP , JEGAU , JEGVL , JEGUN , 
						JEPBN , JEPBS , JEPBR , JEPBT , JEPBC , JEPBP , JEPBA , JECLV , JEAGM , JEIPM , JEIVX , JEDRO , JENBO , JELCV , 
						JELCA , JELCW , JELCU , JELCE , JEAVE , JEAVA , JEAVM , JEAVJ , JERUL , JERUT , JEAVF , JEEXT ) 
					VALUES 
						( V_CODEOFFRE , V_NEWVERS , V_JERSQ , V_JECCH , V_JEMGD , V_JEBRA , V_JESBR , V_JECAT , V_JERCS , V_JECCS , 
						V_JEVAL , V_JEVAA , V_JEVAW , V_JEVAT , V_JEVAU , V_JEVAH , V_JETEM , V_JEVGD , V_JEVGU , V_JEVDA , V_JEVDM , 
						V_JEVDJ , V_JEVDH , V_JEVFA , V_JEVFM , V_JEVFJ , V_JEVFH , V_JEOBJ , V_JEROJ , V_JERGT , V_JETRR , V_JECNA , 
						V_JEINA , V_JEIND , V_JEIXC , V_JEIXF , V_JEIXL , V_JEIXP , V_JEGAU , V_JEGVL , V_JEGUN , V_JEPBN , V_JEPBS , 
						V_JEPBR , V_JEPBT , V_JEPBC , V_JEPBP , V_JEPBA , V_JECLV , V_JEAGM , V_JEIPM , V_JEIVX , V_JEDRO , V_JENBO ,					 
						V_JELCV , V_JELCA , V_JELCW , V_JELCU , V_JELCE , 0 , 0 , 0 , 0 , V_JERUL , V_JERUT , 
						0 , V_JEEXT ) ; 
			 
				ELSE 
			 
					INSERT INTO YPRTRSQ 
						( JEIPB , JEALX , JERSQ , JECCH , JEMGD , JEBRA , JESBR , JECAT , JERCS , JECCS , 
						JETEM , JEVGD , JEVGU , JEVDA , JEVDM , JEVDJ , JEVDH , JEVFA , JEVFM , JEVFJ , JEVFH , 
						JEOBJ , JEROJ , JERGT , JETRR , JECNA , JEINA , JEIND , JEIXC , JEIXF , JEIXL , JEIXP , JEGAU , JEGVL , JEGUN , 
						JEPBN , JEPBS , JEPBR , JEPBT , JEPBC , JEPBP , JEPBA , JECLV , JEAGM , JEIPM , JEIVX , JEDRO , JENBO , JELCV , 
						JELCA , JELCW , JELCU , JELCE , JEAVE , JEAVA , JEAVM , JEAVJ , JERUL , JERUT , JEAVF , JEEXT ) 
					VALUES 
						( V_CODEOFFRE , V_NEWVERS , V_JERSQ , V_JECCH , V_JEMGD , V_JEBRA , V_JESBR , V_JECAT , V_JERCS , V_JECCS , 
						V_JETEM , V_JEVGD , V_JEVGU , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 
						V_JEOBJ , V_JEROJ , V_JERGT , V_JETRR , V_JECNA , V_JEINA , V_JEIND , V_JEIXC , V_JEIXF , V_JEIXL , V_JEIXP , V_JEGAU , V_JEGVL , V_JEGUN , 
						V_JEPBN , V_JEPBS , V_JEPBR , V_JEPBT , V_JEPBC , V_JEPBP , V_JEPBA , V_JECLV , V_JEAGM , V_JEIPM , V_JEIVX , V_JEDRO , V_JENBO , V_JELCV ,					 
						V_JELCA , V_JELCW , V_JELCU , V_JELCE , 0 , 0 , 0 , 0 , V_JERUL , V_JERUT , 0 , V_JEEXT ) ; 
			 
				END IF ; 
			 
			END IF ; 
			 
			CALL SP_COBJ ( P_CODEOFFRE , P_VERSION , P_TYPE , V_JERSQ , P_NEWVERSION , P_CODECONTRAT , P_VERSIONCONTRAT , P_TRAITEMENT , P_COPYCODEOFFRE , P_COPYVERSION , P_MODECOPY ) ; 
		 
		END IF ; 
		 
	END FOR ; 
	 
END P1  ; 
  

  

