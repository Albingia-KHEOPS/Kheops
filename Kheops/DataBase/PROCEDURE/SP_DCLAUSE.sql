CREATE PROCEDURE SP_DCLAUSE ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODEFORMULE INTEGER , 
	IN P_NEWIDFORMULE INTEGER , 
	IN P_DATESYSTEME CHAR(8) , 
	IN P_USER CHAR(15) , 
	IN P_TRAITEMENT CHAR(1) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_DCLAUSE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
DECLARE V_NEWCODECLAUSE INTEGER DEFAULT 0 ; 
DECLARE V_NEWCODEINVEN INTEGER DEFAULT 0 ; 
  
FOR LOOP_CLAUSE AS FREE_LIST CURSOR FOR 
SELECT KCAID CODECLAUSE , KCAINVEN CODEINVEN 
FROM KPCLAUSE 
WHERE KCATYP = P_TYPE AND KCAIPB = P_CODEOFFRE AND KCAALX = P_VERSION 
AND KCAFOR = P_CODEFORMULE 
AND KCAAJT = 'O' AND ( KCANTA = 'P' OR KCANTA = 'S' ) 
DO 
  
IF ( CODEINVEN != 0 ) THEN 
CALL SP_SECOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KBEID' , CODEINVEN , V_NEWCODEINVEN ) ; 
END IF ; 
  
CALL SP_NCHRONO ( 'KCAID' , V_NEWCODECLAUSE ) ; 
  
INSERT INTO KPCLAUSE 
	( KCAID , KCATYP , KCAIPB , KCAALX , KCAETAFF , KCAPERI , KCARSQ , KCAOBJ , KCAINVEN , KCAINLGN , 
		KCAFOR , KCAOPT , KCAGAR , KCACTX , KCAAJT , KCANTA , KCAKDUID , KCACLNM1 , KCACLNM2 , KCACLNM3 , KCAVER , KCATXL , KCAMER , KCADOC , 
		KCACHI , KCACHIS , KCAIMP , KCACXI , KCAIAN , KCAIAC , KCASIT , KCASITD , KCAAVNC , KCACRD , KCAAVNM , KCAMAJD , KCASPA , KCATYPO , KCAAIM , KCATAE , 
		KCAELGO , KCAELGI , KCAXTL , KCATYPD ) 
( SELECT V_NEWCODECLAUSE , P_TYPE , P_CODEOFFRE , P_VERSION , KCAETAFF , KCAPERI , KCARSQ , KCAOBJ , V_NEWCODEINVEN , KCAINLGN , 
	P_NEWIDFORMULE , KCAOPT , KCAGAR , KCACTX , KCAAJT , KCANTA , KCAKDUID , KCACLNM1 , KCACLNM2 , KCACLNM3 , KCAVER , KCATXL , KCAMER , KCADOC , 
	KCACHI , KCACHIS , KCAIMP , KCACXI , KCAIAN , KCAIAC , KCASIT , KCASITD , KCAAVNC , KCACRD , KCAAVNM , KCAMAJD , KCASPA , KCATYPO , KCAAIM , KCATAE , 
	KCAELGO , KCAELGI , KCAXTL , KCATYPD 
FROM KPCLAUSE 
WHERE KCAID = CODECLAUSE ) ; 
  
END FOR ; 
  
END P1  ; 
  

  

