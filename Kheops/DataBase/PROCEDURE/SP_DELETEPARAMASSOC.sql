CREATE PROCEDURE SP_DELETEPARAMASSOC ( 
	IN P_PARAM CHAR(10) , 
	IN P_CODEPARAM INTEGER , 
	IN P_INFOUSER CHAR(100) , 
	OUT P_ERRORMSG CHAR(100) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_DELETEPARAMASSOC 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	DECLARE V_COUNTSQL INTEGER DEFAULT 0 ; 
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	DECLARE V_ISADMIN INTEGER DEFAULT 0 ; 
	SET P_ERRORMSG = '' ; 
	 
	 
	CALL SP_GETINFOUSER ( P_INFOUSER , '|' , V_ISADMIN ) ; 
	 
	CASE P_PARAM 
		WHEN 'CIBLE' THEN 
			SET V_COUNT = 0 ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KCIBLE INNER JOIN KCIBLEF ON KAIKAHID = KAHID INNER JOIN KPFOR ON KDAKAIID = KAIID WHERE KAHID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KCIBLE INNER JOIN KCIBLEF ON KAIKAHID = KAHID INNER JOIN KCANEV ON KGOKAIID = KAIID WHERE KAHID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KCIBLE INNER JOIN KPENT ON KAACIBLE = KAHCIBLE WHERE KAHID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KCIBLE INNER JOIN KPRSQ ON KABCIBLE = KAHCIBLE WHERE KAHID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KCIBLE INNER JOIN KPOBJ ON KACCIBLE = KAHCIBLE WHERE KAHID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			IF ( V_COUNT = 0 OR V_ISADMIN = 1 ) THEN 
				DELETE FROM KCATMODELE WHERE EXISTS ( SELECT * FROM KCATBLOC WHERE KARKAQID = KAQID AND EXISTS ( SELECT * FROM KCATVOLET WHERE KAQKAPID = KAPID AND EXISTS ( SELECT * FROM KCIBLEF WHERE KAPKAIID = KAIID AND KAIKAHID = P_CODEPARAM ) ) ) ; 
				DELETE FROM KCATBLOC WHERE EXISTS ( SELECT * FROM KCATVOLET WHERE KAQKAPID = KAPID AND EXISTS ( SELECT * FROM KCIBLEF WHERE KAPKAIID = KAIID AND KAIKAHID = P_CODEPARAM ) ) ; 
				DELETE FROM KCATVOLET WHERE EXISTS ( SELECT * FROM KCIBLEF WHERE KAPKAIID = KAIID AND KAIKAHID = P_CODEPARAM ) ; 
				DELETE FROM KCIBLEF WHERE KAIKAHID = P_CODEPARAM ; 
				DELETE FROM KCIBLE WHERE KAHID = P_CODEPARAM ; 
				/* IF ( V_ISADMIN = 1 AND V_COUNT > 0 ) THEN       
					CALL SP_SETTRACEDELETEPARAM ( P_PARAM , P_CODEPARAM , 'KCIBLE' , P_INFOUSER ) ;       
				END IF ;  */ 
			ELSE 
				SET P_ERRORMSG = 'Cible utilisée, impossible de la supprimer' ; 
			END IF ; 
		WHEN 'CIBLEF' THEN 
			SET V_COUNT = 0 ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KCANEV WHERE KGOKAIID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KPFOR WHERE KDAKAIID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KCIBLEF INNER JOIN KPENT ON KAACIBLE = KAICIBLE WHERE KAIID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KCIBLEF INNER JOIN KPRSQ ON KABCIBLE = KAICIBLE WHERE KAIID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KCIBLEF INNER JOIN KPOBJ ON KACCIBLE = KAICIBLE WHERE KAIID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			IF ( V_COUNT = 0 ) THEN 
				DELETE FROM KCATMODELE WHERE EXISTS ( SELECT * FROM KCATBLOC WHERE KARKAQID = KAQID AND EXISTS ( SELECT * FROM KCATVOLET WHERE KAQKAPID = KAPID AND KAPKAIID = P_CODEPARAM ) ) ; 
				DELETE FROM KCATBLOC WHERE EXISTS ( SELECT * FROM KCATVOLET WHERE KAQKAPID = KAPID AND KAPKAIID = P_CODEPARAM ) ; 
				DELETE FROM KCATVOLET WHERE KAPKAIID = P_CODEPARAM ; 
				DELETE FROM KCIBLEF WHERE KAIID = P_CODEPARAM ; 
				/* IF ( V_ISADMIN = 1 AND V_COUNT > 0 ) THEN       
					CALL SP_SETTRACEDELETEPARAM ( P_PARAM , P_CODEPARAM , 'KCIBLEF' , P_INFOUSER ) ;       
				END IF ;  */ 
			ELSE 
				SET P_ERRORMSG = 'Cible utilisée, impossible de la supprimer' ; 
			END IF ; 
		WHEN 'VOLET' THEN 
			SET V_COUNT = 0 ; 
			SELECT COUNT ( * ) INTO V_COUNT FROM KPOPTD WHERE KDCKAKID = P_CODEPARAM ; 
			IF ( V_COUNT = 0 ) THEN 
				DELETE FROM KCATMODELE WHERE EXISTS ( SELECT * FROM KCATBLOC WHERE KARKAQID = KAQID AND EXISTS ( SELECT * FROM KCATVOLET WHERE KAQKAPID = KAPID AND KAPKAKID = P_CODEPARAM ) ) ; 
				DELETE FROM KCATBLOC WHERE EXISTS ( SELECT * FROM KCATVOLET WHERE KAQKAPID = KAPID AND KAPKAKID = P_CODEPARAM ) ; 
				DELETE FROM KCATVOLET WHERE KAPKAKID = P_CODEPARAM ; 
				DELETE FROM KVOLET WHERE KAKID = P_CODEPARAM ; 
				/* IF ( V_ISADMIN = 1 AND V_COUNT > 0 ) THEN       
					CALL SP_SETTRACEDELETEPARAM ( P_PARAM , P_CODEPARAM , 'KVOLET' , P_INFOUSER ) ;       
				END IF ;  */ 
			ELSE 
				SET P_ERRORMSG = 'Volet utilisé, impossible de le supprimer' ; 
			END IF ; 
		WHEN 'BLOC' THEN 
			 
			SET V_COUNT = 0 ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KPOPTD WHERE KDCKAEID = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			SELECT COUNT ( * ) INTO V_COUNTSQL FROM KBLOREL WHERE KGJIDBLO1 = P_CODEPARAM OR KGJIDBLO2 = P_CODEPARAM ; 
			SET V_COUNT = V_COUNT + V_COUNTSQL ; 
			IF ( V_COUNT = 0 ) THEN 
				DELETE FROM KCATMODELE WHERE EXISTS ( SELECT * FROM KCATBLOC WHERE KARKAQID = KAQID AND KAQKAEID = P_CODEPARAM ) ; 
				DELETE FROM KCATBLOC WHERE KAQKAEID = P_CODEPARAM ; 
				DELETE FROM KBLOREL WHERE KGJIDBLO1 = P_CODEPARAM OR KGJIDBLO2 = P_CODEPARAM ; 
				DELETE FROM KBLOC WHERE KAEID = P_CODEPARAM ; 
				/* IF ( V_ISADMIN = 1 AND V_COUNT > 0 ) THEN       
					CALL SP_SETTRACEDELETEPARAM ( P_PARAM , P_CODEPARAM , 'KBLOC' , P_INFOUSER ) ;       
				END IF ;  */ 
			ELSE 
				SET P_ERRORMSG = 'Bloc utilisé, impossible de le supprimer' ; 
			END IF ; 
		WHEN 'CATVOLET' THEN 
			/*  Call the SP to reorder the records identifying by the same ID_Volet than the P_CODEPARAM  */ 
			CALL SP_RENUMVOLET ( 0 , P_CODEPARAM , 0 , 0 ) ; 
		 
		 
			SET V_COUNT = 0 ; 
			SELECT COUNT ( * ) INTO V_COUNT FROM KPOPTD 
				INNER JOIN KCATVOLET ON KDCKAKID = KAPKAKID 
				INNER JOIN KPFOR ON KDAIPB = KDCIPB AND KDAALX = KDCALX AND KDATYP = KDCTYP AND KDAFOR = KDCFOR AND KDABRA = KAPBRA AND KDACIBLE = KAPCIBLE 
			WHERE KAPID = P_CODEPARAM ; 
			IF ( V_COUNT = 0 ) THEN 
				DELETE FROM KCATMODELE WHERE EXISTS ( SELECT * FROM KCATBLOC WHERE KAQKAPID = P_CODEPARAM AND KARKAQID = KAQID ) ; 
				DELETE FROM KCATBLOC WHERE KAQKAPID = P_CODEPARAM ; 
				DELETE FROM KCATVOLET WHERE KAPID = P_CODEPARAM ; 
				/* IF ( V_ISADMIN = 1 AND V_COUNT > 0 ) THEN       
					CALL SP_SETTRACEDELETEPARAM ( P_PARAM , P_CODEPARAM , 'KCATVOLET' , P_INFOUSER ) ;       
				END IF ; */ 
			ELSE 
				SET P_ERRORMSG = 'Volet utilisé, impossible de le supprimer' ; 
			END IF ; 
		WHEN 'CATBLOC' THEN 
		 
			/*  Call the SP to reorder the records identifying by the same ID_Volet than the P_CODEPARAM  */ 
			CALL SP_RENUMBLOC ( 0 , P_CODEPARAM , 0 , 0 ) ; 
			 
			SET V_COUNT = 0 ; 
			SELECT COUNT ( * ) INTO V_COUNT FROM KPOPTD WHERE KDCKAQID = P_CODEPARAM ; 
			IF ( V_COUNT = 0 ) THEN 
				DELETE FROM KCATMODELE WHERE KARKAQID = P_CODEPARAM ; 
				DELETE FROM KCATBLOC WHERE KAQID = P_CODEPARAM ; 
				/* IF ( V_ISADMIN = 1 AND V_COUNT > 0 ) THEN       
					CALL SP_SETTRACEDELETEPARAM ( P_PARAM , P_CODEPARAM , 'KCATBLOC' , P_INFOUSER ) ;       
				END IF ;  */ 
			ELSE 
				SET P_ERRORMSG = 'Bloc utilisé, impossible de le supprimer' ; 
			END IF ; 
		WHEN 'CATMODELE' THEN 
			SET V_COUNT = 0 ; 
			SELECT COUNT ( * ) INTO V_COUNT FROM KCATMODELE INNER JOIN ZALBINKMOD . YPLTGAR ON KARMODELE = C2MGA INNER JOIN KPGARAN ON KDESEQ = C2SEQ WHERE KARID = P_CODEPARAM ; 
			IF ( V_COUNT = 0 ) THEN 
				DELETE FROM KCATMODELE WHERE KARID = P_CODEPARAM ; 
				/* IF ( V_ISADMIN = 1 AND V_COUNT > 0 ) THEN       
					CALL SP_SETTRACEDELETEPARAM ( P_PARAM , P_CODEPARAM , 'KCATMODELE' , P_INFOUSER ) ;       
				END IF ; */ 
			ELSE 
				SET P_ERRORMSG = 'Modèle utilisé, impossible de le supprimer' ; 
			END IF ; 
	END CASE ; 
	 
END P1  ; 
  

  

