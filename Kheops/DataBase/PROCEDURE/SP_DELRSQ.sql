
CREATE PROCEDURE SP_DELRSQ ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODERSQ INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_DELRSQ 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
  
	DECLARE V_CODEDESI INTEGER DEFAULT 0 ; 
	DECLARE V_CODEOBSV INTEGER DEFAULT 0 ; 
	DECLARE V_CODERISQUEPRINCIPAL INTEGER DEFAULT 0 ; 
	DECLARE V_IDADRESSEOFFRE INTEGER DEFAULT 0 ; 
  
	DECLARE V_BATIMENT CHAR ( 32 ) DEFAULT '' ; 
	DECLARE V_NUMVOIEINT INTEGER DEFAULT 0 ; 
	DECLARE V_NUMVOIECHAR CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_NUMVOIECHAR2 CHAR ( 15 ) DEFAULT '' ; 
	DECLARE V_EXTVOIE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NOMVOIE CHAR ( 32 ) DEFAULT '' ; 
	DECLARE V_BP CHAR ( 32 ) DEFAULT '' ; 
	DECLARE V_LOCALITE CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_DEP CHAR ( 2 ) DEFAULT '' ; 
	DECLARE V_CPINT INTEGER DEFAULT 0 ; 
	DECLARE V_CPCHAR CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_NOMVILLE CHAR ( 32 ) DEFAULT '' ; 
	DECLARE V_NOMVILLE26 CHAR ( 26 ) DEFAULT '' ; 
	DECLARE V_VOIECOMPLETE CHAR ( 32 ) DEFAULT '' ; 
	DECLARE V_L6F CHAR ( 32 ) DEFAULT '' ; 
	DECLARE V_CPXINT INTEGER DEFAULT 0 ; 
	DECLARE V_CPXCHAR CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_NOMCEDEX CHAR ( 32 ) DEFAULT '' ; 
	DECLARE V_MATHEX INTEGER DEFAULT 0 ; 
	DECLARE V_NUMCHRONO INTEGER DEFAULT 0 ; 
  
	DECLARE V_AD1 CHAR ( 32 ) DEFAULT '' ; 
	DECLARE V_AD2 CHAR ( 32 ) DEFAULT '' ; 
  
	DECLARE V_CIBLERISQUE CHAR ( 10 ) DEFAULT '' ; 
	DECLARE V_NBRISQUE INTEGER DEFAULT 0 ; 
	DECLARE V_REGIMETAXE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CATNAT CHAR ( 1 ) DEFAULT '' ; 
  
	DECLARE V_CODEFOR INTEGER DEFAULT 0 ; 
	DECLARE V_PBN CHAR ( 1 ) DEFAULT '' ; 
  
	DECLARE V_CODERSQ INTEGER DEFAULT 0 ; 
	DECLARE V_CODEOBJ INTEGER DEFAULT 0 ; 
  
	DECLARE V_OBJADH INTEGER DEFAULT 0 ; 
	DECLARE V_RSQADH INTEGER DEFAULT 0 ; 
	DECLARE V_CODEBRANCHE CHAR ( 2 ) DEFAULT '' ; 
	DECLARE V_FRAISACC INTEGER DEFAULT 0 ; 
  
	DECLARE V_ADTEST CHAR ( 32 ) DEFAULT '' ; 
  
	DECLARE V_NUMCHR CHAR ( 40 ) DEFAULT '' ; 
	DECLARE V_CHROBJ INTEGER DEFAULT 0 ; 
  
	SET P_CODEOFFRE = LPAD ( RTRIM ( P_CODEOFFRE ) , 9 , ' ' );

	 --Détermination du risque principal 
	SELECT MIN ( JERSQ ) INTO V_CODERISQUEPRINCIPAL FROM YPRTRSQ WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION ; 
  
	SELECT KABDESI , KABOBSV INTO V_CODEDESI , V_CODEOBSV FROM KPRSQ WHERE KABTYP = P_TYPE AND KABIPB = P_CODEOFFRE AND KABALX = P_VERSION AND KABRSQ = P_CODERSQ ; 
  
	IF ( V_CODEDESI <> 0 ) THEN 
		CALL SP_DELDESI ( V_CODEDESI ) ; 
	END IF ; 
	IF ( V_CODEOBSV <> 0 ) THEN 
		CALL SP_DELOBSV ( V_CODEOBSV ) ; 
	END IF ; 
  
	DELETE FROM KPRSQ WHERE KABTYP = P_TYPE AND KABIPB = P_CODEOFFRE AND KABALX = P_VERSION AND KABRSQ = P_CODERSQ ; 
  
	FOR CURSOR_RSQ AS FREE_LIST CURSOR FOR 
		SELECT KACOBJ CODEOBJ FROM KPOBJ WHERE KACIPB = P_CODEOFFRE AND KACALX = P_VERSION AND KACRSQ = P_CODERSQ 
	DO 
		/* CALL SP_DELOBJETRISQUE ( P_CODEOFFRE , P_VERSION , P_TYPE , P_CODERSQ , CODEOBJ , 0 , 0 , 1 ) ;  */ 
		CALL SP_DELOBJETRISQUE ( P_CODEOFFRE , P_VERSION , P_TYPE , P_CODERSQ , CODEOBJ , 0 ) ; 
	END FOR ; 
  
	/* CORRECTION DU 2015-03-23 POUR LA SUPPRESSION DE LA FORMULE ET DES TABLES ANNEXES LORS DE LA SUPPRESSION D'UN RISQUE */ 
	SET V_CODEFOR = 0 ; 
	SELECT KDDFOR INTO V_CODEFOR FROM KPOPTAP WHERE KDDIPB = P_CODEOFFRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE AND KDDRSQ = P_CODERSQ ; 
	IF ( V_CODEFOR > 0 ) THEN 
		CALL SP_DELFORM ( P_CODEOFFRE , P_VERSION , P_TYPE , V_CODEFOR , 'C' ) ; 
	END IF ; 
  
	/* DELETE FROM KPOPTAP 
	WHERE KDDIPB = P_CODEOFFRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE 
	AND KDDRSQ = P_CODERSQ ;  */ 
  
	DELETE FROM KPCLAUSE 
	WHERE KCATYP = P_TYPE AND KCAIPB = P_CODEOFFRE AND KCAALX = P_VERSION AND KCARSQ = P_CODERSQ ; 
  
	DELETE FROM KPCLAUSW 
	WHERE KCBTYP = P_TYPE AND KCBIPB = P_CODEOFFRE AND KCBALX = P_VERSION AND KCBRSQ = P_CODERSQ ; 
  
	DELETE FROM YPRTRSQ 
	WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION AND JERSQ = P_CODERSQ ; 
  
	DELETE FROM KPIRSOB 
	WHERE KFAIPB = P_CODEOFFRE AND KFAALX = P_VERSION AND KFATYP = P_TYPE AND KFARSQ = P_CODERSQ ; 
  
	DELETE FROM KPISVAL 
	WHERE KKCIPB = P_CODEOFFRE AND KKCALX = P_VERSION AND KKCTYP = P_TYPE AND KKCRSQ = P_CODERSQ ; 
  
	IF ( P_TYPE = 'P' ) THEN 
		DELETE FROM KPOPPAP WHERE KFQIPB = P_CODEOFFRE AND KFQALX = P_VERSION AND KFQTYP = P_TYPE AND KFQRSQ = P_CODERSQ ; 
	END IF ; 
  
	SELECT JFADH INTO V_NUMCHRONO FROM YPRTADR WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = P_CODERSQ AND JFOBJ = 0 ; 
	DELETE FROM YADRESS WHERE ABPCHR = V_NUMCHRONO ; 
	DELETE FROM YPRTADR WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = P_CODERSQ ; 
  
	DELETE FROM KPCTRLE WHERE KEVTYP = P_TYPE AND KEVIPB = P_CODEOFFRE AND KEVALX = P_VERSION AND KEVRSQ = P_CODERSQ ; 
  
	/* MODIFICATION SUIVANT LE DOC ADRESSE V4.1 */ 
	SELECT COUNT ( * ) INTO V_COUNT FROM YPRTRSQ WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION ; 
	IF ( V_COUNT = 1 ) THEN 
		SELECT PBADH INTO V_IDADRESSEOFFRE FROM YPOBASE WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
  
		SELECT JERSQ , JEOBJ INTO V_CODERSQ , V_CODEOBJ FROM YPRTRSQ WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION ; 
		 --RÉCUPÉRATION DES INFORMATIONS DE L'ADRESSE DU RISQUE PRINCIPAL 
		SELECT ABPCHR , ABPLG3 , ABPNUM , ABPLBN , ABPEXT , ABPLG4 , ABPLG5 , ABPLOC , ABPDP6 , ABPCP6 , ABPVI6 , ABPL4F , ABPL6F , ABPCEX , ABPVIX , ABPMAT 
			INTO V_RSQADH , V_BATIMENT , V_NUMVOIECHAR , V_NUMVOIECHAR2 , V_EXTVOIE , V_NOMVOIE , V_BP , V_LOCALITE , V_DEP , V_CPCHAR , V_NOMVILLE , V_VOIECOMPLETE , V_L6F , V_CPXCHAR , V_NOMCEDEX , V_MATHEX 
		FROM YPRTADR 
			INNER JOIN YADRESS ON JFADH = ABPCHR 
		WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = V_CODERSQ AND JFOBJ = 0 ; 
  
		SET V_NOMVILLE26 = V_NOMVILLE ; 
		 
		IF ( TRIM ( V_NUMVOIECHAR ) != '' ) THEN 
			SET V_NUMVOIEINT = CAST ( V_NUMVOIECHAR AS INTEGER ) ; 
		ELSE
			SET V_NUMVOIEINT = 0 ; 
		END IF ; 
		IF ( TRIM ( V_CPCHAR ) != '' ) THEN 
			SET V_CPINT = CAST ( V_CPCHAR AS INTEGER ) ; 
		ELSE
			SET V_CPINT = 0 ; 
		END IF ; 
		IF ( TRIM ( V_CPXCHAR ) != '' ) THEN 
			SET V_CPXINT = CAST ( V_CPXCHAR AS INTEGER ) ; 
		ELSE
			SET V_CPXINT = 0 ; 
		END IF ; 
		 
		IF ( ( TRIM ( V_CPCHAR ) != '0' AND TRIM ( V_CPCHAR ) != '' ) 
			OR ( TRIM ( V_DEP ) != '0' AND TRIM ( V_DEP ) != '' ) OR TRIM ( V_NOMVILLE ) != '' ) THEN 
			/* COPIE DE L'ADRESSE DU RISQUE DANS L'AFFAIRE */ 
			IF ( V_IDADRESSEOFFRE = 0 ) THEN  --SI L'OFFRE N'AVAIT PAS D'ADRESSE	 
			 -- Generation du chrono pour insertion dans YADRESS 
				CALL SP_YCHRONO ( 'ADRESSE_CHRONO' , V_NUMCHR ) ; 
				SET V_IDADRESSEOFFRE = CAST ( V_NUMCHR AS INTEGER ) ; 
				 
				INSERT INTO YADRESS 
					( SELECT V_IDADRESSEOFFRE , ABPLG3 , ABPNUM , ABPEXT , ABPLBN , ABPLG4 , ABPL4F , ABPLG5 , ABPDP6 , ABPCP6 , ABPVI6 , ABPCDX , ABPCEX , 
						ABPL6F , ABPPAY , ABPLOC , ABPMAT , ABPRET , ABPERR , ABPMJU , ABPMJA , ABPMJM , ABPMJJ , ABPVIX 
				FROM YADRESS WHERE ABPCHR = V_RSQADH ) ;							 
  
			ELSE 
				UPDATE YADRESS 
					SET ABPLG3 = V_BATIMENT , ABPLBN = V_NUMVOIECHAR2 , ABPEXT = V_EXTVOIE , ABPLG4 = V_NOMVOIE , ABPLG5 = V_BP , 
						ABPLOC = V_LOCALITE , ABPDP6 = V_DEP , ABPVI6 = V_NOMVILLE26 , ABPL4F = V_VOIECOMPLETE , 
						ABPL6F = V_L6F , ABPVIX = V_NOMCEDEX , ABPMAT = V_MATHEX 
				WHERE ABPCHR = V_IDADRESSEOFFRE ; 
				 
				IF ( TRIM ( V_CPCHAR ) = '' ) THEN 
					UPDATE YADRESS 
					SET ABPCP6 = V_CPINT 
					WHERE ABPCHR = V_IDADRESSEOFFRE ;	 
				END IF ; 
				IF ( TRIM ( V_NUMVOIECHAR ) != '' ) THEN 
					UPDATE YADRESS 
					SET ABPNUM = V_NUMVOIEINT 
					WHERE ABPCHR = V_IDADRESSEOFFRE ; 
				END IF ; 
				IF ( TRIM ( V_CPXCHAR ) != '' ) THEN	 
					UPDATE YADRESS 
					SET ABPCEX = V_CPXINT 
					WHERE ABPCHR = V_IDADRESSEOFFRE ; 
				END IF ;	 
				 
			END IF ; 
  
			 -- Bug100: Refactoring into function call to set address 
			IF ( V_BATIMENT != '' ) THEN 
				SET V_AD1 = TRIM ( V_BATIMENT ) ; 
				SET V_AD2 = F_BUILDADDRESS ( V_NUMVOIEINT, V_NUMVOIECHAR2 , V_EXTVOIE , V_NOMVOIE ) ; 
			ELSE 
				SET V_AD1 = F_BUILDADDRESS ( V_NUMVOIEINT, V_NUMVOIECHAR2 , V_EXTVOIE , V_NOMVOIE ) ; 
				SET V_AD2 = TRIM ( V_BP ) ; 
			END IF ; 
  
			UPDATE YPOBASE 
				SET PBADH = V_IDADRESSEOFFRE , PBAD1 = V_AD1 , PBAD2 = V_AD2 , PBDEP = V_DEP , PBCPO = V_CPCHAR , PBVIL = V_NOMVILLE26 
			WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
		ELSE 
			IF ( V_IDADRESSEOFFRE != 0 ) THEN 
				SELECT ABPLG3 , ABPNUM , ABPLBN , ABPEXT , ABPLG4 , ABPLG5 , ABPLOC , ABPDP6 , ABPCP6 , ABPVI6 , ABPL4F , 
							ABPL6F , ABPCEX , ABPVIX , ABPMAT 
				INTO V_BATIMENT , V_NUMVOIECHAR , V_NUMVOIECHAR2 , V_EXTVOIE , V_NOMVOIE , V_BP , V_LOCALITE , V_DEP , V_CPCHAR , V_NOMVILLE26 , V_VOIECOMPLETE , 
							V_L6F , V_CPXCHAR , V_NOMCEDEX , V_MATHEX 
				FROM YADRESS WHERE ABPCHR = V_IDADRESSEOFFRE ; 
				 
				 --Instanciation des valeurs en integer si besoin pour les variable numvoie, cp et cpx 
				IF ( TRIM ( V_NUMVOIECHAR ) != '' ) THEN 
					SET V_NUMVOIEINT = CAST ( V_NUMVOIECHAR AS INTEGER ) ; 
				ELSE
					SET V_NUMVOIEINT = 0 ; 
				END IF ; 
				IF ( TRIM ( V_CPCHAR ) != '' ) THEN 
					SET V_CPINT = CAST ( V_CPCHAR AS INTEGER ) ; 
				ELSE
					SET V_CPINT = 0 ; 
				END IF ; 
				IF ( TRIM ( V_CPXCHAR ) != '' ) THEN 
					SET V_CPXINT = CAST ( V_CPXCHAR AS INTEGER ) ; 
				ELSE 
					SET V_CPXINT = 0 ; 
				END IF ; 
		 
				IF ( ( TRIM ( V_CPCHAR ) != '0' AND TRIM ( V_CPCHAR ) != '' ) 
					OR ( TRIM ( V_DEP ) != '0' AND TRIM ( V_DEP ) != '' ) 
					OR TRIM ( V_NOMVILLE26 ) != '' ) THEN 
					/* COPIE DE L'ADRESSE DE L'AFFAIRE DANS LE RISQUE */ 
					IF ( V_RSQADH	= 0 ) THEN 
						/* Si le chrono du risque est à 0 -> insertion dans YADRESS*/ 
						CALL SP_YCHRONO ( 'ADRESSE_CHRONO' , V_NUMCHR ) ; 
						SET V_RSQADH = CAST ( V_NUMCHR AS INTEGER ) ; 
						INSERT INTO YADRESS 
							( ABPLG3 , ABPLBN , ABPEXT , ABPLG4 , ABPLG5 , ABPLOC , ABPDP6 , ABPVI6 , ABPL4F , 
								ABPL6F , ABPVIX , ABPMAT , ABPCHR ) 
						VALUES 
							( V_BATIMENT , V_NUMVOIECHAR2 , V_EXTVOIE , V_NOMVOIE , V_BP , V_LOCALITE , V_DEP , V_NOMVILLE26 , 
								V_VOIECOMPLETE , V_L6F , V_NOMCEDEX , V_MATHEX , V_RSQADH ) ; 
						 
						IF ( TRIM ( V_CPCHAR ) = '' ) THEN 
							UPDATE YADRESS 
							SET ABPCP6 = V_CPINT 
							WHERE ABPCHR = V_RSQADH ;	 
						END IF ; 
						IF ( TRIM ( V_NUMVOIECHAR ) != '' ) THEN 
							UPDATE YADRESS 
							SET ABPNUM = V_NUMVOIEINT 
							WHERE ABPCHR = V_RSQADH ; 
						END IF ; 
						IF ( TRIM ( V_CPXCHAR ) != '' ) THEN	 
							UPDATE YADRESS 
							SET ABPCEX = V_CPXINT 
							WHERE ABPCHR = V_RSQADH ; 
						END IF ;	 
						 
						SELECT PBAD1 , PBAD2 , PBDEP , IFNULL ( PBCPO , '0' ) PBCPO , PBVIL 
							INTO V_AD1 , V_AD2 , V_DEP , V_CPCHAR , V_NOMVILLE26 
						FROM YPOBASE 
						WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE AND PBADH = V_IDADRESSEOFFRE ; 
  
						UPDATE YPRTADR 
							SET JFAD1 = V_AD1 , JFAD2 = V_AD2 , JFDEP = V_DEP , JFCPO = V_CPCHAR , JFVIL = V_NOMVILLE26 , JFADH = V_RSQADH 
						WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = V_CODERSQ AND JFOBJ = 0 ; 
					ELSE 
						UPDATE YADRESS 
							SET ABPLG3 = V_BATIMENT , ABPLBN = V_NUMVOIECHAR2 , ABPEXT = V_EXTVOIE , ABPLG4 = V_NOMVOIE , ABPLG5 = V_BP , 
								ABPLOC = V_LOCALITE , ABPDP6 = V_DEP , ABPVI6 = V_NOMVILLE26 , ABPL4F = V_VOIECOMPLETE , 
								ABPL6F = V_L6F , ABPVIX = V_NOMCEDEX , ABPMAT = V_MATHEX 
						WHERE ABPCHR = V_RSQADH ; 
						 
						IF ( TRIM ( V_CPCHAR ) = '' ) THEN 
							UPDATE YADRESS 
							SET ABPCP6 = V_CPINT 
							WHERE ABPCHR = V_RSQADH ;	 
						END IF ; 
						IF ( TRIM ( V_NUMVOIECHAR ) != '' ) THEN 
							UPDATE YADRESS 
							SET ABPNUM = V_NUMVOIEINT 
							WHERE ABPCHR = V_RSQADH ; 
						END IF ; 
						IF ( TRIM ( V_CPXCHAR ) != '' ) THEN	 
							UPDATE YADRESS 
							SET ABPCEX = V_CPXINT 
							WHERE ABPCHR = V_RSQADH ; 
						END IF ;	 
  
						SELECT PBAD1 , PBAD2 , PBDEP , IFNULL ( PBCPO , '0' ) PBCPO , PBVIL 
							INTO V_AD1 , V_AD2 , V_DEP , V_CPCHAR , V_NOMVILLE26 
						FROM YPOBASE 
						WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE AND PBADH = V_IDADRESSEOFFRE ; 
  
						UPDATE YPRTADR 
							SET JFAD1 = V_AD1 , JFAD2 = V_AD2 , JFDEP = V_DEP , JFCPO = V_CPCHAR , JFVIL = V_NOMVILLE26 
						WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = V_CODERSQ AND JFOBJ = 0 ; 
					END IF ; 
  
  
					/* COPIE DE L'ADRESSE DANS L'OBJET SI LE RISQUE EST MONO-OBJET */ 
					IF ( V_CODEOBJ > 0 ) THEN 
						SELECT JFADH INTO V_OBJADH FROM YPRTADR 
						WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = V_CODERSQ AND JFOBJ = V_CODEOBJ ; 
						IF ( V_OBJADH = 0 ) THEN 
							CALL SP_YCHRONO ( 'ADRESSE_CHRONO' , V_NUMCHR ) ; 
							SET V_CHROBJ = CAST ( V_NUMCHR AS INTEGER ) ; 
  
							INSERT INTO YADRESS 
								( ABPLG3 , ABPLBN , ABPEXT , ABPLG4 , ABPLG5 , ABPLOC , ABPDP6 , ABPVI6 , ABPL4F , 
									ABPL6F , ABPVIX , ABPMAT , ABPCHR ) 
							VALUES 
								( V_BATIMENT , V_NUMVOIECHAR2 , V_EXTVOIE , V_NOMVOIE , V_BP , V_LOCALITE , V_DEP , V_NOMVILLE26 , 
									V_VOIECOMPLETE , V_L6F , V_NOMCEDEX , V_MATHEX , V_CHROBJ ) ; 
									 
							IF ( TRIM ( V_CPCHAR ) = '' ) THEN 
								UPDATE YADRESS 
								SET ABPCP6 = V_CPINT 
								WHERE ABPCHR = V_CHROBJ ;	 
							END IF ; 
							IF ( TRIM ( V_NUMVOIECHAR ) != '' ) THEN 
								UPDATE YADRESS 
								SET ABPNUM = V_NUMVOIEINT 
								WHERE ABPCHR = V_CHROBJ ; 
							END IF ; 
							IF ( TRIM ( V_CPXCHAR ) != '' ) THEN	 
								UPDATE YADRESS 
								SET ABPCEX = V_CPXINT 
								WHERE ABPCHR = V_CHROBJ ; 
							END IF ;	 
  
							UPDATE YPRTADR 
								SET JFAD1 = V_AD1 , JFAD2 = V_AD2 , JFDEP = V_DEP , JFCPO = V_CPCHAR , JFVIL = V_NOMVILLE26 , JFADH = V_CHROBJ 
							WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = V_CODERSQ AND JFOBJ = V_CODEOBJ ; 
  
						ELSE 
							UPDATE YADRESS 
								SET ABPLG3 = V_BATIMENT , ABPLBN = V_NUMVOIECHAR2 , ABPEXT = V_EXTVOIE , ABPLG4 = V_NOMVOIE , ABPLG5 = V_BP , 
									ABPLOC = V_LOCALITE , ABPDP6 = V_DEP , ABPVI6 = V_NOMVILLE26 , ABPL4F = V_VOIECOMPLETE , 
									ABPL6F = V_L6F , ABPVIX = V_NOMCEDEX , ABPMAT = V_MATHEX 
							WHERE ABPCHR = V_OBJADH ; 
							 
							IF ( TRIM ( V_CPCHAR ) = '' ) THEN 
								UPDATE YADRESS 
								SET ABPCP6 = V_CPINT 
								WHERE ABPCHR = V_OBJADH ;	 
							END IF ; 
							IF ( TRIM ( V_NUMVOIECHAR ) != '' ) THEN 
								UPDATE YADRESS 
								SET ABPNUM = V_NUMVOIEINT 
								WHERE ABPCHR = V_OBJADH ; 
							END IF ; 
							IF ( TRIM ( V_CPXCHAR ) != '' ) THEN	 
								UPDATE YADRESS 
								SET ABPCEX = V_CPXINT 
								WHERE ABPCHR = V_OBJADH ; 
							END IF ;	 
							 
							UPDATE YPRTADR 
								SET JFAD1 = V_AD1 , JFAD2 = V_AD2 , JFDEP = V_DEP , JFCPO = V_CPCHAR , JFVIL = V_NOMVILLE26 
							WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = V_CODERSQ AND JFOBJ = V_CODEOBJ ; 
						END IF ; 
  
					END IF ; 
  
				END IF ; 
			END IF ; 
		END IF ; 
  
	END IF ; 
	/* FIN MODIFICATION SUIVANT LE DOC ADRESSE V4.1 */ 
  
  
	 --Gestion des cibles 
	IF ( V_CODERISQUEPRINCIPAL = P_CODERSQ ) THEN 
  
		 --Mise à jour du risque principal 
		SELECT MIN ( JERSQ ) INTO V_CODERISQUEPRINCIPAL FROM YPRTRSQ WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION ; 
  
		 --Gestion des cibles 
		 --récupération de la cible du risque principal 
		SELECT KABCIBLE INTO V_CIBLERISQUE FROM KPRSQ WHERE KABTYP = P_TYPE AND KABIPB = P_CODEOFFRE AND KABALX = P_VERSION AND KABRSQ = V_CODERISQUEPRINCIPAL ; 
  
		SELECT PBBRA INTO V_CODEBRANCHE FROM YPOBASE WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
  
		SELECT CAAFR INTO V_FRAISACC 
		FROM YCATEGO 
		INNER JOIN KCIBLEF ON CABRA = KAIBRA AND CASBR = KAISBR AND CACAT = KAICAT 
		WHERE KAICIBLE = V_CIBLERISQUE AND KAIBRA = V_CODEBRANCHE ; 
  
		UPDATE YPRTENT 
		SET JDAFR = V_FRAISACC 
		WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
  
		UPDATE KPENT SET KAACIBLE = V_CIBLERISQUE WHERE KAATYP = P_TYPE AND KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION ; 
  
	END IF ; 
  
	 --Gestion Regime taxe Catnat 
	SELECT COUNT ( * ) INTO V_NBRISQUE FROM KPRSQ WHERE KABTYP = P_TYPE AND KABIPB = P_CODEOFFRE AND KABALX = P_VERSION ; 
  
	IF ( V_NBRISQUE = 1 ) THEN 
		SELECT JERGT , JECNA INTO V_REGIMETAXE , V_CATNAT FROM YPRTRSQ WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION AND JERSQ = V_CODERISQUEPRINCIPAL ; 
  
		UPDATE YPOBASE SET PBRGT = V_REGIMETAXE WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
  
		UPDATE YPRTENT SET JDCNA = V_CATNAT WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
	END IF ; 
  
END P1  ;

