CREATE PROCEDURE SP_DGARAN ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_NEWIDFORMULE INTEGER , 
	IN P_CODEOPTIONDTL INTEGER , 
	IN P_NEWCODEOPTIONDTL INTEGER , 
	IN P_DATESYSTEME CHAR(8) , 
	IN P_USER CHAR(15) , 
	IN P_TRAITEMENT CHAR(1) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_DGARAN 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_NEWCODEGARAN INTEGER DEFAULT 0 ; 
	DECLARE V_NEWCODEGARAP INTEGER DEFAULT 0 ; 
	DECLARE V_NEWCODEINVEN INTEGER DEFAULT 0 ; 
	 
	FOR FORM_LOOP AS FREE_LIST CURSOR FOR 
		SELECT KDEID CODEGARAN , KDEKDFID CODEGARAP , KDEINVEN CODEINVEN , KDEFOR CODEFORMULE , KDEGARAN GARANTIE FROM KPGARAN 
		WHERE KDEKDCID = P_CODEOPTIONDTL 
	DO 
		CALL SP_SECOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDEID' , CODEGARAN , V_NEWCODEGARAN ) ; 
		IF ( V_NEWCODEGARAN = 0 ) THEN 
			CALL SP_NCHRONO ( 'KDEID' , V_NEWCODEGARAN ) ; 
			CALL SP_INCOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDEID' , CODEGARAN , V_NEWCODEGARAN ) ; 
		END IF ; 
		 
		SET V_NEWCODEINVEN = 0 ; 
		CALL SP_DINVEN ( P_CODEOFFRE , P_VERSION , P_TYPE , CODEFORMULE , P_NEWIDFORMULE , V_NEWCODEINVEN ) ; 
		 
		INSERT INTO KPGARAN 
			( SELECT V_NEWCODEGARAN , P_TYPE , P_CODEOFFRE , P_VERSION , P_NEWIDFORMULE , KDEOPT , P_NEWCODEOPTIONDTL , KDEGARAN , 
				KDESEQ , KDENIVEAU , KDESEM , KDESE1 , KDETRI , KDENUMPRES , KDEAJOUT , KDECAR , KDENAT , KDEGAN , 0 , 
				KDEDEFG , KDEKDHID , KDEDATDEB , KDEHEUDEB , 0 , 0 , 0 , '' , KDEPRP , KDETYPEMI , 
				KDEALIREF , KDECATNAT , KDEINA , KDETAXCOD , KDETAXREP , KDECRAVN , P_USER , P_DATESYSTEME , KDEMAJAVN , KDEASVALO , 
				KDEASVALA , KDEASVALW , KDEASUNIT , KDEASBASE , KDEASMOD , KDEASOBLI , KDEINVSP , V_NEWCODEINVEN , KDEWDDEB , 
				KDEWHDEB , KDEWDFIN , KDEWHFIN , KDETCD , KDEMODI , KDEPIND , KDEPCATN , KDEPREF , KDEPPRP , KDEPEMI , KDEPTAXC , KDEPNTM , KDEALA , 
				KDEPALA , KDEALO 
			FROM KPGARAN WHERE KDEID = CODEGARAN ) ; 
		 
		CALL SP_DGARTAR ( P_CODEOFFRE , P_VERSION , P_TYPE , P_NEWIDFORMULE , CODEGARAN , V_NEWCODEGARAN , P_DATESYSTEME , P_USER , P_TRAITEMENT ) ; 
		 
		CALL SP_DGARAP ( P_CODEOFFRE , P_VERSION , P_TYPE , P_NEWIDFORMULE , CODEGARAN , V_NEWCODEGARAN , P_DATESYSTEME , P_USER , P_TRAITEMENT ) ; 
		 
		INSERT INTO KPGARAH 
			( SELECT V_NEWCODEGARAN , P_TYPE , P_CODEOFFRE , P_VERSION , P_NEWIDFORMULE , KDEOPT , P_NEWCODEOPTIONDTL , KDEGARAN , 
				KDESEQ , KDENIVEAU , KDESEM , KDESE1 , KDETRI , KDENUMPRES , KDEAJOUT , KDECAR , KDENAT , KDEGAN , V_NEWCODEGARAP , 
				KDEDEFG , KDEKDHID , KDEDATDEB , KDEHEUDEB , 0 , 0 , 0 , '' , KDEPRP , KDETYPEMI , 
				KDEALIREF , KDECATNAT , KDEINA , KDETAXCOD , KDETAXREP , KDECRAVN , P_USER , P_DATESYSTEME , KDEMAJAVN , KDEASVALO , 
				KDEASVALA , KDEASVALW , KDEASUNIT , KDEASBASE , KDEASMOD , KDEASOBLI , KDEINVSP , V_NEWCODEINVEN , KDEWDDEB , 
				KDEWHDEB , KDEWDFIN , KDEWHFIN , KDETCD , KDEMODI , KDEPIND , KDEPCATN , KDEPREF , KDEPPRP , KDEPEMI , KDEPTAXC , KDEPNTM , KDEALA , 
				KDEPALA , KDEALO 
			FROM KPGARAH WHERE KDEID = CODEGARAN ) ; 
	 
	END FOR ; 
  
  
END P1  ; 
  

  

