CREATE PROCEDURE SP_DGARAP ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_NEWIDFORMULE INTEGER , 
	IN P_CODEGARAN INTEGER , 
	IN P_NEWCODEGARAN INTEGER , 
	IN P_DATESYSTEME CHAR(8) , 
	IN P_USER CHAR(15) , 
	IN P_TRAITEMENT CHAR(1) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_DGARAP 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
DECLARE V_NEWCODEGARAP INTEGER DEFAULT 0 ; 
DECLARE V_CODEINVEN INTEGER DEFAULT 0 ; 
DECLARE V_NEWCODEINVEN INTEGER DEFAULT 0 ; 
  
FOR FORM_LOOP AS FREE_LIST CURSOR FOR 
SELECT KDFID CODEGARAP , KDFINVEN CODEINVEN FROM KPGARAP 
WHERE KDFKDEID = P_CODEGARAN 
DO 
/*IF ( CODEINVEN != 0 ) THEN            
                                            CALL SP_DINVEN ( P_CODEOFFRE , P_VERSION , P_TYPE , CODEINVEN , P_TRAITEMENT , V_NEWCODEINVEN ) ;            
                              END IF ; */ 
  
  
CALL SP_SECOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDFID' , CODEGARAP , V_NEWCODEGARAP ) ; 
IF ( V_NEWCODEGARAP = 0 ) THEN 
CALL SP_NCHRONO ( 'KDFID' , V_NEWCODEGARAP ) ; 
CALL SP_INCOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDFID' , CODEGARAP , V_NEWCODEGARAP ) ; 
END IF ; 
  
INSERT INTO KPGARAP 
( SELECT V_NEWCODEGARAP , P_TYPE , P_CODEOFFRE , P_VERSION , P_NEWIDFORMULE , KDFOPT , KDFGARAN , P_NEWCODEGARAN , KDFGAN , KDFPERI , 
KDFRSQ , KDFOBJ , V_NEWCODEINVEN , KDFINVEP , P_USER , P_DATESYSTEME , P_USER , P_DATESYSTEME , KDFPRV , KDFPRA , KDFPRW , KDFPRU , KDFTYC , KDFMNT 
FROM KPGARAP WHERE KDFID = CODEGARAP ) ; 
  
END FOR ; 
  
END P1  ; 
  

  

