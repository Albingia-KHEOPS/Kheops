CREATE PROCEDURE SP_DGARTAR ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_NEWIDFORMULE INTEGER , 
	IN P_CODEGARAN INTEGER , 
	IN P_NEWCODEGARAN INTEGER , 
	IN P_DATESYSTEME CHAR(8) , 
	IN P_USER CHAR(15) , 
	IN P_TRAITEMENT CHAR(1) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_DGARTAR 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
DECLARE V_NEWCODEGARTAR INTEGER DEFAULT 0 ; 
DECLARE V_NEWCODELCI INTEGER DEFAULT 0 ; 
DECLARE V_NEWCODEFRH INTEGER DEFAULT 0 ; 
  
FOR FORM_LOOP AS FREE_LIST CURSOR FOR 
	SELECT KDGID CODEGARTAR , KDGLCIUNIT LCIUNIT , KDGKDIID CODELCI , KDGFRHUNIT FRHUNIT , KDGKDKID CODEFRH FROM KPGARTAR 
		WHERE KDGKDEID = P_CODEGARAN 
DO 
  
CALL SP_SECOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDGID' , CODEGARTAR , V_NEWCODEGARTAR ) ; 
IF ( V_NEWCODEGARTAR = 0 ) THEN 
CALL SP_NCHRONO ( 'KDGID' , V_NEWCODEGARTAR ) ; 
CALL SP_INCOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDGID' , CODEGARTAR , V_NEWCODEGARTAR ) ; 
END IF ; 
  
IF ( CODELCI != 0 AND TRIM ( LCIUNIT ) = 'CPX' ) THEN 
CALL SP_SECOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDIID' , CODELCI , V_NEWCODELCI ) ; 
IF ( V_NEWCODELCI = 0 ) THEN 
CALL SP_NCHRONO ( 'KDIID' , V_NEWCODELCI ) ; 
CALL SP_INCOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDIID' , CODELCI , V_NEWCODELCI ) ; 
END IF ; 
END IF ; 
  
IF ( CODEFRH != 0 AND TRIM ( FRHUNIT ) = 'CPX' ) THEN 
CALL SP_SECOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDKID' , CODEFRH , V_NEWCODEFRH ) ; 
IF ( V_NEWCODEFRH = 0 ) THEN 
CALL SP_NCHRONO ( 'KDKID' , V_NEWCODEFRH ) ; 
CALL SP_INCOPID ( P_CODEOFFRE , P_VERSION , P_TYPE , 'KDKID' , CODEFRH , V_NEWCODEFRH ) ; 
END IF ; 
END IF ; 
  
INSERT INTO KPGARTAR 
( SELECT V_NEWCODEGARTAR , P_TYPE , P_CODEOFFRE , P_VERSION , P_NEWIDFORMULE , KDGOPT , KDGGARAN , P_NEWCODEGARAN , 
KDGNUMTAR , KDGLCIMOD , KDGLCIOBL , KDGLCIVALO , KDGLCIVALA , KDGLCIVALW , KDGLCIUNIT , KDGLCIBASE , V_NEWCODELCI , 
KDGFRHMOD , KDGFRHOBL , KDGFRHVALO , KDGFRHVALA , KDGFRHVALW , KDGFRHUNIT , KDGFRHBASE , V_NEWCODEFRH , 
KDGFMIVALO , KDGFMIVALA , KDGFMIVALW , KDGFMIUNIT , KDGFMIBASE , KDGFMAVALO , KDGFMAVALA , KDGFMAVALW , 
KDGFMAUNIT , KDGFMABASE , KDGPRIMOD , KDGPRIOBL , KDGPRIVALO , KDGPRIVALA , KDGPRIVALW , KDGPRIUNIT , KDGPRIBASE , 
KDGMNTBASE , KDGPRIMPRO , 
KDGTMC , KDGTFF , KDGCMC , KDGCHT , KDGCTT 
FROM KPGARTAR WHERE KDGID = CODEGARTAR ) ; 
  
END FOR ; 
  
END P1  ; 
  

  

