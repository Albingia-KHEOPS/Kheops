CREATE PROCEDURE SP_DUPLCON ( 
	IN P_CODEGARANTIE INTEGER , 
	IN P_CODETARIF INTEGER , 
	IN P_NUMTAR INTEGER , 
	IN P_LCIVALEUR DECIMAL(13, 2) , 
	IN P_LCIUNIT CHAR(3) , 
	IN P_LCITYPE CHAR(3) , 
	IN P_LCICOMPLEXE INTEGER , 
	IN P_FRHVALEUR DECIMAL(13, 2) , 
	IN P_FRHUNIT CHAR(3) , 
	IN P_FRHTYPE CHAR(3) , 
	IN P_FRHCOMPLEXE INTEGER , 
	IN P_TXHTVALEUR DECIMAL(16, 4) , 
	IN P_TXHTUNIT CHAR(3) , 
	IN P_TXHTMINI DECIMAL(13, 2) , 
	IN P_ASSVALEUR DECIMAL(13, 2) , 
	IN P_ASSUNIT CHAR(3) , 
	IN P_ASSTYPE CHAR(3) , 
	IN P_TRAITEMENT CHAR(1) , 
	IN P_CODEAVN INTEGER , 
	OUT P_NEWCODETARIF INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_DUPLCON 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
    
	DECLARE V_CODEAFFAIRE CHAR(9) DEFAULT '';
    DECLARE V_TYPE CHAR(1) DEFAULT '';
    DECLARE V_VERSION INTEGER DEFAULT 0;
	
	 --Valeurs possibles dans P_TRAITEMENT : I (Insert Condition) ou U (Update Condition) 
	DECLARE V_RETURN INTEGER DEFAULT 0 ; 
		DECLARE V_ASSIETTEVAL NUMERIC ( 13 , 2 ) DEFAULT 0 ; 
	SET P_NEWCODETARIF = P_CODETARIF ; 
	 
	CASE P_TRAITEMENT 
		WHEN 'I' THEN 
			CALL SP_NCHRONO ( 'KDGID' , P_NEWCODETARIF ) ; 
			 
			INSERT INTO KPGARTAR 
				( SELECT P_NEWCODETARIF , KDGTYP , KDGIPB , KDGALX , KDGFOR , KDGOPT , KDGGARAN , KDGKDEID , P_NUMTAR , 
						KDGLCIMOD , KDGLCIOBL , P_LCIVALEUR , KDGLCIVALA , KDGLCIVALW , P_LCIUNIT , P_LCITYPE , P_LCICOMPLEXE , 
						KDGFRHMOD , KDGFRHOBL , P_FRHVALEUR , KDGFRHVALA , KDGFRHVALW , P_FRHUNIT , P_FRHTYPE , P_FRHCOMPLEXE , 
						KDGFMIVALO , KDGFMIVALA , KDGFMIVALW , KDGFMIUNIT , KDGFMIBASE , 
						KDGFMAVALO , KDGFMAVALA , KDGFMAVALW , KDGFMAUNIT , KDGFMABASE , 
						KDGPRIMOD , KDGPRIOBL , P_TXHTVALEUR , KDGPRIVALA , KDGPRIVALW , P_TXHTUNIT , KDGPRIBASE , KDGMNTBASE , P_TXHTMINI , 
						KDGTMC , KDGTFF , KDGCMC , KDGCHT , KDGCTT 
					FROM KPGARTAR WHERE KDGKDEID = P_CODEGARANTIE AND KDGNUMTAR = 1 ) ; 
			 
			UPDATE KPGARAN 
				SET KDEASVALO = P_ASSVALEUR , KDEASVALA = P_ASSVALEUR , KDEASUNIT = P_ASSUNIT , KDEASBASE = P_ASSTYPE , KDEMAJAVN = P_CODEAVN 
			WHERE KDEID = P_CODEGARANTIE ; 
		WHEN 'U' THEN 
			UPDATE KPGARTAR 
				SET KDGLCIVALO = P_LCIVALEUR , KDGLCIVALA = P_LCIVALEUR , KDGLCIUNIT = P_LCIUNIT , KDGLCIBASE = P_LCITYPE , KDGKDIID = P_LCICOMPLEXE , 
					KDGFRHVALO = P_FRHVALEUR , KDGFRHVALA = P_FRHVALEUR , KDGFRHUNIT = P_FRHUNIT , KDGFRHBASE = P_FRHTYPE , KDGKDKID = P_FRHCOMPLEXE , 
					KDGPRIVALO = P_TXHTVALEUR , KDGPRIVALA = P_TXHTVALEUR , KDGPRIUNIT = P_TXHTUNIT , KDGPRIMPRO = P_TXHTMINI 
				WHERE KDGID = P_CODETARIF ; 
			UPDATE KPGARAN 
				SET KDEASVALO = P_ASSVALEUR , KDEASVALA = P_ASSVALEUR , KDEASUNIT = P_ASSUNIT , KDEASBASE = P_ASSTYPE , KDEMAJAVN = P_CODEAVN 
				WHERE KDEID = P_CODEGARANTIE ; 
		ELSE 
			SET V_RETURN = 1 ; 
	END CASE ; 

	SELECT KDEIPB, KDETYP, KDEALX
	INTO  V_CODEAFFAIRE, V_TYPE, V_VERSION
	FROM KPGARAN WHERE KDEID = P_CODEGARANTIE;
	
	DELETE FROM KPCTRLE 
	WHERE KEVIPB = V_CODEAFFAIRE AND KEVALX = V_VERSION AND KEVTYP = V_TYPE AND KEVETAPE IN ('FIN','COT');
	
END P1  ; 
  

  

