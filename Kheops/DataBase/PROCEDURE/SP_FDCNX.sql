CREATE PROCEDURE SP_FDCNX ( 
	IN P_TYPE_CONNEXITE CHAR(2) , 
	IN P_ID_OFFRE_ORIGINE CHAR(9) , 
	IN P_TYPE_OFFRE_ORIGINE CHAR(1) , 
	IN P_ALIMENT_ORIGINE NUMERIC(5, 0) , 
	IN P_BRANCHE_ORIGINE CHAR(2) , 
	IN P_SOUS_BRANCHE_ORIGINE CHAR(3) , 
	IN P_CAT_ORIGINE CHAR(5) , 
	IN P_NUM_CONNEXITE_ORIGINE DECIMAL(7, 0) , 
	IN P_CODE_OBSV_ORIGINE INTEGER , 
	IN P_IDE_ORIGINE NUMERIC(15, 0) , 
	IN P_ID_OFFRE_ACTUELLE CHAR(9) , 
	IN P_TYPE_OFFRE_ACTUELLE CHAR(1) , 
	IN P_ALIMENT_ACTUELLE NUMERIC(5, 0) , 
	IN P_BRANCHE_ACTUELLE CHAR(2) , 
	IN P_SOUS_BRANCHE_ACTUELLE CHAR(3) , 
	IN P_CAT_ACTUELLE CHAR(5) , 
	IN P_NUM_CONNEXITE_ACTUELLE DECIMAL(7, 0) , 
	IN P_CODE_OBSV_ACTUELLE INTEGER , 
	IN P_OBSV CHAR(5000) , 
	IN P_MAJ_USER CHAR(10) , 
	IN P_MAJ_DATE INTEGER , 
	IN P_MODE_ACTION CHAR(1) , 
	OUT P_ERREUR CHAR(128) ) 
	LANGUAGE SQL 
	SPECIFIC SP_FDCNX 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
DECLARE V_NBR_CONNEXITE_ACTUELLE INTEGER DEFAULT 0 ; 
DECLARE V_NBR_CONNEXITE_ORIGINE INTEGER DEFAULT 0 ; 
DECLARE V_PJIDE_ACTUELLE INTEGER DEFAULT 0 ; 
DECLARE V_PJIDE_ORIGINE INTEGER DEFAULT 0 ; 
DECLARE V_CODEOBSV INTEGER DEFAULT 0 ; 
  
SELECT COUNT ( * ) INTO V_NBR_CONNEXITE_ACTUELLE FROM YPOCONX 
WHERE PJTYP = P_TYPE_OFFRE_ACTUELLE AND PJCCX = P_TYPE_CONNEXITE AND PJCNX = P_NUM_CONNEXITE_ACTUELLE ; 
  
SELECT DISTINCT PJIDE INTO V_PJIDE_ACTUELLE 
FROM YPOCONX 
WHERE PJCCX = P_TYPE_CONNEXITE AND PJCNX = P_NUM_CONNEXITE_ACTUELLE ; 
  
SELECT DISTINCT PJIDE INTO V_PJIDE_ORIGINE 
FROM YPOCONX 
WHERE PJCCX = P_TYPE_CONNEXITE AND PJCNX = P_NUM_CONNEXITE_ORIGINE ; 
  
  
IF ( P_MODE_ACTION = 'F' ) THEN 
	 
	IF ( V_NBR_CONNEXITE_ACTUELLE = 0 ) THEN 
--Création de la nouvelle connexite                                                                                                                
		INSERT INTO YPOCONX ( PJIPB , PJALX , PJTYP , PJCCX , PJCNX , PJBRA , PJSBR , PJCAT , PJOBS ) 
		VALUES ( P_ID_OFFRE_ACTUELLE , P_ALIMENT_ACTUELLE , P_TYPE_OFFRE_ACTUELLE , P_TYPE_CONNEXITE 
		, P_NUM_CONNEXITE_ACTUELLE , P_BRANCHE_ACTUELLE , P_SOUS_BRANCHE_ACTUELLE , P_CAT_ACTUELLE , P_CODE_OBSV_ORIGINE ) ; 
--Mise a jour du numero de connexite dans la table YPOCONX 
		UPDATE YPOCONX 
		SET PJCNX = P_NUM_CONNEXITE_ACTUELLE , 
		PJIDE = V_PJIDE_ACTUELLE 
		WHERE PJTYP = P_TYPE_OFFRE_ORIGINE AND PJCCX = P_TYPE_CONNEXITE AND PJCNX = P_NUM_CONNEXITE_ORIGINE ; 
	ELSE 
--Update Observation 
		UPDATE KPOBSV 
		SET KAJOBSV = TRIM ( P_OBSV ) 
		WHERE KAJCHR = P_CODE_OBSV_ACTUELLE ; 
--Mise a jour du numero de connexite dans la table YPOCONX 
		UPDATE YPOCONX 
		SET PJCNX = P_NUM_CONNEXITE_ACTUELLE , 
		PJOBS = P_CODE_OBSV_ACTUELLE , 
		PJIDE = V_PJIDE_ACTUELLE 
		WHERE PJTYP = P_TYPE_OFFRE_ORIGINE AND PJCCX = P_TYPE_CONNEXITE AND PJCNX = P_NUM_CONNEXITE_ORIGINE ;		 
	END IF ; 
-- supprimer les lignes dans KPENGCNX ET KPENG 
DELETE FROM KPENG WHERE KDOID IN ( SELECT KIEKDOID FROM KPENGCNX WHERE KIEPJID = V_PJIDE_ORIGINE ) ; 
DELETE FROM KPENGCNX WHERE KIEPJID = V_PJIDE_ORIGINE ; 
	 
ELSE 
	IF ( V_NBR_CONNEXITE_ACTUELLE = 0 ) THEN 
  
--Creation de l'observation dans la table KPOBSV              
CALL SP_NCHRONO ( 'KAJCHR' , V_CODEOBSV ) ; 
--Insertion de l'observation KPOBSV 
		INSERT INTO KPOBSV ( KAJCHR , KAJTYP , KAJIPB , KAJALX , KAJTYPOBS , KAJOBSV ) 
		VALUES ( V_CODEOBSV , P_TYPE_OFFRE_ACTUELLE , P_ID_OFFRE_ACTUELLE , P_ALIMENT_ACTUELLE , 'GENERALE' , TRIM ( P_OBSV ) ) ; 
--Création de la nouvelle connexite                                                                                                          
		INSERT INTO YPOCONX ( PJIPB , PJALX , PJTYP , PJCCX , PJCNX , PJBRA , PJSBR , PJCAT , PJOBS ) 
		VALUES ( P_ID_OFFRE_ACTUELLE , P_ALIMENT_ACTUELLE , P_TYPE_OFFRE_ACTUELLE , P_TYPE_CONNEXITE 
		, P_NUM_CONNEXITE_ACTUELLE , P_BRANCHE_ACTUELLE , P_SOUS_BRANCHE_ACTUELLE , P_CAT_ACTUELLE , V_CODEOBSV ) ; 
--Mise a jour du numero de connexite et le code observation dans la table YPOCONX 
		UPDATE YPOCONX 
		SET PJCNX = P_NUM_CONNEXITE_ACTUELLE , 
		PJOBS = V_CODEOBSV , 
		PJIDE = V_PJIDE_ACTUELLE 
		WHERE PJIPB = P_ID_OFFRE_ORIGINE AND PJTYP = P_TYPE_OFFRE_ORIGINE AND PJALX = P_ALIMENT_ORIGINE AND PJCCX = P_TYPE_CONNEXITE AND PJCNX = P_NUM_CONNEXITE_ORIGINE ; 
	ELSE 
--Update Observation 
		UPDATE KPOBSV 
		SET KAJOBSV = TRIM ( P_OBSV ) 
		WHERE KAJCHR = P_CODE_OBSV_ACTUELLE ; 
--Mise a jour du numero de connexite et le code observation dans la table YPOCONX 
		UPDATE YPOCONX 
		SET PJCNX = P_NUM_CONNEXITE_ACTUELLE , 
		PJOBS = P_CODE_OBSV_ACTUELLE , 
		PJIDE = V_PJIDE_ACTUELLE 
		WHERE PJIPB = P_ID_OFFRE_ORIGINE AND PJTYP = P_TYPE_OFFRE_ORIGINE AND PJALX = P_ALIMENT_ORIGINE AND PJCCX = P_TYPE_CONNEXITE AND PJCNX = P_NUM_CONNEXITE_ORIGINE ; 
	END IF ; 
  
END IF ; 
--Mettre à jour KPENG                                                                
IF ( P_IDE_ORIGINE != 0 ) THEN 
UPDATE KPENG SET KDOMAJU = P_MAJ_USER , KDOMAJD = P_MAJ_DATE WHERE KDOID = P_IDE_ORIGINE ; 
END IF ; 
--Ménage dans YPOCONX si un contrat reste 'Orphelin'      
SELECT COUNT ( * ) INTO V_NBR_CONNEXITE_ORIGINE FROM YPOCONX 
WHERE PJTYP = P_TYPE_OFFRE_ORIGINE AND PJCCX = P_TYPE_CONNEXITE AND PJCNX = P_NUM_CONNEXITE_ORIGINE ; 
  
IF ( V_NBR_CONNEXITE_ORIGINE = 1 ) THEN 
DELETE FROM YPOCONX WHERE PJTYP = P_TYPE_OFFRE_ORIGINE AND PJCCX = P_TYPE_CONNEXITE AND PJCNX = P_NUM_CONNEXITE_ORIGINE ; 
DELETE FROM KPENG WHERE KDOID IN ( SELECT KIEKDOID FROM KPENGCNX WHERE KIEPJID = V_PJIDE_ORIGINE ) ; 
DELETE FROM KPENGCNX WHERE KIEPJID = V_PJIDE_ORIGINE ; 
END IF ; 
END P1  ; 
  

  

