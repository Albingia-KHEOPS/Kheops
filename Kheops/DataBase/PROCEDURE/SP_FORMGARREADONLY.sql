CREATE PROCEDURE SP_FORMGARREADONLY ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODEFORMULE INTEGER , 
	IN P_CODEOPTION INTEGER , 
	IN P_CODECIBLE INTEGER , 
	IN P_DATENOW INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_FORMGARREADONLY 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	DECLARE V_MODELEDATEAPPLI INTEGER DEFAULT 0 ; 
	DECLARE V_DATEEFFET INTEGER DEFAULT 0 ; 
	DECLARE V_DATECREATION INTEGER DEFAULT 0 ; 
	 
	DECLARE CURSORFORMULE CURSOR FOR 
	 
		/*SELECT CODEOPTION , GUIDV , CODEVOLET , DESCRVOLET , CARACVOLET , GUIDVOLET , VOLETCOLLAPSE , CHECKV ,   
			GUIDB , CODEBLOC , DESCRBLOC , CARACBLOC , GUIDBLOC , CHECKB , CODEBLOCINCOMP , BLOCINCOMP , CODEBLOCASSOC , BLOCASSOC ,   
			   
			SOCLE . KARID GUIDM , SOCLE . KARMODELE CODEMODELE , D1LIB DESCRMODELE ,   
			   
			GUIDNIV1 , ACTIONNIV1 , CODENIV1 , CODEGARNIV1 , DESCRNIV1 , CARACNIV1 , NATURENIV1 , NATUREPARAMNIV1 , CODEPARENTNIV1 , CODENIV1NIV1 ,   
			FLAGMODIFNIV1 , PARAMNATMODNIV1 , CODEGARINCOMPNIV1 , CODEGARASSOCNIV1 , CODEGARAALTNIV1 , INVENPOSSIBLE1 , TYPEINVEN1 , CODEINVEN1 , ALIMNIV1 ,   
			   
			GUIDNIV2 , CODENIV2 , CODEGARNIV2 , DESCRNIV2 , CARACNIV2 , NATURENIV2 , NATUREPARAMNIV2 , CODEPARENTNIV2 , CODENIV1NIV2 ,   
			FLAGMODIFNIV2 , PARAMNATMODNIV2 , CODEGARINCOMPNIV2 , CODEGARASSOCNIV2 , CODEGARAALTNIV2 , INVENPOSSIBLE2 , TYPEINVEN2 , CODEINVEN2 ,   
			   
			GUIDNIV3 , CODENIV3 , CODEGARNIV3 , DESCRNIV3 , CARACNIV3 , NATURENIV3 , NATUREPARAMNIV3 , CODEPARENTNIV3 , CODENIV1NIV3 ,   
			FLAGMODIFNIV3 , PARAMNATMODNIV3 , CODEGARINCOMPNIV3 , CODEGARASSOCNIV3 , CODEGARAALTNIV3 , INVENPOSSIBLE3 , TYPEINVEN3 , CODEINVEN3 ,   
			   
			GUIDNIV4 , CODENIV4 , CODEGARNIV4 , DESCRNIV4 , CARACNIV4 , NATURENIV4 , NATUREPARAMNIV4 , CODEPARENTNIV4 , CODENIV1NIV4 ,   
			FLAGMODIFNIV4 , PARAMNATMODNIV4 , CODEGARINCOMPNIV4 , CODEGARASSOCNIV4 , CODEGARAALTNIV4 , INVENPOSSIBLE4 , TYPEINVEN4 , CODEINVEN4 ,   
			   
			APPLIQUEA   
		   
		FROM V_FORMGARREADONLY   
	   
		LEFT JOIN KCATMODELE SOCLE ON SOCLE . KARID = MODELEID AND SOCLE . KARDATEAPP <= V_MODELEDATEAPPLI   
			AND ( SOCLE . KARMODELE = MODELE1 OR SOCLE . KARMODELE = MODELE2 OR SOCLE . KARMODELE = MODELE3 OR SOCLE . KARMODELE = MODELE4 )   
		LEFT JOIN ZALBINKMOD . YPLMGA ON SOCLE . KARMODELE = D1MGA   
		   
		WHERE CODEOFFRE = P_CODEOFFRE AND VERSION = P_VERSION AND TYPEOFFRE = P_TYPE AND CODEFOR = P_CODEFORMULE AND CODEOPT = P_CODEOPTION AND TYPEENRG = 'V'   
		AND CODECIBLE = P_CODECIBLE   
		ORDER BY VOLETORDRE , BLOCORDRE , SOCLE . KARDATEAPP DESC , TRI1 , TRI2 , TRI3 , TRI4 ; */ 
		 
		 
		SELECT KAPORDRE VOLETORDRE , KAQORDRE BLOCORDRE , GARW1 . KDETRI TRI1 , GARW2 . KDETRI TRI2 , GARW3 . KDETRI TRI3 , GARW4 . KDETRI TRI4 , 
			 
			OPTV . KDCKDBID CODEOPTION , OPTV . KDCID GUIDV , KAKVOLET CODEVOLET , KAKDESC DESCRVOLET , KAPCAR CARACVOLET , KAKID GUIDVOLET , KAKPRES VOLETCOLLAPSE , IFNULL ( OPTV . KDCFLAG , 0 ) CHECKV , 
			OPTB . KDCID GUIDB , KAEBLOC CODEBLOC , KAEDESC DESCRBLOC , KAQCAR CARACBLOC , KAEID GUIDBLOC , IFNULL ( OPTB . KDCFLAG , 0 ) CHECKB , INCOMP . KGJIDBLO1 CODEBLOCINCOMP , INCOMP . KGJBLO1 BLOCINCOMP , ASSOCIE . KGJIDBLO1 CODEBLOCASSOC , ASSOCIE . KGJBLO1 BLOCASSOC , 
			 
			GARW1 . KDEID GUIDNIV1 , KDFGAN ACTIONNIV1 , GARW1 . KDESEQ CODENIV1 , GARW1 . KDEGARAN CODEGARNIV1 , GARAN1 . GADEA DESCRNIV1 , GARW1 . KDECAR CARACNIV1 , GARW1 . KDENAT NATURENIV1 , GARW1 . KDEGAN NATUREPARAMNIV1 , GARW1 . KDESEM CODEPARENTNIV1 , GARW1 . KDESE1 CODENIV1NIV1 , GARW1 . KDEMODI FLAGMODIFNIV1 , GARW1 . KDEPNTM PARAMNATMODNIV1 , GAAI1 . C5SEM CODEGARINCOMPNIV1 , GAAA1 . C5SEM CODEGARASSOCNIV1 , GARAN1 . GAINV INVENPOSSIBLE1 , GARAN1 . GATYI TYPEINVEN1 , 
			IFNULL ( INVAPP1 . KBGKBEID , 0 ) CODEINVEN1 , 
			/* 2016-02-07 : CORRECTION BUG 2246 */ 
			/* GARW1.KDECRAVN CREATEAVN1 , GARW1.KDEMAJAVN MAJAVN1 , CASE WHEN GARW1.KDEALA = 'B' OR GARW1.KDEALA = 'C' THEN GARW1.KDEALA ELSE GARW1.KDEPALA END ALIMNIV1,   */ 
			GARW1 . KDECRAVN CREATEAVN1 , GARW1 . KDEMAJAVN MAJAVN1 , GARW1 . KDEALA ALIMNIV1 , 
			 
			GARW2 . KDEID GUIDNIV2 , GARW2 . KDESEQ CODENIV2 , GARW2 . KDEGARAN CODEGARNIV2 , GARAN2 . GADEA DESCRNIV2 , GARW2 . KDECAR CARACNIV2 , GARW2 . KDENAT NATURENIV2 , GARW2 . KDEGAN NATUREPARAMNIV2 , GARW2 . KDESEM CODEPARENTNIV2 , GARW2 . KDESE1 CODENIV1NIV2 , GARW2 . KDEMODI FLAGMODIFNIV2 , GARW2 . KDEPNTM PARAMNATMODNIV2 , GAAI2 . C5SEM CODEGARINCOMPNIV2 , GAAA2 . C5SEM CODEGARASSOCNIV2 , GARAN2 . GAINV INVENPOSSIBLE2 , GARAN2 . GATYI TYPEINVEN2 , 
			IFNULL ( INVAPP2 . KBGKBEID , 0 ) CODEINVEN2 , 
			GARW2 . KDECRAVN CREATEAVN2 , GARW2 . KDEMAJAVN MAJAVN2 , 
			 
			GARW3 . KDEID GUIDNIV3 , GARW3 . KDESEQ CODENIV3 , GARW3 . KDEGARAN CODEGARNIV3 , GARAN3 . GADEA DESCRNIV3 , GARW3 . KDECAR CARACNIV3 , GARW3 . KDENAT NATURENIV3 , GARW3 . KDEGAN NATUREPARAMNIV3 , GARW3 . KDESEM CODEPARENTNIV3 , GARW3 . KDESE1 CODENIV1NIV3 , GARW3 . KDEMODI FLAGMODIFNIV3 , GARW3 . KDEPNTM PARAMNATMODNIV3 , GAAI3 . C5SEM CODEGARINCOMPNIV3 , GAAA3 . C5SEM CODEGARASSOCNIV3 , GARAN3 . GAINV INVENPOSSIBLE3 , GARAN3 . GATYI TYPEINVEN3 , 
			IFNULL ( INVAPP3 . KBGKBEID , 0 ) CODEINVEN3 , 
			GARW3 . KDECRAVN CREATEAVN3 , GARW3 . KDEMAJAVN MAJAVN3 , 
			 
			GARW4 . KDEID GUIDNIV4 , GARW4 . KDESEQ CODENIV4 , GARW4 . KDEGARAN CODEGARNIV4 , GARAN4 . GADEA DESCRNIV4 , GARW4 . KDECAR CARACNIV4 , GARW4 . KDENAT NATURENIV4 , GARW4 . KDEGAN NATUREPARAMNIV4 , GARW4 . KDESEM CODEPARENTNIV4 , GARW4 . KDESE1 CODENIV1NIV4 , GARW4 . KDEMODI FLAGMODIFNIV4 , GARW4 . KDEPNTM PARAMNATMODNIV4 , GAAI4 . C5SEM CODEGARINCOMPNIV4 , GAAA4 . C5SEM CODEGARASSOCNIV4 , GARAN4 . GAINV INVENPOSSIBLE4 , GARAN4 . GATYI TYPEINVEN4 , 
			IFNULL ( INVAPP4 . KBGKBEID , 0 ) CODEINVEN4 , 
			GARW4 . KDECRAVN CREATEAVN4 , GARW4 . KDEMAJAVN MAJAVN4 , 
			 
			( SELECT COUNT ( * ) FROM KPOPTAPW WHERE KDDIPB = OPTV . KDCIPB AND KDDALX = OPTV . KDCALX AND KDDTYP = OPTV . KDCTYP AND KDDFOR = OPTV . KDCFOR AND KDDOPT = OPTV . KDCOPT ) APPLIQUEA 
			 
		FROM KPOPTD OPTV 
			INNER JOIN KVOLET ON OPTV . KDCKAKID = KAKID 
			INNER JOIN KCATVOLET ON KAKID = KAPKAKID 
			 
			INNER JOIN KPOPTD OPTB ON OPTV . KDCIPB = OPTB . KDCIPB AND OPTV . KDCALX = OPTB . KDCALX AND OPTV . KDCTYP = OPTB . KDCTYP 
				AND OPTV . KDCFOR = OPTB . KDCFOR AND OPTV . KDCOPT = OPTB . KDCOPT AND OPTB . KDCTENG = 'B' AND OPTV . KDCKAKID = OPTB . KDCKAKID 
			INNER JOIN KBLOC ON OPTB . KDCKAEID = KAEID 
			INNER JOIN KCATBLOC ON KAEID = KAQKAEID AND KAQKAPID = KAPID 
			LEFT JOIN KBLOREL INCOMP ON KAEID = INCOMP . KGJIDBLO2 AND INCOMP . KGJREL = 'I' 
			LEFT JOIN KBLOREL ASSOCIE ON KAEID = ASSOCIE . KGJIDBLO2 AND ASSOCIE . KGJREL = 'A'	 
			 
			LEFT JOIN KPGARAN GARW1 ON GARW1 . KDEIPB = OPTB . KDCIPB AND GARW1 . KDEALX = OPTB . KDCALX AND GARW1 . KDETYP = OPTB . KDCTYP 
				AND GARW1 . KDEFOR = OPTB . KDCFOR AND GARW1 . KDEOPT = OPTB . KDCOPT AND GARW1 . KDEKDCID = OPTB . KDCID AND GARW1 . KDENIVEAU = 1 
			 --INNER JOIN KCATMODELE SOCLE ON SOCLE . KARID = OPTB . KDCKARID AND SOCLE . KARDATEAPP <= V_MODELEDATEAPPLI 
			LEFT JOIN KGARAN GARAN1 ON GARW1 . KDEGARAN = GARAN1 . GAGAR 
			LEFT JOIN ZALBINKMOD . YPLTGAA GAAI1 ON GARW1 . KDESEQ = GAAI1 . C5SEQ AND GAAI1 . C5TYP = 'I' 
			LEFT JOIN ZALBINKMOD . YPLTGAA GAAA1 ON GARW1 . KDESEQ = GAAA1 . C5SEQ AND GAAA1 . C5TYP = 'A' 
			LEFT JOIN KPGARAP ON KDFKDEID = GARW1 . KDEID 
			LEFT JOIN KPINVAPP INVAPP1 ON GARW1 . KDEIPB = INVAPP1 . KBGIPB AND GARW1 . KDEALX = INVAPP1 . KBGALX AND GARW1 . KDETYP = INVAPP1 . KBGTYP AND GARW1 . KDEGARAN = INVAPP1 . KBGGAR AND INVAPP1 . KBGPERI = 'GA' 
			 
			LEFT JOIN KPGARAN GARW2 ON GARW2 . KDEIPB = GARW1 . KDEIPB AND GARW2 . KDEALX = GARW1 . KDEALX AND GARW2 . KDETYP = GARW1 . KDETYP 
				AND GARW2 . KDEFOR = GARW1 . KDEFOR AND GARW2 . KDEOPT = GARW1 . KDEOPT AND GARW2 . KDESEM = GARW1 . KDESEQ AND GARW2 . KDENIVEAU = 2 
			LEFT JOIN KGARAN GARAN2 ON GARW2 . KDEGARAN = GARAN2 . GAGAR 
			LEFT JOIN ZALBINKMOD . YPLTGAA GAAI2 ON GARW1 . KDESEQ = GAAI2 . C5SEQ AND GAAI2 . C5TYP = 'I' 
			LEFT JOIN ZALBINKMOD . YPLTGAA GAAA2 ON GARW1 . KDESEQ = GAAA2 . C5SEQ AND GAAA2 . C5TYP = 'A' 
			LEFT JOIN KPINVAPP INVAPP2 ON GARW2 . KDEIPB = INVAPP2 . KBGIPB AND GARW2 . KDEALX = INVAPP2 . KBGALX AND GARW2 . KDETYP = INVAPP2 . KBGTYP AND GARW2 . KDEGARAN = INVAPP2 . KBGGAR AND INVAPP2 . KBGPERI = 'GA' 
			 
			LEFT JOIN KPGARAN GARW3 ON GARW3 . KDEIPB = GARW2 . KDEIPB AND GARW3 . KDEALX = GARW2 . KDEALX AND GARW3 . KDETYP = GARW2 . KDETYP 
				AND GARW3 . KDEFOR = GARW2 . KDEFOR AND GARW3 . KDEOPT = GARW2 . KDEOPT AND GARW3 . KDESEM = GARW2 . KDESEQ AND GARW3 . KDENIVEAU = 3 
			LEFT JOIN KGARAN GARAN3 ON GARW3 . KDEGARAN = GARAN3 . GAGAR 
			LEFT JOIN ZALBINKMOD . YPLTGAA GAAI3 ON GARW1 . KDESEQ = GAAI3 . C5SEQ AND GAAI3 . C5TYP = 'I' 
			LEFT JOIN ZALBINKMOD . YPLTGAA GAAA3 ON GARW1 . KDESEQ = GAAA3 . C5SEQ AND GAAA3 . C5TYP = 'A' 
			LEFT JOIN KPINVAPP INVAPP3 ON GARW3 . KDEIPB = INVAPP3 . KBGIPB AND GARW3 . KDEALX = INVAPP3 . KBGALX AND GARW3 . KDETYP = INVAPP3 . KBGTYP AND GARW3 . KDEGARAN = INVAPP3 . KBGGAR AND INVAPP3 . KBGPERI = 'GA' 
			 
			LEFT JOIN KPGARAN GARW4 ON GARW4 . KDEIPB = GARW3 . KDEIPB AND GARW4 . KDEALX = GARW3 . KDEALX AND GARW4 . KDETYP = GARW3 . KDETYP 
				AND GARW4 . KDEFOR = GARW3 . KDEFOR AND GARW4 . KDEOPT = GARW3 . KDEOPT AND GARW4 . KDESEM = GARW3 . KDESEQ AND GARW4 . KDENIVEAU = 4 
			LEFT JOIN KGARAN GARAN4 ON GARW4 . KDEGARAN = GARAN4 . GAGAR 
			LEFT JOIN ZALBINKMOD . YPLTGAA GAAI4 ON GARW4 . KDESEQ = GAAI4 . C5SEQ AND GAAI4 . C5TYP = 'I' 
			LEFT JOIN ZALBINKMOD . YPLTGAA GAAA4 ON GARW4 . KDESEQ = GAAA4 . C5SEQ AND GAAA4 . C5TYP = 'A' 
			LEFT JOIN KPINVAPP INVAPP4 ON GARW4 . KDEIPB = INVAPP4 . KBGIPB AND GARW4 . KDEALX = INVAPP4 . KBGALX AND GARW4 . KDETYP = INVAPP4 . KBGTYP AND GARW4 . KDEGARAN = INVAPP4 . KBGGAR AND INVAPP4 . KBGPERI = 'GA' 
		 
		WHERE OPTV . KDCTYP = P_TYPE AND OPTV . KDCIPB = P_CODEOFFRE AND OPTV . KDCALX = P_VERSION AND OPTV . KDCFOR = P_CODEFORMULE AND OPTV . KDCOPT = P_CODEOPTION 
			AND OPTV . KDCTENG = 'V' AND KAPKAIID = P_CODECIBLE 
		ORDER BY VOLETORDRE , BLOCORDRE /*, SOCLE . KARDATEAPP DESC*/ , TRI1 , TRI2 , TRI3 , TRI4 ; 
  
	 
	/* RÉCUPÉRATION DE LA DATE DE DÉBUT D'EFFET DE L'AFFAIRE OU DE LA DATE DE CRÉATION */ 
	 -- SET V_MODELEDATEAPPLI = 0 ; 
	 -- SET V_DATEEFFET = 0 ; 
	 -- SET V_DATECREATION = 0 ; 
	 -- IF ( TRIM ( P_TYPE ) = 'P' ) THEN 
		 -- SELECT IFNULL ( Y2 . PBSAA * 10000 + Y2 . PBSAM * 100 + Y2 . PBSAJ , 0 ) , Y1 . PBEFA * 10000 + Y1 . PBEFM * 100 + Y1 . PBEFJ 
			 -- INTO V_DATECREATION , V_DATEEFFET 
			 -- FROM YPOBASE Y1 
				 -- LEFT JOIN YPOBASE Y2 ON Y1 . PBOFF = Y2 . PBIPB AND Y1 . PBOFV = Y2 . PBALX AND Y2 . PBTYP = 'O' 
			 -- WHERE TRIM ( Y1 . PBIPB ) = TRIM ( P_CODEOFFRE ) AND Y1 . PBALX = P_VERSION AND Y1 . PBTYP = P_TYPE ; 
		 -- IF ( V_DATECREATION > 0 ) THEN 
			 -- SET V_MODELEDATEAPPLI = V_DATECREATION ; 
		 -- ELSE 
			 -- SET V_MODELEDATEAPPLI = V_DATEEFFET ; 
		 -- END IF ; 
	 -- END IF ; 
	 -- IF ( TRIM ( P_TYPE ) = 'O' ) THEN 
		 -- SELECT PBSAA * 10000 + PBSAM * 100 + PBSAJ INTO V_MODELEDATEAPPLI 
			 -- FROM YPOBASE 
			 -- WHERE TRIM ( PBIPB ) = TRIM ( P_CODEOFFRE ) AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
	 -- END IF ;  
	OPEN CURSORFORMULE ; 
END P1  ; 
  

  

