CREATE OR REPLACE PROCEDURE SP_GETCOMBONOMENCLATURE ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODERSQ INTEGER , 
	IN P_CODEOBJ INTEGER , 
	IN P_CIBLE CHAR(10) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_GETCOMBONOMENCLATURE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	 
	DECLARE V_GRILLE CHAR ( 15 ) DEFAULT '' ; 
	DECLARE V_REQUEST VARCHAR ( 8000 ) DEFAULT '' ; 
		 
	DECLARE V_VAL1 INTEGER DEFAULT 0 ; 
	DECLARE V_VAL2 INTEGER DEFAULT 0 ; 
	DECLARE V_VAL3 INTEGER DEFAULT 0 ; 
	DECLARE V_VAL4 INTEGER DEFAULT 0 ; 
	DECLARE V_VAL5 INTEGER DEFAULT 0 ;	 
  
	DECLARE V_NIV1 CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NIV2 CHAR ( 2 ) DEFAULT '' ; 
	DECLARE V_NIV3 CHAR ( 3 ) DEFAULT '' ; 
	DECLARE V_NIV4 CHAR ( 4 ) DEFAULT '' ; 
	DECLARE V_NIV5 CHAR ( 5 ) DEFAULT '' ; 
	 
	DECLARE CURSOR1 CURSOR WITH RETURN FOR SQL_STATEMENT ; 
		 
	SET P_CODEOFFRE = LPAD ( RTRIM ( P_CODEOFFRE ) , 9 , ' ' );

	 --Récupération de la grille liée à la cible 
	SELECT KAHNMG INTO V_GRILLE 
	FROM KCIBLE 
	WHERE KAHCIBLE = P_CIBLE ; 
	 
	SET V_VAL1 = 0 ; 
	 
	 --Récupération des nomenclatures du risque/objet 
	IF ( P_CODEOBJ = 0 ) THEN 
		SELECT DISTINCT 
			cast(IFNULL ( VAL1 . KHKID , 0 ) AS NUMERIC( 15 , 0 )) ,
			cast(IFNULL ( VAL2 . KHKID , 0 ) AS NUMERIC( 15 , 0 )) , 
			cast(IFNULL ( VAL3 . KHKID , 0 ) AS NUMERIC( 15 , 0 )) ,
			cast(IFNULL ( VAL4 . KHKID , 0 ) AS NUMERIC( 15 , 0 )) ,
			cast(IFNULL ( VAL5 . KHKID , 0 ) AS NUMERIC( 15 , 0 )) ,
			KHJLIEN1 , KHJLIEN2 , KHJLIEN3 , KHJLIEN4 , KHJLIEN5 
			INTO V_VAL1 , V_VAL2 , V_VAL3 , V_VAL4 , V_VAL5 , V_NIV1 , V_NIV2 , V_NIV3 , V_NIV4 , V_NIV5 
		FROM KPRSQ 
			LEFT JOIN KNMGRI ON  KHJNMG =  V_GRILLE 
			LEFT JOIN KNMREF REF1 ON REF1 . KHITYPO = KHJTYPO1 AND REF1 . KHINMC = KABNMC01 
			LEFT JOIN KNMVALF VAL1 ON VAL1 . KHKNMG = KHJNMG AND VAL1 . KHKKHIID = REF1 . KHIID AND VAL1 . KHKMER = 0 
			LEFT JOIN KNMREF REF2 ON REF2 . KHITYPO = KHJTYPO2 AND REF2 . KHINMC = KABNMC02 
			LEFT JOIN KNMVALF VAL2 ON VAL2 . KHKNMG = KHJNMG AND VAL2 . KHKKHIID = REF2 . KHIID AND VAL2 . KHKMER = ( CASE KHJLIEN2 WHEN 'I' THEN 0 ELSE VAL1 . KHKID END ) 
			LEFT JOIN KNMREF REF3 ON REF3 . KHITYPO = KHJTYPO3 AND REF3 . KHINMC = KABNMC03 
			LEFT JOIN KNMVALF VAL3 ON VAL3 . KHKNMG = KHJNMG AND VAL3 . KHKKHIID = REF3 . KHIID AND VAL3 . KHKMER = ( CASE KHJLIEN3 WHEN 'I' THEN 0 ELSE VAL2 . KHKID END ) 
			LEFT JOIN KNMREF REF4 ON REF4 . KHITYPO = KHJTYPO4 AND REF4 . KHINMC = KABNMC04 
			LEFT JOIN KNMVALF VAL4 ON VAL4 . KHKNMG = KHJNMG AND VAL4 . KHKKHIID = REF4 . KHIID AND VAL4 . KHKMER = ( CASE KHJLIEN4 WHEN 'I' THEN 0 ELSE VAL3 . KHKID END ) 
			LEFT JOIN KNMREF REF5 ON REF5 . KHITYPO = KHJTYPO5 AND REF5 . KHINMC = KABNMC05 
			LEFT JOIN KNMVALF VAL5 ON VAL5 . KHKNMG = KHJNMG AND VAL5 . KHKKHIID = REF5 . KHIID AND VAL5 . KHKMER = ( CASE KHJLIEN5 WHEN 'I' THEN 0 ELSE VAL4 . KHKID END ) 
		WHERE KABTYP = P_TYPE AND  KABIPB = P_CODEOFFRE AND KABALX = P_VERSION AND KABRSQ = P_CODERSQ ;	 
	ELSE 
		SELECT DISTINCT 
			cast(IFNULL ( VAL1 . KHKID , 0 ) AS NUMERIC( 15 , 0 )) ,
			cast(IFNULL ( VAL2 . KHKID , 0 ) AS NUMERIC( 15 , 0 )) , 
			cast(IFNULL ( VAL3 . KHKID , 0 ) AS NUMERIC( 15 , 0 )) ,
			cast(IFNULL ( VAL4 . KHKID , 0 ) AS NUMERIC( 15 , 0 )) ,
			cast(IFNULL ( VAL5 . KHKID , 0 ) AS NUMERIC( 15 , 0 )) , 
			KHJLIEN1 , KHJLIEN2 , KHJLIEN3 , KHJLIEN4 , KHJLIEN5 
			INTO V_VAL1 , V_VAL2 , V_VAL3 , V_VAL4 , V_VAL5 , V_NIV1 , V_NIV2 , V_NIV3 , V_NIV4 , V_NIV5 
		FROM KPOBJ 
			LEFT JOIN KNMGRI ON KHJNMG = V_GRILLE 
			LEFT JOIN KNMREF REF1 ON REF1 . KHITYPO = KHJTYPO1 AND REF1 . KHINMC = KACNMC01 
			LEFT JOIN KNMVALF VAL1 ON VAL1 . KHKNMG = KHJNMG AND VAL1 . KHKKHIID = REF1 . KHIID AND VAL1 . KHKMER = 0 
			LEFT JOIN KNMREF REF2 ON REF2 . KHITYPO = KHJTYPO2 AND REF2 . KHINMC = KACNMC02 
			LEFT JOIN KNMVALF VAL2 ON VAL2 . KHKNMG = KHJNMG AND VAL2 . KHKKHIID = REF2 . KHIID AND VAL2 . KHKMER = ( CASE KHJLIEN2 WHEN 'I' THEN 0 ELSE VAL1 . KHKID END ) 
			LEFT JOIN KNMREF REF3 ON REF3 . KHITYPO = KHJTYPO3 AND REF3 . KHINMC = KACNMC03 
			LEFT JOIN KNMVALF VAL3 ON VAL3 . KHKNMG = KHJNMG AND VAL3 . KHKKHIID = REF3 . KHIID AND VAL3 . KHKMER = ( CASE KHJLIEN3 WHEN 'I' THEN 0 ELSE VAL2 . KHKID END ) 
			LEFT JOIN KNMREF REF4 ON REF4 . KHITYPO = KHJTYPO4 AND REF4 . KHINMC = KACNMC04 
			LEFT JOIN KNMVALF VAL4 ON VAL4 . KHKNMG = KHJNMG AND VAL4 . KHKKHIID = REF4 . KHIID AND VAL4 . KHKMER = ( CASE KHJLIEN4 WHEN 'I' THEN 0 ELSE VAL3 . KHKID END ) 
			LEFT JOIN KNMREF REF5 ON REF5 . KHITYPO = KHJTYPO5 AND REF5 . KHINMC = KACNMC05 
			LEFT JOIN KNMVALF VAL5 ON VAL5 . KHKNMG = KHJNMG AND VAL5 . KHKKHIID = REF5 . KHIID AND VAL5 . KHKMER = ( CASE KHJLIEN5 WHEN 'I' THEN 0 ELSE VAL4 . KHKID END ) 
		WHERE KACTYP = P_TYPE AND  KACIPB = P_CODEOFFRE AND KACALX = P_VERSION AND KACRSQ = P_CODERSQ AND KACOBJ = P_CODEOBJ ;	 
	END IF ; 
			 
	SET V_REQUEST = 'SELECT 1 NUMCOMBO, KHJLIEN1 NIVCOMBO, KHJLIB1 LIBELLECOMBO,IFNULL(KHIID, 0) IDVALEUR, IFNULL(KHINMC, '''') CODENOMEN, TRIM(IFNULL(KHIDESI, '''')) LIBNOMEN, IFNULL(KHINORD, 0) ORDREVAL
										FROM 
										KNMGRI 
										LEFT JOIN KNMVALF ON KHKNMG = KHJNMG AND KHKTYPO = KHJTYPO1 AND KHKNIV = 1
										LEFT JOIN KNMREF ON KHKKHIID = KHIID
										WHERE KHJNMG = ''' || V_GRILLE || '''' ;	 
	 
	IF ( V_NIV2 <> 'I' AND V_NIV2 <> '1' ) THEN 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
											SELECT 2 NUMCOMBO, KHJLIEN2 NIVCOMBO, KHJLIB2 LIBELLECOMBO, IFNULL(KHIID, 0) IDVALEUR, IFNULL(KHINMC, '''') CODENOMEN, TRIM(IFNULL(KHIDESI, '''')) LIBNOMEN, IFNULL(KHINORD, 0) ORDREVAL
											FROM 
											KNMGRI 
											LEFT JOIN KNMVALF ON KHKNMG = KHJNMG AND KHKTYPO = KHJTYPO2 AND KHKNIV = 2 AND KHKMER = ' CONCAT V_VAL1 CONCAT '
											LEFT JOIN KNMREF ON KHKKHIID = KHIID
											WHERE KHJNMG = ''' || V_GRILLE || '''' ;	 
	ELSE 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
											SELECT 2 NUMCOMBO, KHJLIEN2 NIVCOMBO, KHJLIB2 LIBELLECOMBO, IFNULL(KHIID, 0) IDVALEUR, IFNULL(KHINMC, '''') CODENOMEN, TRIM(IFNULL(KHIDESI, '''')) LIBNOMEN, IFNULL(KHINORD, 0) ORDREVAL
											FROM 
											KNMGRI 
											LEFT JOIN KNMVALF ON KHKNMG = KHJNMG AND KHKTYPO = KHJTYPO2 AND KHKNIV = 2
											LEFT JOIN KNMREF ON KHKKHIID = KHIID
											WHERE KHJNMG = ''' || V_GRILLE || '''' ;	 
	END IF ; 
	 
	IF ( V_NIV3 <> 'I' AND V_NIV3 <> '1' ) THEN 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
											SELECT 3 NUMCOMBO, KHJLIEN3 NIVCOMBO, KHJLIB3 LIBELLECOMBO, IFNULL(KHIID, 0) IDVALEUR, IFNULL(KHINMC, '''') CODENOMEN, TRIM(IFNULL(KHIDESI, '''')) LIBNOMEN, IFNULL(KHINORD, 0) ORDREVAL
											FROM 
											KNMGRI 
											LEFT JOIN KNMVALF ON KHKNMG = KHJNMG AND KHKTYPO = KHJTYPO3 AND KHKNIV = 3 AND KHKMER = ' CONCAT V_VAL2 CONCAT '
											LEFT JOIN KNMREF ON KHKKHIID = KHIID
											WHERE KHJNMG = ''' || V_GRILLE || '''' ;	 
	ELSE 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
											SELECT 3 NUMCOMBO, KHJLIEN3 NIVCOMBO, KHJLIB3 LIBELLECOMBO, IFNULL(KHIID, 0) IDVALEUR, IFNULL(KHINMC, '''') CODENOMEN, TRIM(IFNULL(KHIDESI, '''')) LIBNOMEN, IFNULL(KHINORD, 0) ORDREVAL
											FROM 
											KNMGRI 
											LEFT JOIN KNMVALF ON KHKNMG = KHJNMG AND KHKTYPO = KHJTYPO3 AND KHKNIV = 3
											LEFT JOIN KNMREF ON KHKKHIID = KHIID
											WHERE KHJNMG = ''' || V_GRILLE || '''' ;	 
	END IF ; 
	 
	IF ( V_NIV4 <> 'I' AND V_NIV4 <> '1' ) THEN 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
											SELECT 4 NUMCOMBO, KHJLIEN4 NIVCOMBO, KHJLIB4 LIBELLECOMBO, IFNULL(KHIID, 0) IDVALEUR, IFNULL(KHINMC, '''') CODENOMEN, TRIM(IFNULL(KHIDESI, '''')) LIBNOMEN, IFNULL(KHINORD, 0) ORDREVAL
											FROM 
											KNMGRI 
											LEFT JOIN KNMVALF ON KHKNMG = KHJNMG AND KHKTYPO = KHJTYPO4 AND KHKNIV = 4 AND KHKMER = ' CONCAT V_VAL3 CONCAT '
											LEFT JOIN KNMREF ON KHKKHIID = KHIID
											WHERE KHJNMG = ''' || V_GRILLE || '''' ;	 
	ELSE 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
											SELECT 4 NUMCOMBO, KHJLIEN4 NIVCOMBO, KHJLIB4 LIBELLECOMBO, IFNULL(KHIID, 0) IDVALEUR, IFNULL(KHINMC, '''') CODENOMEN, TRIM(IFNULL(KHIDESI, '''')) LIBNOMEN, IFNULL(KHINORD, 0) ORDREVAL
											FROM 
											KNMGRI 
											LEFT JOIN KNMVALF ON KHKNMG = KHJNMG AND KHKTYPO = KHJTYPO4 AND KHKNIV = 4
											LEFT JOIN KNMREF ON KHKKHIID = KHIID
											WHERE KHJNMG = ''' || V_GRILLE || '''' ;	 
	END IF ; 
	 
	IF ( V_NIV5 <> 'I' AND V_NIV5 <> '1' ) THEN 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
											SELECT 5 NUMCOMBO, KHJLIEN5 NIVCOMBO, KHJLIB5 LIBELLECOMBO, IFNULL(KHIID, 0) IDVALEUR, IFNULL(KHINMC, '''') CODENOMEN, TRIM(IFNULL(KHIDESI, '''')) LIBNOMEN, IFNULL(KHINORD, 0) ORDREVAL
											FROM 
											KNMGRI 
											LEFT JOIN KNMVALF ON KHKNMG = KHJNMG AND KHKTYPO = KHJTYPO5 AND KHKNIV = 5 AND KHKMER = ' CONCAT V_VAL4 CONCAT '
											LEFT JOIN KNMREF ON KHKKHIID = KHIID
											WHERE KHJNMG = ''' || V_GRILLE || '''' ;	 
	ELSE 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
											SELECT 5 NUMCOMBO, KHJLIEN5 NIVCOMBO, KHJLIB5 LIBELLECOMBO, IFNULL(KHIID, 0) IDVALEUR, IFNULL(KHINMC, '''') CODENOMEN, TRIM(IFNULL(KHIDESI, '''')) LIBNOMEN, IFNULL(KHINORD, 0) ORDREVAL
											FROM 
											KNMGRI 
											LEFT JOIN KNMVALF ON KHKNMG = KHJNMG AND KHKTYPO = KHJTYPO5 AND KHKNIV = 5 
											LEFT JOIN KNMREF ON KHKKHIID = KHIID
											WHERE KHJNMG = ''' || V_GRILLE || '''' ;	 
	END IF ; 
	PREPARE SQL_STATEMENT FROM V_REQUEST ; 
	OPEN CURSOR1; 
	END P1  ; 
  

  

