CREATE PROCEDURE  SP_GETDATEGARSTD ( 
	IN P_CODEAFFAIRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODEFOR INTEGER , 
	IN P_CODEOPT INTEGER , 
	IN P_CODEGAR INTEGER , 
	OUT P_DATEDEBSTD NUMERIC(12, 0) , 
	OUT P_DATEFINSTD NUMERIC(12, 0) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_GETDATEGARSTD 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	 
	 
	DECLARE V_APPLIQUEA INTEGER DEFAULT 0 ; 
  
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	DECLARE V_COUNTRSQ INTEGER DEFAULT 0 ; 
	DECLARE V_COUNTOBJ INTEGER DEFAULT 0 ; 
	 
	DECLARE V_COUNTDATEMIN INTEGER DEFAULT 0 ; 
	DECLARE V_COUNTDATEMAX INTEGER DEFAULT 0 ; 
	 
	DECLARE V_NATURE CHAR ( 1 ) DEFAULT '' ; 
	 
	DECLARE V_DATEMIN NUMERIC ( 12 , 0 ) DEFAULT 0 ; 
	DECLARE V_DATEMAX NUMERIC ( 12 , 0 ) DEFAULT 0 ; 
	 
	DECLARE V_DATEMINTEMP NUMERIC ( 12 , 0 ) DEFAULT 0 ; 
	DECLARE V_DATEMAXTEMP NUMERIC ( 12 , 0 ) DEFAULT 0 ; 
	 
	DECLARE V_DATEMINPER NUMERIC ( 12 , 0 ) DEFAULT 0 ; 
	DECLARE V_DATEMAXPER NUMERIC ( 12 , 0 ) DEFAULT 0 ; 
	 
	DECLARE V_DUREE INTEGER DEFAULT 0 ; 
	DECLARE V_DUREEUNITE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE v_nbmois INTEGER DEFAULT 0 ; 
	
	DECLARE V_HEURESTD INTEGER DEFAULT 0 ; 
	DECLARE V_DATEFSTD INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREDEB INTEGER DEFAULT 0 ; 
	DECLARE V_DATEHEURE NUMERIC ( 14 , 0 ) DEFAULT 0 ; 
	DECLARE V_DATEFINHEURE TIMESTAMP ; 
	DECLARE V_NEWDATE TIMESTAMP ; 
	
	SET P_CODEAFFAIRE = F_PADLEFT ( 9 , P_CODEAFFAIRE ) ;

set V_DATEMINTEMP = 0;
set V_DATEMAXTEMP = 0;	
	 
	/* rÃ©cupÃ©ration de l'id du s'applique Ã  */ 
	SELECT KDBID INTO V_APPLIQUEA FROM KPOPT 
		INNER JOIN KPOPTD ON KDCKDBID = KDBID 
		INNER JOIN KPGARAN ON KDEKDCID = KDCID 
	WHERE KDEID = P_CODEGAR ; 
	 
	/* dÃ©termination si la garantie est acquise ou exclue pour certains objets */ 
	SELECT COUNT ( * ) INTO V_COUNT FROM KPGARAP WHERE KDFKDEID = P_CODEGAR ; 
	 
	/* dÃ©termination si la formule s'applique pour le risque ou une liste d'objets */ 
	SELECT COUNT ( * ) INTO V_COUNTRSQ FROM KPOPTAP 
		WHERE KDDIPB = P_CODEAFFAIRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE 
			AND KDDFOR = P_CODEFOR AND KDDOPT = P_CODEOPT AND KDDPERI = 'RQ' ; 
	SELECT COUNT ( * ) INTO V_COUNTOBJ FROM KPOPTAP 
		WHERE KDDIPB = P_CODEAFFAIRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE 
			AND KDDFOR = P_CODEFOR AND KDDOPT = P_CODEOPT AND KDDPERI = 'OB' ; 
			
	IF ( V_COUNT > 0 ) THEN 
		/* si portÃ©e de garantie */ 
		SELECT KDFGAN INTO V_NATURE FROM KPGARAP WHERE KDFKDEID = P_CODEGAR FETCH FIRST 1 ROWS ONLY ; 
		 
		IF ( V_NATURE = 'A' ) THEN 
			/* dÃ©termination de la plages des objets */ 
			SELECT IFNULL ( MIN ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) , 0 ) , IFNULL ( MAX ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) , 0 ) 
				INTO V_DATEMIN , V_DATEMAX 
			FROM YPRTOBJ 
				INNER JOIN KPGARAP ON JGIPB = KDFIPB AND JGALX = KDFALX AND JGRSQ = KDFRSQ AND JGOBJ = KDFOBJ 
			WHERE KDFKDEID = P_CODEGAR ; 
			 
			SELECT COUNT ( * ) INTO V_COUNTDATEMAX FROM YPRTOBJ 
				INNER JOIN KPGARAP ON JGIPB = KDFIPB AND JGALX = KDFALX AND JGRSQ = KDFRSQ AND JGOBJ = KDFOBJ 
			WHERE KDFKDEID = P_CODEGAR AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) = 0 ; 
			 
			IF ( V_COUNTDATEMAX > 0 ) THEN 
				/* si un objet Ã  une date de fin vide */ 
				SET V_DATEMAX = 0 ;			 
			END IF ; 
		END IF ; 
		 
		IF ( V_NATURE = 'E' ) THEN 
			/* dÃ©termination de la plage des objets inclus */ 
			IF ( V_COUNTRSQ > 0 ) THEN 
				SELECT IFNULL ( MIN ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) , 0 ) , IFNULL ( MAX ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) , 0 ) 
					INTO V_DATEMIN , V_DATEMAX 
				FROM YPRTOBJ Y 
					WHERE JGIPB = P_CODEAFFAIRE AND JGALX = P_VERSION 
						AND NOT EXISTS ( SELECT * FROM KPGARAP G 
											WHERE G . KDFKDEID = P_CODEGAR AND G . KDFIPB = Y . JGIPB AND G . KDFALX = Y . JGALX AND G . KDFRSQ = Y . JGRSQ AND G . KDFOBJ = Y . JGOBJ ) ; 
											 
				SELECT COUNT ( * ) INTO V_COUNTDATEMIN FROM YPRTOBJ Y 
					WHERE JGIPB = P_CODEAFFAIRE AND JGALX = P_VERSION 
						AND NOT EXISTS ( SELECT * FROM KPGARAP G 
											WHERE G . KDFKDEID = P_CODEGAR AND G . KDFIPB = Y . JGIPB AND G . KDFALX = Y . JGALX AND G . KDFRSQ = Y . JGRSQ AND G . KDFOBJ = Y . JGOBJ ) 
						AND ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) = 0 ; 
				 
				IF ( V_COUNTDATEMIN > 0 ) THEN 
					/* si un objet Ã  une date de dÃ©but vide */ 
					SET V_DATEMIN = 0 ;			 
				END IF ; 
				 
				SELECT COUNT ( * ) INTO V_COUNTDATEMAX FROM YPRTOBJ Y 
					WHERE JGIPB = P_CODEAFFAIRE AND JGALX = P_VERSION 
						AND NOT EXISTS ( SELECT * FROM KPGARAP G 
											WHERE G . KDFKDEID = P_CODEGAR AND G . KDFIPB = Y . JGIPB AND G . KDFALX = Y . JGALX AND G . KDFRSQ = Y . JGRSQ AND G . KDFOBJ = Y . JGOBJ ) 
						AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) = 0 ; 
				 
				IF ( V_COUNTDATEMAX > 0 ) THEN 
					/* si un objet Ã  une date de fin vide */ 
					SET V_DATEMAX = 0 ;			 
				END IF ; 
			END IF ; 
			 
			IF ( V_COUNTOBJ > 0 ) THEN 
				SELECT IFNULL ( MIN ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) , 0 ) , IFNULL ( MAX ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) , 0 ) 
					INTO V_DATEMIN , V_DATEMAX 
				FROM YPRTOBJ Y 
					INNER JOIN KPOPTAP O ON O . KDDIPB = Y . JGIPB AND O . KDDALX = Y . JGALX AND O . KDDRSQ = Y . JGRSQ AND O . KDDOBJ = Y . JGOBJ 
				WHERE KDDKDBID = V_APPLIQUEA 
					AND NOT EXISTS ( SELECT * FROM KPGARAP G 
										WHERE G . KDFKDEID = P_CODEGAR AND G . KDFIPB = Y . JGIPB AND G . KDFALX = Y . JGALX AND G . KDFRSQ = Y . JGRSQ AND G . KDFOBJ = Y . JGOBJ ) ; 
										 
				SELECT COUNT ( * ) INTO V_COUNTDATEMIN FROM YPRTOBJ Y 
					INNER JOIN KPOPTAP O ON O . KDDIPB = Y . JGIPB AND O . KDDALX = Y . JGALX AND O . KDDRSQ = Y . JGRSQ AND O . KDDOBJ = Y . JGOBJ 
				WHERE KDDKDBID = V_APPLIQUEA 
					AND NOT EXISTS ( SELECT * FROM KPGARAP G 
										WHERE G . KDFKDEID = P_CODEGAR AND G . KDFIPB = Y . JGIPB AND G . KDFALX = Y . JGALX AND G . KDFRSQ = Y . JGRSQ AND G . KDFOBJ = Y . JGOBJ ) 
					AND ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) = 0 ; 
					 
				IF ( V_COUNTDATEMIN > 0 ) THEN 
					/* si un objet Ã  une date de dÃ©but vide */ 
					SET V_DATEMIN = 0 ;			 
				END IF ; 
  
				SELECT COUNT ( * ) INTO V_COUNTDATEMAX FROM YPRTOBJ Y 
					INNER JOIN KPOPTAP O ON O . KDDIPB = Y . JGIPB AND O . KDDALX = Y . JGALX AND O . KDDRSQ = Y . JGRSQ AND O . KDDOBJ = Y . JGOBJ 
				WHERE KDDKDBID = V_APPLIQUEA 
					AND NOT EXISTS ( SELECT * FROM KPGARAP G 
										WHERE G . KDFKDEID = P_CODEGAR AND G . KDFIPB = Y . JGIPB AND G . KDFALX = Y . JGALX AND G . KDFRSQ = Y . JGRSQ AND G . KDFOBJ = Y . JGOBJ ) 
					AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) = 0 ; 
					 
				IF ( V_COUNTDATEMAX > 0 ) THEN 
					/* si un objet Ã  une date de fin vide */ 
					SET V_DATEMAX = 0 ;			 
				END IF ; 
			END IF ; 
		END IF ; 
	ELSE 
		/* si pas de portÃ©e de garantie */ 
		IF ( V_COUNTRSQ > 0 ) THEN 
			SELECT JEVDA * 100000000 + JEVDM * 1000000 + JEVDJ * 10000 + JEVDH , JEVFA * 100000000 + JEVFM * 1000000 + JEVFJ * 10000 + JEVFH 
				INTO V_DATEMIN , V_DATEMAX 
			FROM YPRTRSQ 
				INNER JOIN KPOPTAP ON KDDIPB = JEIPB AND KDDALX = JEALX AND KDDRSQ = JERSQ 
			WHERE KDDKDBID = V_APPLIQUEA ; 
		END IF ; 
		 
		IF ( V_COUNTOBJ > 0 ) THEN 
			SELECT IFNULL ( MIN ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) , 0 ) , IFNULL ( MAX ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) , 0 ) 
				INTO V_DATEMIN , V_DATEMAX 
			FROM YPRTOBJ 
				INNER JOIN KPOPTAP ON KDDIPB = JGIPB AND KDDALX = JGALX AND KDDRSQ = JGRSQ AND KDDOBJ = JGOBJ 
			WHERE KDDKDBID = V_APPLIQUEA ; 
			 
			SELECT COUNT ( * ) INTO V_COUNTDATEMIN FROM YPRTOBJ 
				INNER JOIN KPOPTAP ON KDDIPB = JGIPB AND KDDALX = JGALX AND KDDRSQ = JGRSQ AND KDDOBJ = JGOBJ 
			WHERE KDDKDBID = V_APPLIQUEA AND ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) = 0 ; 
			 
			IF ( V_COUNTDATEMIN > 0 ) THEN 
				/* si un objet Ã  une date de dÃ©but vide */ 
				SET V_DATEMIN = 0 ;			 
			END IF ; 
			 
			SELECT COUNT ( * ) INTO V_COUNTDATEMAX FROM YPRTOBJ 
				INNER JOIN KPOPTAP ON KDDIPB = JGIPB AND KDDALX = JGALX AND KDDRSQ = JGRSQ AND KDDOBJ = JGOBJ 
			WHERE KDDKDBID = V_APPLIQUEA AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) = 0 ; 
			 
			IF ( V_COUNTDATEMAX > 0 ) THEN 
				/* si un objet Ã  une date de fin vide */ 
				SET V_DATEMAX = 0 ;			 
			END IF ; 
		END IF ; 
	END IF ; 
	 
	IF ( V_DATEMIN = 0 OR V_DATEMAX = 0 OR V_COUNTDATEMIN > 0 OR V_COUNTDATEMAX > 0 ) THEN
		SELECT IFNULL ( MIN ( JEVDA * 100000000 + JEVDM * 1000000 + JEVDJ * 10000 + JEVDH ) , 0 ) , IFNULL ( MAX ( JEVFA * 100000000 + JEVFM * 1000000 + JEVFJ * 10000 + JEVFH ) , 0 ) 
			INTO V_DATEMINTEMP , V_DATEMAXTEMP 
		FROM YPRTRSQ 
			INNER JOIN KPOPTAP ON KDDIPB = JEIPB AND KDDALX = JEALX AND KDDRSQ = JERSQ 
		WHERE KDDKDBID = V_APPLIQUEA ; 
		 
		IF ( ( V_DATEMIN = 0 OR V_COUNTDATEMIN > 0 ) AND V_DATEMINTEMP <> 0 ) THEN 
			SET V_DATEMIN = V_DATEMINTEMP ; 
			SET V_COUNTDATEMIN = 0 ; 
		END IF ; 
		 
		IF ( ( V_DATEMAX = 0 OR V_COUNTDATEMAX > 0 ) AND V_DATEMAXTEMP <> 0 ) THEN 
			SET V_DATEMAX = V_DATEMAXTEMP ; 
			SET V_COUNTDATEMAX = 0 ; 
		END IF ; 
	END IF ; 
	 
	IF ( V_DATEMIN = 0 OR V_DATEMAX = 0 OR V_COUNTDATEMIN > 0 OR V_COUNTDATEMAX > 0 ) THEN 
		SELECT IFNULL ( PBEFA * 100000000 + PBEFM * 1000000 + PBEFJ * 10000 + PBEFH , 0 ) , IFNULL ( PBFEA * 100000000 + PBFEM * 1000000 + PBFEJ * 10000 + PBFEH , 0 ) , 
			PBCTD , PBCTU 
			INTO V_DATEMINTEMP , V_DATEMAXTEMP , V_DUREE , V_DUREEUNITE 
		FROM YPOBASE 
		WHERE PBIPB = P_CODEAFFAIRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
		 
		IF ( ( V_DATEMIN = 0 OR V_COUNTDATEMIN > 0 ) AND V_DATEMINTEMP <> 0 ) THEN 
			SET V_DATEMIN = V_DATEMINTEMP ; 
			SET V_COUNTDATEMIN = 0 ; 
		END IF ; 
		 
		IF ( V_DATEMAX = 0 OR V_COUNTDATEMAX > 0 ) THEN 
			IF ( V_DATEMAXTEMP <> 0 ) THEN 
				SET V_DATEMAX = V_DATEMAXTEMP ; 
				SET V_COUNTDATEMAX = 0 ; 
			ELSE 
				IF ( V_DUREE > 0 AND V_DUREEUNITE <> '' ) THEN 
					SET V_DATEMINPER = V_DATEMIN / 10000 ; 
					CALL SP_GETFINPERIODE ( V_DATEMINPER , V_DUREE , V_DUREEUNITE , V_DATEMAX ) ; 
					SET V_DATEMAX = V_DATEMAX * 10000 + 2359 ; 
					SET V_COUNTDATEMAX = 0 ; 
				END IF ; 
			END IF ; 
		END IF ; 
	END IF ; 
	 
	set v_nbmois = 0;		
	select tpcn1 into v_nbmois from kpgaran 
		inner join kgaran on gagar = kdegaran
		inner join yyyypar on tcon = 'PRODU' and tfam = 'GADFG' and tcod = gadfg
	where kdeid = p_codegar and gadfg = 'H';	
	

	
	if (v_nbmois > 0 and v_datemax != 0 and v_datemax != 2359) then
		
		SET V_HEURESTD = MOD ( v_datemax , 10000 ) ; 
		SET V_DATEFSTD = v_datemax / 10000 ; 
		SET V_DATEHEURE = ( V_DATEFSTD * CAST ( 10000 AS BIGINT ) + V_HEURESTD ) * 100 ; 
		SET V_DATEFINHEURE = CAST ( V_DATEHEURE || '' AS TIMESTAMP ) ;-- + 1 MINUTES ; 
		
		
		
		SET V_NEWDATE = V_DATEFINHEURE  - v_nbmois MONTHS;  --ADD_MONTHS ( V_DATEFINHEURE , - v_nbmois ) ;	 
		SET V_HEUREDEB	= HOUR ( V_NEWDATE ) * 100 + MINUTE ( V_NEWDATE ) ;	
		SET V_DATEMIN = ( ( YEAR ( V_NEWDATE ) * 10000 + MONTH ( V_NEWDATE ) * 100 + DAY ( V_NEWDATE ) ) * CAST ( 10000 AS BIGINT ) + V_HEUREDEB ) ; 
	
	end if;	
	 
	SET P_DATEDEBSTD = V_DATEMIN ; 
	IF(V_DATEMAX != 2359) THEN
		SET P_DATEFINSTD = V_DATEMAX ; 
	ELSE
		SET P_DATEFINSTD = 0;
	END IF;
	
END P1  ; 
  
SET PATH "QSYS","QSYS2","SYSPROC","SYSIBMADM","YALBIN" ; 
  

