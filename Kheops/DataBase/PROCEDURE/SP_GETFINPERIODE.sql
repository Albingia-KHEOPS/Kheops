CREATE PROCEDURE SP_GETFINPERIODE ( 
	IN P_DATEDEB INTEGER , 
	IN P_DUREE INTEGER , 
	IN P_UNITE CHAR(1) , 
	OUT P_DATEFIN INTEGER ) 
	LANGUAGE SQL 
	SPECIFIC SP_GETFINPERIODE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_DATEDEB DATE ; 
	DECLARE V_DATEFIN DATE ; 
	DECLARE V_YEARDEB INTEGER DEFAULT 0 ; 
	DECLARE V_MONTHDEB INTEGER DEFAULT 0 ; 
	DECLARE V_DAYDEB INTEGER DEFAULT 0 ; 
	 
	SET P_DATEFIN = 0 ; 
  
	IF ( P_DATEDEB > 0 ) THEN 
		SET V_YEARDEB = ABSVAL ( P_DATEDEB / 10000 ) ; 
		SET V_MONTHDEB = ABSVAL ( ( P_DATEDEB - ( V_YEARDEB * 10000 ) ) / 100 ) ; 
		SET V_DAYDEB = P_DATEDEB - ( V_YEARDEB * 10000 ) - ( V_MONTHDEB * 100 ) ; 
  
		SET V_DATEDEB = DATE ( V_YEARDEB || '-' || V_MONTHDEB || '-' || V_DAYDEB ) ; 
		 
		CASE P_UNITE 
			WHEN 'J' THEN 
				SET V_DATEFIN = V_DATEDEB + P_DUREE DAYS ; 
				SET P_DATEFIN = 1 ; 
			WHEN 'M' THEN 
				SET V_DATEFIN = V_DATEDEB + P_DUREE MONTH ; 
				SET P_DATEFIN = 1 ; 
			WHEN 'A' THEN 
				SET V_DATEFIN = V_DATEDEB + P_DUREE YEAR ; 
				SET P_DATEFIN = 1 ; 
			ELSE 
				SET P_DATEFIN = 0 ; 
		END CASE ; 
		 
		IF ( P_DATEFIN > 0 ) THEN 
			SET V_DATEFIN = V_DATEFIN - 1 DAYS ; 
			SET P_DATEFIN = YEAR ( V_DATEFIN ) * 10000 + MONTH ( V_DATEFIN ) * 100 + DAY ( V_DATEFIN ) ;		 
		END IF ; 
  
	END IF ;	 
  
END P1  ; 
  

  

