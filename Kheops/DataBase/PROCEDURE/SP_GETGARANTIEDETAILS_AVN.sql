CREATE PROCEDURE SP_GETGARANTIEDETAILS_AVN ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODEFORMULE INTEGER , 
	IN P_CODEOPTION INTEGER , 
	IN P_CODEAVN INTEGER , 
	IN P_IDGAR INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_GETGARANTIEDETAILS_AVN 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	 
	 
	 
	DECLARE V_COUNTDATEMAX INTEGER DEFAULT 0 ; 
	DECLARE V_COUNTDATEMIN INTEGER DEFAULT 0 ; 
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	DECLARE V_COUNTRSQ INTEGER DEFAULT 0 ; 
	DECLARE V_COUNTOBJ INTEGER DEFAULT 0 ; 
	DECLARE V_NATURE CHAR ( 1 ) DEFAULT '' ; 
	 
	DECLARE V_DATEMIN NUMERIC ( 14 , 0 ) DEFAULT 0 ; 
	DECLARE V_DATEMAX NUMERIC ( 14 , 0 ) DEFAULT 0 ; 
	 
	DECLARE V_DATEMINTEMP NUMERIC ( 14 , 0 ) DEFAULT 0 ; 
	DECLARE	V_DATEMAXTEMP NUMERIC ( 14 , 0 ) DEFAULT 0 ; 
	DECLARE V_DATEMINPER INTEGER DEFAULT 0 ; 
	DECLARE V_DUREE INTEGER DEFAULT 0 ; 
	DECLARE V_DUREEUNITE CHAR ( 1 ) DEFAULT '' ; 
	 
	DECLARE V_DATEMINHEURE INTEGER DEFAULT 0 ; 
	DECLARE	V_DATEMAXHEURE INTEGER DEFAULT 0 ; 
	 
	DECLARE V_GARANTIEINDEX CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_LCI CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_FRANCHISE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_ASSIETTE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CATNAT CHAR ( 1 ) DEFAULT '' ; 
	 
	DECLARE V_CODERSQ INTEGER DEFAULT 0 ; 
	DECLARE V_CODEOBJ INTEGER DEFAULT 0 ; 
	 
	DECLARE V_ENT_GARANTIEINDEX CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_ENT_LCI CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_ENT_FRANCHISE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_ENT_ASSIETTE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_ENT_CATNAT CHAR ( 1 ) DEFAULT '' ; 
	 
	DECLARE V_AVN INTEGER DEFAULT 0 ; 
	DECLARE V_DATEAVN INTEGER DEFAULT 0 ; 
	 
	DECLARE V_PERIODICITE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_RSQTEMP CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_GARTEMP CHAR ( 1 ) DEFAULT '' ; 
  
	DECLARE INFOGARDETAIL CURSOR FOR	 
	SELECT KDEID CODEGARANTIE , KDEKDCID LIENDTLBLOC , KDECAR CARACTERE , KDENAT NATURE , KDEGAN NATRETENUE , V_DATEMIN DATEDEBW , V_DATEMINHEURE HEUREDEBW , 
		V_DATEMAX DATEFINW , V_DATEMAXHEURE HEUREFINW , KDEDATDEB DATEDEB , KDEHEUDEB HEUREDEB , KDEDATFIN DATEFIN , KDEHEUFIN HEUREFIN , 
		KDEDUREE DUREE , KDEDURUNI DUREEUNITE , KDEINA GARANTIEINDEXE , KDECATNAT SOUMISCATNAT , KDEALIREF MONTANTREF , KDEPRP APPLICATION , 
		KDETYPEMI TYPEMISSION , KDETAXCOD CODETAXE , KDEDEFG DEFGARANTIE , KDEGARAN GARANTIE , GADEA LIBGARANTIE , KDETCD TYPECONTROLEDATE , 
		KDEALA ALIMASSIETTE , V_GARANTIEINDEX GARANTIEINDEX , V_LCI LCI , V_FRANCHISE FRANCHISE , V_ASSIETTE ASSIETTE , V_CATNAT CATNAT , 
		KDECRAVN CREATENUMAVN , V_GARTEMP GARTEMP 
	FROM KPGARAW 
		INNER JOIN KGARAN ON KDEGARAN = GAGAR 
	WHERE KDEIPB = P_CODEOFFRE AND KDEALX = P_VERSION AND KDETYP = P_TYPE AND KDEID = P_IDGAR ;	 
	 
	SET P_CODEOFFRE = F_PADLEFT ( 9 , P_CODEOFFRE ) ;	 
	SET V_DATEMIN = 0 ; 
	SET V_DATEMAX = 0 ; 
	SET V_DATEMINHEURE = 0 ; 
	SET V_DATEMAXHEURE = 0 ; 
	SET V_DATEMINTEMP = 0 ; 
	SET V_DATEMAXTEMP = 0 ; 
	 
	SET V_PERIODICITE = '' ; 
	SELECT PBAVN , PBAVA * 10000 + PBAVM * 100 + PBAVJ , PBPER INTO V_AVN , V_DATEAVN , V_PERIODICITE FROM YPOBASE WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
	 
	SET V_RSQTEMP = '' ; 
	SET V_GARTEMP = '' ; 
	 
	SELECT DISTINCT JETEM INTO V_RSQTEMP 
		FROM YPRTRSQ 
			INNER JOIN KPOPTAPW ON KDDIPB = JEIPB AND KDDALX = JEALX AND KDDRSQ = JERSQ AND KDDFOR = P_CODEFORMULE AND KDDOPT = P_CODEOPTION 
		WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION ; 
		 
	IF ( TRIM ( V_PERIODICITE ) = 'E' OR TRIM ( V_PERIODICITE ) = 'U' OR TRIM ( V_RSQTEMP ) = 'O' ) THEN 
		SET V_GARTEMP = 'O' ; 
	END IF ; 
  
	 --DÉTERMINATION SI LA GARANTIE EST ACQUISE OU EXCLUE POUR CERTAINS OBJETS 
	SELECT COUNT ( * ) INTO V_COUNT FROM KPGARAP WHERE KDFKDEID = P_IDGAR ; 
	 
	 --DÉTERMINATION SI LA FORMULE S'APPLIQUE POUR LE RISQUE OU UNE LISTE D'OBJETS 
	SELECT COUNT ( * ) INTO V_COUNTRSQ FROM KPOPTAPW WHERE KDDIPB = P_CODEOFFRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE AND KDDFOR = P_CODEFORMULE AND KDDOPT = P_CODEOPTION AND KDDPERI = 'RQ' ; 
	SELECT COUNT ( * ) INTO V_COUNTOBJ FROM KPOPTAPW WHERE KDDIPB = P_CODEOFFRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE AND KDDFOR = P_CODEFORMULE AND KDDOPT = P_CODEOPTION AND KDDPERI = 'OB' ; 
		 
	IF ( V_COUNT > 0 ) THEN  --SI PORTÉE DE GARANTIE 
		SELECT KDFGAN INTO V_NATURE FROM KPGARAP WHERE KDFKDEID = P_IDGAR FETCH FIRST 1 ROWS ONLY ; 
		 
		IF ( V_NATURE = 'A' ) THEN  -- DÉTERMINATION DE LA PLAGE DES OBJETS 
			SELECT IFNULL ( MIN ( JGVDA * 10000000000 + JGVDM * 100000000 + JGVDJ * 1000000 + JGVDH * 100 ) , 0 ) , 
				IFNULL ( MAX ( JGVFA * 10000000000 + JGVFM * 100000000 + JGVFJ * 1000000 + JGVFH * 100 ) , 0 ) INTO V_DATEMIN , V_DATEMAX 
			FROM YPRTOBJ 
			INNER JOIN KPGARAP ON JGOBJ = KDFOBJ AND JGRSQ = KDFRSQ AND KDFIPB = JGIPB AND KDFALX = JGALX 
			INNER JOIN KPGARAW ON KDFKDEID = KDEID 
			INNER JOIN KPOPTDW ON KDEKDCID = KDCID 
			INNER JOIN KPOPT ON KDCKDBID = KDBID 
			WHERE KDFKDEID = P_IDGAR AND ( KDBAVA * 10000 + KDBAVM * 100 + KDBAVJ ) < ( JGVFA * 10000 + JGVFM * 100 + JGVFJ ) 
				 --AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) > 0 
				AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
				AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
			 
			SELECT COUNT ( * ) INTO V_COUNTDATEMIN 
			FROM YPRTOBJ 
			INNER JOIN KPGARAP ON JGOBJ = KDFOBJ AND JGRSQ = KDFRSQ AND KDFIPB = JGIPB AND KDFALX = JGALX 
			INNER JOIN KPGARAW ON KDFKDEID = KDEID 
			INNER JOIN KPOPTDW ON KDEKDCID = KDCID 
			INNER JOIN KPOPT ON KDCKDBID = KDBID 
			WHERE KDFKDEID = P_IDGAR AND ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) = 0 
				AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
				AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
  
			IF ( V_COUNTDATEMIN > 0 ) THEN 
				SET V_DATEMIN = 0 ; 
			END IF ; 
  
			SELECT COUNT ( * ) INTO V_COUNTDATEMAX 
			FROM YPRTOBJ 
			INNER JOIN KPGARAP ON JGOBJ = KDFOBJ AND JGRSQ = KDFRSQ AND KDFIPB = JGIPB AND KDFALX = JGALX 
			INNER JOIN KPGARAW ON KDFKDEID = KDEID 
			INNER JOIN KPOPTDW ON KDEKDCID = KDCID 
			INNER JOIN KPOPT ON KDCKDBID = KDBID 
			WHERE KDFKDEID = P_IDGAR AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) = 0 
				AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
				AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
  
			IF ( V_COUNTDATEMAX > 0 ) THEN 
				SET V_DATEMAX = 0 ; 
			END IF ; 
		END IF ; 
				 
		IF ( V_NATURE = 'E' ) THEN  --DÉTERMINATION DE LA PLAGE DES OBJETS INCLUS 
			IF ( V_COUNTRSQ > 0 ) THEN 
			 
				SELECT IFNULL ( MIN ( JGVDA * 10000000000 + JGVDM * 100000000 + JGVDJ * 1000000 + JGVDH * 100 ) , 0 ) , 
					IFNULL ( MAX ( JGVFA * 10000000000 + JGVFM * 100000000 + JGVFJ * 1000000 + JGVFH * 100 ) , 0 ) INTO V_DATEMIN , V_DATEMAX 
				FROM YPRTOBJ Y WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION 
					AND NOT EXISTS ( SELECT * FROM KPGARAP G 
										INNER JOIN KPGARAW ON KDFKDEID = KDEID 
										INNER JOIN KPOPTDW ON KDEKDCID = KDCID 
										INNER JOIN KPOPT ON KDCKDBID = KDBID 
									WHERE G . KDFKDEID = P_IDGAR 
									AND Y . JGIPB = G . KDFIPB AND Y . JGALX = G . KDFALX 
									AND Y . JGRSQ = G . KDFRSQ AND Y . JGOBJ = G . KDFOBJ 
									AND ( KDBAVA * 10000 + KDBAVM * 100 + KDBAVJ ) < ( Y . JGVFA * 10000 + Y . JGVFM * 100 + Y . JGVFJ ) ) 
							 --AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) > 0 
							AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
							AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
				 
				SELECT COUNT ( * ) INTO V_COUNTDATEMIN 
				FROM YPRTOBJ Y WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION 
					AND NOT EXISTS ( SELECT * FROM KPGARAP G 
										INNER JOIN KPGARAW ON KDFKDEID = KDEID 
										INNER JOIN KPOPTDW ON KDEKDCID = KDCID 
										INNER JOIN KPOPT ON KDCKDBID = KDBID 
									WHERE G . KDFKDEID = P_IDGAR 
									AND Y . JGIPB = G . KDFIPB AND Y . JGALX = G . KDFALX 
									AND Y . JGRSQ = G . KDFRSQ AND Y . JGOBJ = G . KDFOBJ ) 
							AND ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) = 0 
							AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
							AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
							 
				IF ( V_COUNTDATEMIN > 0 ) THEN 
					SET V_DATEMIN = 0 ; 
				END IF ; 
  
				SELECT COUNT ( * ) INTO V_COUNTDATEMAX 
				FROM YPRTOBJ Y WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION 
					AND NOT EXISTS ( SELECT * FROM KPGARAP G 
										INNER JOIN KPGARAW ON KDFKDEID = KDEID 
										INNER JOIN KPOPTDW ON KDEKDCID = KDCID 
										INNER JOIN KPOPT ON KDCKDBID = KDBID 
									WHERE G . KDFKDEID = P_IDGAR 
									AND Y . JGIPB = G . KDFIPB AND Y . JGALX = G . KDFALX 
									AND Y . JGRSQ = G . KDFRSQ AND Y . JGOBJ = G . KDFOBJ ) 
							AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) = 0 
							AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
							AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
							 
				IF ( V_COUNTDATEMAX > 0 ) THEN 
					SET V_DATEMAX = 0 ; 
				END IF ; 
			END IF ; 
			IF ( V_COUNTOBJ > 0 ) THEN 
			 
				SELECT IFNULL ( MIN ( JGVDA * 10000000000 + JGVDM * 100000000 + JGVDJ * 1000000 + JGVDH * 100 ) , 0 ) , 
					IFNULL ( MAX ( JGVFA * 10000000000 + JGVFM * 100000000 + JGVFJ * 1000000 + JGVFH * 100 ) , 0 ) INTO V_DATEMIN , V_DATEMAX 
				FROM YPRTOBJ Y 
					INNER JOIN KPOPTAPW O ON Y . JGIPB = O . KDDIPB AND Y . JGALX = O . KDDALX AND Y . JGRSQ = O . KDDRSQ AND Y . JGOBJ = O . KDDOBJ 
					INNER JOIN KPOPT OP ON OP . KDBID = O . KDDKDBID 
					INNER JOIN KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
					INNER JOIN KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
				WHERE GAR . KDEID = P_IDGAR 
				AND ( KDBAVA * 10000 + KDBAVM * 100 + KDBAVJ ) < ( JGVFA * 10000 + JGVFM * 100 + JGVFJ ) 
				AND NOT EXISTS ( SELECT * FROM KPGARAP G WHERE G . KDFKDEID = GAR . KDEID 
								AND Y . JGIPB = G . KDFIPB AND Y . JGALX = G . KDFALX AND Y . JGRSQ = G . KDFRSQ AND Y . JGOBJ = G . KDFOBJ ) 
						 --AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) > 0 
						AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
						AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
  
				SELECT COUNT ( * ) INTO V_COUNTDATEMIN 
				FROM YPRTOBJ Y 
					INNER JOIN KPOPTAPW O ON Y . JGIPB = O . KDDIPB AND Y . JGALX = O . KDDALX AND Y . JGRSQ = O . KDDRSQ AND Y . JGOBJ = O . KDDOBJ 
					INNER JOIN KPOPT OP ON OP . KDBID = O . KDDKDBID 
					INNER JOIN KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
					INNER JOIN KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
				WHERE GAR . KDEID = P_IDGAR 
				AND ( KDBAVA * 10000 + KDBAVM * 100 + KDBAVJ ) < ( JGVFA * 10000 + JGVFM * 100 + JGVFJ ) 
				AND NOT EXISTS ( SELECT * FROM KPGARAP G WHERE G . KDFKDEID = GAR . KDEID ) 
						AND ( JGVFA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) = 0 
						AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
						AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
			 
				IF ( V_COUNTDATEMIN > 0 ) THEN 
					SET V_DATEMIN = 0 ; 
				END IF ; 
						 
				SELECT COUNT ( * ) INTO V_COUNTDATEMAX 
				FROM YPRTOBJ Y 
					INNER JOIN KPOPTAPW O ON Y . JGIPB = O . KDDIPB AND Y . JGALX = O . KDDALX AND Y . JGRSQ = O . KDDRSQ AND Y . JGOBJ = O . KDDOBJ 
					INNER JOIN KPOPT OP ON OP . KDBID = O . KDDKDBID 
					INNER JOIN KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
					INNER JOIN KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
				WHERE GAR . KDEID = P_IDGAR 
				AND ( KDBAVA * 10000 + KDBAVM * 100 + KDBAVJ ) < ( JGVFA * 10000 + JGVFM * 100 + JGVFJ ) 
				AND NOT EXISTS ( SELECT * FROM KPGARAP G WHERE G . KDFKDEID = GAR . KDEID ) 
						AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) = 0 
						AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
						AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
			 
				IF ( V_COUNTDATEMAX > 0 ) THEN 
					SET V_DATEMAX = 0 ; 
				END IF ; 
			END IF ; 
			 
		END IF ; 
	 
	ELSE  -- SI PAS DE PORTÉE DE GARANTIE 
		IF ( V_COUNTRSQ > 0 ) THEN 
			SELECT JEVDA * 10000000000 + JEVDM * 100000000 + JEVDJ * 1000000 + JEVDH * 100 , JEVFA * 10000000000 + JEVFM * 100000000 + JEVFJ * 1000000 + JEVFH * 100 
				INTO V_DATEMIN , V_DATEMAX 
			FROM YPRTRSQ Y 
				INNER JOIN KPOPTAPW O ON Y . JEIPB = O . KDDIPB AND Y . JEALX = O . KDDALX AND Y . JERSQ = O . KDDRSQ 
				INNER JOIN KPOPT OP ON OP . KDBID = O . KDDKDBID 
				INNER JOIN KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
				INNER JOIN KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
			WHERE GAR . KDEID = P_IDGAR 
				 --AND ( JEVFA * 100000000 + JEVFM * 1000000 + JEVFJ * 10000 + JEVFH ) > 0 
					AND ( JEVDA * 10000 + JEVDM * 100 + JEVDJ >= V_DATEAVN OR JEVDA * 10000 + JEVDM * 100 + JEVDJ = 0 ) 
					AND ( JEVFA * 10000 + JEVFM * 100 + JEVFJ >= V_DATEAVN OR JEVFA * 10000 + JEVFM * 100 + JEVFJ = 0 ) ; 
  
		END IF ; 
		IF ( V_COUNTOBJ > 0 ) THEN 
			SELECT IFNULL ( MIN ( JGVDA * 10000000000 + JGVDM * 100000000 + JGVDJ * 1000000 + JGVDH * 100 ) , 0 ) , 
				IFNULL ( MAX ( JGVFA * 10000000000 + JGVFM * 100000000 + JGVFJ * 1000000 + JGVFH * 100 ) , 0 ) INTO V_DATEMIN , V_DATEMAX 
			FROM YPRTOBJ Y 
				INNER JOIN KPOPTAPW O ON Y . JGIPB = O . KDDIPB AND Y . JGALX = O . KDDALX AND Y . JGRSQ = O . KDDRSQ AND Y . JGOBJ = O . KDDOBJ 
				INNER JOIN KPOPT OP ON OP . KDBID = O . KDDKDBID 
				INNER JOIN KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
				INNER JOIN KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
			WHERE GAR . KDEID = P_IDGAR AND ( KDBAVA * 10000 + KDBAVM * 100 + KDBAVJ ) < ( JGVFA * 10000 + JGVFM * 100 + JGVFJ ) 
					 --AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) > 0 
					AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
					AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
					 
			SELECT COUNT ( * ) INTO V_COUNTDATEMIN 
			FROM YPRTOBJ Y 
				INNER JOIN KPOPTAPW O ON Y . JGIPB = O . KDDIPB AND Y . JGALX = O . KDDALX AND Y . JGRSQ = O . KDDRSQ AND Y . JGOBJ = O . KDDOBJ 
				INNER JOIN KPOPT OP ON OP . KDBID = O . KDDKDBID 
				INNER JOIN KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
				INNER JOIN KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
			WHERE GAR . KDEID = P_IDGAR AND ( JGVDA * 100000000 + JGVDM * 1000000 + JGVDJ * 10000 + JGVDH ) = 0 
				AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
				AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
		 
			IF ( V_COUNTDATEMIN > 0 ) THEN 
				SET V_DATEMIN = 0 ; 
			END IF ; 
  
			SELECT COUNT ( * ) INTO V_COUNTDATEMAX 
			FROM YPRTOBJ Y 
				INNER JOIN KPOPTAPW O ON Y . JGIPB = O . KDDIPB AND Y . JGALX = O . KDDALX AND Y . JGRSQ = O . KDDRSQ AND Y . JGOBJ = O . KDDOBJ 
				INNER JOIN KPOPT OP ON OP . KDBID = O . KDDKDBID 
				INNER JOIN KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
				INNER JOIN KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
			WHERE GAR . KDEID = P_IDGAR AND ( JGVFA * 100000000 + JGVFM * 1000000 + JGVFJ * 10000 + JGVFH ) = 0 
				AND ( JGVDA * 10000 + JGVDM * 100 + JGVDJ >= V_DATEAVN OR JGVDA * 10000 + JGVDM * 100 + JGVDJ = 0 ) 
				AND ( JGVFA * 10000 + JGVFM * 100 + JGVFJ >= V_DATEAVN OR JGVFA * 10000 + JGVFM * 100 + JGVFJ = 0 ) ; 
		 
			IF ( V_COUNTDATEMAX > 0 ) THEN 
				SET V_DATEMAX = 0 ; 
			END IF ; 
		END IF ; 
	 
	END IF ; 
	 
	IF ( V_DATEMIN = 0 OR V_DATEMAX = 0 OR V_COUNTDATEMAX > 0 OR V_COUNTDATEMIN > 0 ) THEN 
	 
		SELECT IFNULL ( MIN ( JEVDA * 10000000000 + JEVDM * 100000000 + JEVDJ * 1000000 + JEVDH * 100 ) , 0 ) , 
				IFNULL ( MIN ( JEVFA * 10000000000 + JEVFM * 100000000 + JEVFJ * 1000000 + JEVFH * 100 ) , 0 ) INTO V_DATEMINTEMP , V_DATEMAXTEMP 
		FROM YPRTRSQ Y 
			INNER JOIN KPOPTAPW O ON Y . JEIPB = O . KDDIPB AND Y . JEALX = O . KDDALX AND Y . JERSQ = O . KDDRSQ 
			INNER JOIN KPOPT OP ON OP . KDBID = O . KDDKDBID 
			INNER JOIN KPOPTDW OPD ON OPD . KDCKDBID = OP . KDBID 
			INNER JOIN KPGARAW GAR ON GAR . KDEKDCID = OPD . KDCID 
		WHERE GAR . KDEID = P_IDGAR 
				AND ( JEVDA * 10000 + JEVDM * 100 + JEVDJ >= V_DATEAVN OR JEVDA * 10000 + JEVDM * 100 + JEVDJ = 0 ) 
				AND ( JEVFA * 10000 + JEVFM * 100 + JEVFJ >= V_DATEAVN OR JEVFA * 10000 + JEVFM * 100 + JEVFJ = 0 ) ; 
		 
		IF ( ( V_DATEMIN = 0 OR V_COUNTDATEMIN > 0 ) AND V_DATEMINTEMP <> 0 ) THEN 
			SET V_DATEMIN = V_DATEMINTEMP ; 
			SET V_COUNTDATEMIN = 0 ; 
		END IF ; 
		IF ( ( V_DATEMAX = 0 OR V_COUNTDATEMAX > 0 ) AND V_DATEMAXTEMP <> 0 ) THEN 
			SET V_DATEMAX = V_DATEMAXTEMP ; 
			SET V_COUNTDATEMAX = 0 ; 
		END IF ; 
		 
		 
	END IF ; 
  
	IF ( V_DATEMIN = 0 OR V_DATEMAX = 0 OR V_COUNTDATEMIN > 0 OR V_COUNTDATEMAX > 0 ) THEN 
		 
		SELECT IFNULL ( PBEFA * 10000000000 + PBEFM * 100000000 + PBEFJ * 1000000 + PBEFH * 100 , 0 ) , 
			IFNULL ( PBFEA * 10000000000 + PBFEM * 100000000 + PBFEJ * 1000000 + PBFEH * 100 , 0 ) , 
			PBCTD , PBCTU 
		INTO V_DATEMINTEMP , V_DATEMAXTEMP , V_DUREE , V_DUREEUNITE 
		FROM YPOBASE 
		WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
	 
		IF ( V_DATEMIN = 0 OR V_COUNTDATEMIN > 0 ) THEN 
			IF ( V_DATEMINTEMP <> 0 ) THEN 
				SET V_DATEMIN = V_DATEMINTEMP ; 
				SET V_COUNTDATEMIN = 0 ;			 
			END IF ; 
		END IF ; 
		IF ( V_DATEMAX = 0 OR V_COUNTDATEMAX > 0 ) THEN 
			IF ( V_DATEMAXTEMP <> 0 ) THEN 
				SET V_DATEMAX = V_DATEMAXTEMP ; 
				SET V_COUNTDATEMAX = 0 ;			 
			ELSE 
				IF ( V_DUREE > 0 AND V_DUREEUNITE <> '' ) THEN 
					SET V_DATEMINPER = V_DATEMIN / 1000000 ; 
					CALL SP_GETFINPERIODE ( V_DATEMINPER , V_DUREE , V_DUREEUNITE , V_DATEMAX ) ; 
					SET V_DATEMAX = V_DATEMAX * 1000000 + 2359 * 100 ; 
					SET V_COUNTDATEMAX = 0 ;			 
				END IF ; 
			END IF ; 
		END IF ;	 
	END IF ; 
		 
	SET V_DATEMINHEURE = MOD ( V_DATEMIN , 1000000 ) ; 
	SET V_DATEMIN = V_DATEMIN / 1000000 ; 
	SET V_DATEMAXHEURE = MOD ( V_DATEMAX , 1000000 ) ; 
	SET V_DATEMAX = V_DATEMAX / 1000000 ; 
	 
	SELECT KDDRSQ INTO V_CODERSQ FROM KPOPTAPW WHERE KDDIPB = P_CODEOFFRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE AND KDDFOR = P_CODEFORMULE AND KDDOPT = P_CODEOPTION FETCH FIRST 1 ROWS ONLY ; 
	SELECT JEOBJ , JEINA , JEIXL , JEIXF , JEIXC , JECNA INTO V_CODEOBJ , V_GARANTIEINDEX , V_LCI , V_FRANCHISE , V_ASSIETTE , V_CATNAT FROM YPRTRSQ WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION AND JERSQ = V_CODERSQ ; 
	IF ( V_CODEOBJ <> 0 ) THEN 
		SELECT JGINA , JGIXL , JGIXF , JGIXC , JGCNA 
		INTO V_GARANTIEINDEX , V_LCI , V_FRANCHISE , V_ASSIETTE , V_CATNAT 
			FROM YPRTOBJ 
			WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION AND JGRSQ = V_CODERSQ AND JGOBJ = V_CODEOBJ ; 
	END IF ; 
	 
	SELECT JDINA , JDIXL , JDIXF , JDIXC , JDCNA 
	INTO V_ENT_GARANTIEINDEX , V_ENT_LCI , V_ENT_FRANCHISE , V_ENT_ASSIETTE , V_ENT_CATNAT 
FROM YPRTENT 
WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
						 
	IF ( V_GARANTIEINDEX = '' ) THEN 
		SET V_GARANTIEINDEX = V_ENT_GARANTIEINDEX ; 
	END IF ; 
	IF ( V_LCI = '' ) THEN 
		SET V_LCI = V_ENT_LCI ; 
	END IF ; 
	IF ( V_FRANCHISE = '' ) THEN 
		SET V_FRANCHISE = V_ENT_FRANCHISE ; 
	END IF ; 
	IF ( V_ASSIETTE = '' ) THEN 
		SET V_ASSIETTE = V_ENT_ASSIETTE ; 
	END IF ; 
	IF ( V_CATNAT = '' ) THEN 
		SET V_CATNAT = V_ENT_CATNAT ; 
	END IF ; 
							 
	OPEN INFOGARDETAIL ; 
	 
  
END P1  ; 
  

  

