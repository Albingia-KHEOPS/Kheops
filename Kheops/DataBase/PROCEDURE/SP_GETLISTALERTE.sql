CREATE PROCEDURE SP_GETLISTALERTE ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_DATENOW INTEGER , 
	IN P_HOURNOW INTEGER , 
	IN P_LASTYEAR INTEGER , 
	IN P_USER CHAR(10) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_GETLISTALERTE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_COURTIER INTEGER DEFAULT 0 ; 
	DECLARE V_ORDRE INTEGER DEFAULT 0 ; 
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	 
	DECLARE CURSOR_ALERT CURSOR FOR 
		SELECT KHNLIEN LIENALERT , KHNMSG MSGALERT , KHNTYPO TYPEALERT , TPCA1 TYPEBLOC 
			FROM KPALERT 
				LEFT JOIN YYYYPAR ON TCON = 'KHEOP' AND TFAM = 'ALERT' AND TCOD = KHNTYPO 
			WHERE TRIM ( KHNIPB ) = TRIM ( P_CODEOFFRE ) AND KHNALX = P_VERSION AND KHNTYP = P_TYPE 
			ORDER BY KHNTYP , KHNIPB , KHNALX , KHNORDR ; 
	 
	DELETE FROM KPALERT WHERE TRIM ( KHNIPB ) = TRIM ( P_CODEOFFRE ) AND KHNALX = P_VERSION AND KHNTYP = P_TYPE AND KHNTYPO <> 'CHGECH'; 
	 
	SELECT PBICT INTO V_COURTIER FROM YPOBASE WHERE TRIM ( PBIPB ) = TRIM ( P_CODEOFFRE ) AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
	SELECT IFNULL ( MAX ( KHNORDR ) , -1 ) INTO V_ORDRE FROM KPALERT WHERE KHNTYP = P_TYPE AND TRIM ( KHNIPB ) = TRIM ( P_CODEOFFRE ) AND KHNALX = P_VERSION ; 
	SET V_ORDRE = V_ORDRE + 1;
  
	SET V_COUNT = 0 ; 
	/* FOR LOOP_SINIST AS FREE_LIST CURSOR FOR  */ 
	SELECT COUNT ( * ) INTO V_COUNT FROM YSINIST WHERE TRIM ( SIIPB ) = TRIM ( P_CODEOFFRE ) AND SIALX = P_VERSION ; 
	/* DO  */ 
	IF ( V_COUNT > 0 ) THEN 
		INSERT INTO KPALERT 
			( KHNTYP , KHNIPB , KHNALX , KHNORDR , KHNTYPO , KHNMSG , KHNLIEN , KHNCRU , KHNCRD , KHNCRH ) 
		VALUES 
			( P_TYPE , P_CODEOFFRE , P_VERSION , V_ORDRE , 'SINISTRE' , 'Sinistres ouverts sur ce contrat.' , 0 , P_USER , P_DATENOW , P_HOURNOW ) ; 
		SET V_ORDRE = V_ORDRE + 1 ; 
	END IF ; 
	/* END FOR ;  */ 
	 
	SET V_COUNT = 0 ; 
	/* FOR LOOP_PRIME AS FREE_LIST CURSOR FOR  */ 
	SELECT COUNT ( * ) INTO V_COUNT FROM YPRIMES WHERE TRIM ( PKIPB ) = TRIM ( P_CODEOFFRE ) AND PKALX = P_VERSION AND PKSIT = 'A' ; 
	/* DO  */ 
	IF ( V_COUNT > 0 ) THEN 
		INSERT INTO KPALERT 
			( KHNTYP , KHNIPB , KHNALX , KHNORDR , KHNTYPO , KHNMSG , KHNLIEN , KHNCRU , KHNCRD , KHNCRH ) 
		VALUES 
			( P_TYPE , P_CODEOFFRE , P_VERSION , V_ORDRE , 'IMPAYES' , 'Quittances impayées sur ce contrat.' , 0 , P_USER , P_DATENOW , P_HOURNOW ) ; 
		SET V_ORDRE = V_ORDRE + 1 ; 
	END IF ; 
	/* END FOR ;  */ 
  
	/* FOR LOOP_COURTIER AS FREE_LIST CURSOR FOR        
		SELECT * FROM YCOURTI WHERE TCICT = V_COURTIER        
	DO        
		INSERT INTO KPALERT        
			( KHNTYP , KHNIPB , KHNALX , KHNORDR , KHNTYPO , KHNMSG , KHNLIEN , KHNCRU , KHNCRD , KHNCRH )        
		VALUES        
			( P_TYPE , P_CODEOFFRE , P_VERSION , V_ORDRE , 'COURTGES' , 'Sinistres ouverts sur ce contrat.' , 0 , P_USER , P_DATENOW , P_HOURNOW ) ;        
		SET V_ORDRE = V_ORDRE + 1 ;        
	END FOR ;  */ 
  
	SET V_COUNT = 0 ; 
	/* FOR LOOP_CONNEX AS FREE_LIST CURSOR FOR  */ 
	SELECT COUNT ( * ) INTO V_COUNT FROM YPOCONX WHERE TRIM ( PJIPB ) = TRIM ( P_CODEOFFRE ) AND PJALX = P_VERSION AND PJTYP = P_TYPE AND PJCCX = '20' ; 
	/* DO  */ 
	IF ( V_COUNT > 0 ) THEN 
		INSERT INTO KPALERT 
			( KHNTYP , KHNIPB , KHNALX , KHNORDR , KHNTYPO , KHNMSG , KHNLIEN , KHNCRU , KHNCRD , KHNCRH ) 
		VALUES 
			( P_TYPE , P_CODEOFFRE , P_VERSION , V_ORDRE , 'ENGAGCNX' , 'Le contrat a des connexités d''engagement.' , 0 , P_USER , P_DATENOW , P_HOURNOW ) ; 
		SET V_ORDRE = V_ORDRE + 1 ; 
	END IF ; 
	/* END FOR ;  */ 
	 
	SET V_COUNT = 0 ; 
	SELECT COUNT ( * ) INTO V_COUNT FROM KPSUSP WHERE TRIM ( KICIPB ) = TRIM ( P_CODEOFFRE ) AND KICALX = P_VERSION AND KICTYP = P_TYPE AND KICTYE = 'S' AND KICFIND >= P_LASTYEAR ; 
	IF ( V_COUNT > 0 ) THEN 
		INSERT INTO KPALERT 
			( KHNTYP , KHNIPB , KHNALX , KHNORDR , KHNTYPO , KHNMSG , KHNLIEN , KHNCRU , KHNCRD , KHNCRH ) 
		VALUES 
			( P_TYPE , P_CODEOFFRE , P_VERSION , V_ORDRE , 'SUSPENS' , 'Il existe des périodes de suspension.' , 'Visu des suspensions' , P_USER , P_DATENOW , P_HOURNOW ) ; 
		SET V_ORDRE = V_ORDRE + 1 ;	 
	END IF ; 

	SET V_COUNT = 0;
	SELECT COUNT ( * ) INTO V_COUNT FROM KPINTER INNER JOIN YINTERV ON KHBIIN = INIIN AND (INFVA > 0) WHERE KHBIPB = P_CODEOFFRE AND KHBALX = P_VERSION AND KHBTYP = P_TYPE;  
	IF ( V_COUNT > 0 ) THEN 
		INSERT INTO KPALERT 
			( KHNTYP , KHNIPB , KHNALX , KHNORDR , KHNTYPO , KHNMSG , KHNLIEN , KHNCRU , KHNCRD , KHNCRH ) 
		VALUES 
			( P_TYPE , P_CODEOFFRE , P_VERSION , V_ORDRE , 'INTERV' , 'Intervenant(s) invalide(s).' , 0 , P_USER , P_DATENOW , P_HOURNOW ) ; 
		SET V_ORDRE = V_ORDRE + 1 ;	 
	END IF ;   
  
	OPEN CURSOR_ALERT ; 
END P1  ; 
  

  

