CREATE PROCEDURE SP_GETLISTEDESTINATAIRES ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODEDOC INTEGER , 
	IN P_TYPEDESTINATAIRE CHAR(2) , 
	IN P_TYPEINTERVENANT CHAR(2) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_GETLISTEDESTINATAIRES 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	 
	DECLARE V_REQUEST VARCHAR ( 8000 ) DEFAULT '' ; 
	DECLARE CURSOR1 CURSOR WITH RETURN FOR SQL_STATEMENT ;	 
	 
	IF ( P_TYPEDESTINATAIRE = 'CT' ) THEN 
	 
		 --Récupération du courtier apporteur 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT 'SELECT ''COURTIERAPP'' TYPEDESTINATAIRE, PBCTA GUIDID, PBCTA CODEDESTINATAIRE, CAPPORTEUR.TNNOM LIBDESTINATAIRE,
												CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
											FROM YPOBASE
											LEFT JOIN YCOURTN CAPPORTEUR ON PBCTA = CAPPORTEUR.TNICT AND CAPPORTEUR.TNXN5 = 0
											LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''CT'' AND KEMIDS = PBCTA AND KEMSTU <> ''X''
											WHERE TRIM(PBIPB) = TRIM(''' CONCAT P_CODEOFFRE CONCAT ''') AND PBALX = ' CONCAT P_VERSION CONCAT ' AND PBTYP = ''' CONCAT P_TYPE CONCAT '''' ; 
		 
		 --Récupération du courtier 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
											SELECT ''COURTIER'' TYPEDESTINATAIRE, PBICT GUIDID, PBICT CODEDESTINATAIRE, CCOURTIER.TNNOM LIBDESTINATAIRE,
											CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
											FROM YPOBASE
											LEFT JOIN YCOURTN CCOURTIER ON PBICT = CCOURTIER.TNICT AND CCOURTIER.TNXN5 = 0
											LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''CT'' AND KEMIDS = PBICT AND KEMSTU <> ''X''
											WHERE TRIM(PBIPB) = TRIM(''' CONCAT P_CODEOFFRE CONCAT ''') AND PBALX = ' CONCAT P_VERSION CONCAT ' AND PBTYP = ''' CONCAT P_TYPE CONCAT '''' ; 
		 
		 --Récupération du payeur 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
											SELECT ''COURTIERPAYEUR'' TYPEDESTINATAIRE, PBCTP GUIDID, PBCTP CODEDESTINATAIRE, CPAYEUR.TNNOM LIBDESTINATAIRE,
											CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
											FROM YPOBASE
											LEFT JOIN YCOURTN CPAYEUR ON PBCTP = CPAYEUR.TNICT AND CPAYEUR.TNXN5 = 0
											LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''CT'' AND KEMIDS = PBCTP AND KEMSTU <> ''X''
											WHERE TRIM(PBIPB) = TRIM(''' CONCAT P_CODEOFFRE CONCAT ''') AND PBALX = ' CONCAT P_VERSION CONCAT ' AND PBTYP = ''' CONCAT P_TYPE CONCAT '''' ; 
		 
		 --Récupération des co-courtiers 
		FOR LOOP_COCOURTIER AS FREE_LIST CURSOR FOR 
			SELECT PFICT V_COCOURTIER FROM YPOCOUR WHERE TRIM ( PFIPB ) = TRIM ( P_CODEOFFRE ) AND PFTYP = P_TYPE AND PFALX = P_VERSION AND PFCTI = 'N' 
			 
			DO 
				SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
													SELECT ''COCOURTIER'' TYPEDESTINATAIRE, ' CONCAT V_COCOURTIER CONCAT ' GUIDID, ' CONCAT V_COCOURTIER CONCAT ' CODEDESTINATAIRE, COCOURTIER.TNNOM LIBDESTINATAIRE,
													CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
													FROM YCOURTN COCOURTIER
													LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''CT'' AND KEMIDS = ' CONCAT V_COCOURTIER CONCAT ' AND KEMSTU <> ''X''
													WHERE COCOURTIER.TNICT = ' CONCAT V_COCOURTIER CONCAT ' AND COCOURTIER.TNXN5 = 0 AND COCOURTIER.TNTNM = ''A''' ; 
			 
		END FOR ; 
		 
		 --Récupération des autres courtiers 
		FOR LOOP_AUTRECOURTIER AS FREE_LIST CURSOR FOR 
			SELECT KEMIDS V_AUTRECOURTIER FROM KPDOCLDW 
										INNER JOIN KPDOCLW ON KELID = KEMKELID AND TRIM ( KELIPB ) = TRIM ( P_CODEOFFRE ) AND KELTYP = P_TYPE AND KELALX = P_VERSION 
			WHERE NOT EXISTS ( SELECT 1 FROM YPOBASE 
									LEFT JOIN YPOCOUR ON PFIPB = PBIPB AND PFTYP = PBTYP AND PFALX = PBALX 
							WHERE TRIM ( PBIPB ) = TRIM ( P_CODEOFFRE ) 
							AND PBALX = P_VERSION 
							AND PBTYP = P_TYPE 
			AND ( PBCTA = KEMIDS OR PBICT = KEMIDS OR PBCTP = KEMIDS OR PFICT = KEMIDS ) )	 
			AND KEMKELID = P_CODEDOC AND KEMTYDS = 'CT' 
			 
			DO 
				SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
													SELECT ''AUTRECOURTIER'' TYPEDESTINATAIRE, ' CONCAT V_AUTRECOURTIER CONCAT ' GUIDID, ' CONCAT V_AUTRECOURTIER CONCAT ' CODEDESTINATAIRE, CAUTRE.TNNOM LIBDESTINATAIRE,
													CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
													FROM YCOURTN CAUTRE 
													LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''CT'' AND KEMIDS = ' CONCAT V_AUTRECOURTIER CONCAT ' AND KEMSTU <> ''X''
													WHERE CAUTRE.TNICT = ' CONCAT V_AUTRECOURTIER CONCAT ' AND CAUTRE.TNXN5 = 0' ; 
			 
		END FOR ; 
	 
	END IF ;  --Fin cas courtier 
	IF ( P_TYPEDESTINATAIRE = 'AS' ) THEN 
		 
		 --Récupération du preneur d'assurance 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT 'SELECT ''PRENEURASSU'' TYPEDESTINATAIRE, PBIAS GUIDID, PBIAS CODEDESTINATAIRE, CASSURE.ANNOM LIBDESTINATAIRE,
												CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
											FROM YPOBASE
											LEFT JOIN YASSNOM CASSURE ON PBIAS = CASSURE.ANIAS AND CASSURE.ANINL = 0
											LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''AS'' AND KEMIDS = PBIAS AND KEMSTU <> ''X''
											WHERE TRIM(PBIPB) = TRIM(''' CONCAT P_CODEOFFRE CONCAT ''') AND PBALX = ' CONCAT P_VERSION CONCAT ' AND PBTYP = ''' CONCAT P_TYPE CONCAT '''' ; 
		 
		 
		 --Récupération des co-assurés 
		FOR LOOP_COASSURE AS FREE_LIST CURSOR FOR 
			SELECT PCIAS V_COASSURE FROM YPOASSU WHERE TRIM ( PCIPB ) = TRIM ( P_CODEOFFRE ) AND PCTYP = P_TYPE AND PCALX = P_VERSION 
			 
			DO 
				SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
													SELECT ''COASSURE'' TYPEDESTINATAIRE, ' CONCAT V_COASSURE CONCAT ' GUIDID, ' CONCAT V_COASSURE CONCAT ' CODEDESTINATAIRE, COASSURE.ANNOM LIBDESTINATAIRE,
													CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
													FROM YPOASSU 
													INNER JOIN YASSNOM COASSURE ON PCIAS = COASSURE.ANIAS AND COASSURE.ANINL = 0 AND COASSURE.ANTNM = ''A''
													INNER JOIN YPOBASE ON PBIPB = PCIPB AND PBALX = PCALX AND PBTYP = PCTYP AND PBIAS <> PCIAS
													LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''AS'' AND KEMIDS = ' CONCAT V_COASSURE CONCAT ' AND KEMSTU <> ''X''
													WHERE TRIM(PCIPB) = TRIM(''' CONCAT P_CODEOFFRE CONCAT ''') AND PCALX = ' CONCAT P_VERSION CONCAT ' AND PCTYP = ''' CONCAT P_TYPE CONCAT ''' AND PCIAS = ' CONCAT V_COASSURE CONCAT '' ; 
			END FOR ; 
		 
				 --Récupération des autres assurés 
		FOR LOOP_AUTREASSURE AS FREE_LIST CURSOR FOR 
			SELECT KEMIDS V_AUTREASSURE FROM KPDOCLDW 
										INNER JOIN KPDOCLW ON KELID = KEMKELID AND TRIM ( KELIPB ) = TRIM ( P_CODEOFFRE ) AND KELTYP = P_TYPE AND KELALX = P_VERSION 
			WHERE NOT EXISTS ( SELECT 1 FROM YPOBASE 
									LEFT JOIN YPOASSU ON PCIPB = PBIPB AND PCTYP = PBTYP AND PCALX = PBALX 
							WHERE TRIM ( PBIPB ) = TRIM ( P_CODEOFFRE ) 
							AND PBALX = P_VERSION 
							AND PBTYP = P_TYPE 
			AND ( PBIAS = KEMIDS OR PCIAS = KEMIDS ) )	 
			AND KEMKELID = P_CODEDOC AND KEMTYDS = 'AS' 
			 
			DO 
				SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
													SELECT ''AUTREASSURE'' TYPEDESTINATAIRE, ' CONCAT V_AUTREASSURE CONCAT ' GUIDID, ' CONCAT V_AUTREASSURE CONCAT ' CODEDESTINATAIRE, CAUTRE.ANNOM LIBDESTINATAIRE,
													CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
													FROM YASSNOM CAUTRE 
													LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''AS'' AND KEMIDS = ' CONCAT V_AUTREASSURE CONCAT ' AND KEMSTU <> ''X''
													WHERE CAUTRE.ANIAS = ' CONCAT V_AUTREASSURE CONCAT ' AND CAUTRE.ANINL = 0' ; 
													 
			END FOR ; 
			 
	END IF ;  --Fin cas assuré 
	IF ( P_TYPEDESTINATAIRE = 'CI' ) THEN  --Cas Compagnie 
			 --Récupération des compagnies 
			SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT 'SELECT CASE PHTAP WHEN ''C'' THEN ''COASSUREUR'' WHEN ''A'' THEN ''APERITEUR'' END TYPEDESTINATAIRE, CIICN GUIDID, CIICN CODEDESTINATAIRE, CCOMPA.CINOM LIBDESTINATAIRE,
													CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
												FROM YPOCOAS
												LEFT JOIN YCOMPA CCOMPA ON PHCIE = CCOMPA.CIICI
												LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''CI'' AND KEMIDS = CIICN AND KEMSTU <> ''X''
												WHERE TRIM(PHIPB) = TRIM(''' CONCAT P_CODEOFFRE CONCAT ''') AND PHALX = ' CONCAT P_VERSION CONCAT ' AND PHTYP = ''' CONCAT P_TYPE CONCAT '''
												AND (PHTAP = ''A'' OR PHTAP=''C'')' ; 
		 
			 --Récupération des autres compagnies 
			FOR LOOP_AUTRECOMP AS FREE_LIST CURSOR FOR 
				SELECT KEMIDS V_AUTRECOMPA FROM KPDOCLDW 
											INNER JOIN KPDOCLW ON KELID = KEMKELID AND TRIM ( KELIPB ) = TRIM ( P_CODEOFFRE ) AND KELTYP = P_TYPE AND KELALX = P_VERSION 
				WHERE NOT EXISTS ( SELECT 1 FROM YPOCOAS	 
											INNER JOIN YCOMPA ON CIICI = PHCIE 
								WHERE TRIM ( PHIPB ) = TRIM ( P_CODEOFFRE ) 
								AND PHTYP = P_TYPE 
								AND PHALX = P_VERSION 
				AND ( CIICN = KEMIDS ) )	 
				AND KEMKELID = P_CODEDOC AND KEMTYDS = 'CI' 
				 
				DO 
					SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
														SELECT ''AUTRECOASSUREUR'' TYPEDESTINATAIRE, ' CONCAT V_AUTRECOMPA CONCAT ' GUIDID, CIICN CODEDESTINATAIRE, CAUTRE.CINOM LIBDESTINATAIRE,
														CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
														FROM YCOMPA CAUTRE 
														LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''CI'' AND KEMIDS = ' CONCAT V_AUTRECOMPA CONCAT ' AND KEMSTU <> ''X''
														WHERE CAUTRE.CIICN = ' CONCAT V_AUTRECOMPA ; 
														 
				END FOR ; 
		 
	END IF ;  --Fin cas Compagnie 
	IF ( P_TYPEDESTINATAIRE = 'IN' ) THEN  --Cas Intervenant 
		IF ( P_TYPEINTERVENANT <> '' ) THEN 
		 --Récupération des intervenants 
		SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT 'SELECT TPLIB TYPEDESTINATAIRE, KHBID GUIDID, KHBID CODEDESTINATAIRE, CINTER.IMNOM LIBDESTINATAIRE,
												CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
											FROM KPINTER
											LEFT JOIN YINTNOM CINTER ON KHBIIN = CINTER.IMIIN AND IMINL = 0 AND IMTNM = ''A''
											LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''IN'' AND KEMIDS = KHBID AND KEMTYI = ''' CONCAT P_TYPEINTERVENANT CONCAT ''' AND KEMSTU <> ''X''
											LEFT JOIN YYYYPAR ON TCOD = KHBTYI AND TCON = ''PRODU'' AND TFAM = ''INTYI''
											WHERE TRIM(KHBIPB) = TRIM(''' CONCAT P_CODEOFFRE CONCAT ''') AND KHBALX = ' CONCAT P_VERSION CONCAT ' AND KHBTYP = ''' CONCAT P_TYPE CONCAT ''' AND KHBTYI =''' CONCAT P_TYPEINTERVENANT CONCAT '''' ; 
											 
	 
		 --Récupération des autres intervenants 
		FOR LOOP_AUTREINTERV AS FREE_LIST CURSOR FOR 
			SELECT KEMIDS V_AUTREINTERV FROM KPDOCLDW 
										INNER JOIN KPDOCLW ON KELID = KEMKELID AND TRIM ( KELIPB ) = TRIM ( P_CODEOFFRE ) AND KELTYP = P_TYPE AND KELALX = P_VERSION 
			WHERE NOT EXISTS ( SELECT 1 FROM KPINTER 
							WHERE TRIM ( KHBIPB ) = TRIM ( P_CODEOFFRE ) 
							AND KHBTYP = P_TYPE 
							AND KHBALX = P_VERSION 
							AND KHBTYI = P_TYPEINTERVENANT 
							AND ( KHBID = KEMIDS ) )	 
			AND KEMKELID = P_CODEDOC AND KEMTYDS = 'IN' 
			 
			DO 
				SET V_REQUEST = TRIM ( V_REQUEST ) CONCAT ' UNION ALL
													SELECT TPLIB TYPEDESTINATAIRE, ' CONCAT V_AUTREINTERV CONCAT ' GUIDID, ' CONCAT V_AUTREINTERV CONCAT ' CODEDESTINATAIRE, CAUTRE.IMNOM LIBDESTINATAIRE,
													CASE WHEN KEMKELID IS NULL THEN ''N'' ELSE ''O'' END ISSELECTED
													FROM YINTNOM CAUTRE 
													LEFT JOIN KPDOCLDW ON KEMKELID = ' CONCAT P_CODEDOC CONCAT ' AND KEMTYDS = ''IN'' AND KEMIDS = ' CONCAT V_AUTREINTERV CONCAT ' AND KEMSTU <> ''X''
													LEFT JOIN YYYYPAR ON TCOD = CAUTRE.IMTYI AND TCON = ''PRODU'' AND TFAM = ''INTYI''
													WHERE CAUTRE.IMIIN = ' CONCAT V_AUTREINTERV CONCAT ' AND IMINL = 0 AND IMTNM = ''A'' AND KHBTYI =''' CONCAT P_TYPEINTERVENANT CONCAT '''' ; 
													 
			END FOR ; 
		END IF ; 
	END IF ;  --Fin cas intervenant 
	/* SET P_REQUEST_OUT = V_REQUEST;  */ 
	PREPARE SQL_STATEMENT FROM V_REQUEST ; 
	OPEN CURSOR1 ; 
	 
	END P1  ; 
  

  

