
CREATE PROCEDURE SP_HLIBERERGAR (
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) ,
	IN P_DATEDEBAVT INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_HLIBERERGAR 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
P1 : BEGIN ATOMIC  
	
	FOR LOOP_GAR1 AS FREE_LIST CURSOR FOR 
		SELECT KDEID IDGAR1 , KDEFOR CODEFOR1 , KDEOPT CODEOPT1 , KDEGARAN CODEGAR1 , KDENIVEAU NIVEAUGAR1 , KDESEQ SEQGARANTIE1 
		FROM KPGARAN 
		WHERE KDEIPB = P_CODEOFFRE AND KDEALX = P_VERSION AND KDETYP = P_TYPE AND KDEGAN <> '' 
		AND KDEDATFIN <> 0 AND KDEDATFIN < P_DATEDEBAVT 
	DO 
		FOR LOOP_GAR2 AS FREE_LIST CURSOR FOR 
			SELECT KDEID IDGAR2 , KDEFOR CODEFOR2 , KDEOPT CODEOPT2 , KDEGARAN CODEGAR2 , KDENIVEAU NIVEAUGAR2 , KDESEQ SEQGARANTIE2 FROM KPGARAN 
			WHERE KDEIPB = P_CODEOFFRE AND KDEALX = P_VERSION AND KDETYP = P_TYPE AND KDEFOR = CODEFOR1 AND KDEOPT = CODEOPT1			
			AND KDESEM = SEQGARANTIE1 AND KDENIVEAU = ( NIVEAUGAR1 + 1 ) 
		DO 
			FOR LOOP_GAR3 AS FREE_LIST CURSOR FOR 
				SELECT KDEID IDGAR3 , KDEFOR CODEFOR3 , KDEOPT CODEOPT3 , KDEGARAN CODEGAR3 , KDENIVEAU NIVEAUGAR3 , KDESEQ SEQGARANTIE3 FROM KPGARAN 
				WHERE KDEIPB = P_CODEOFFRE AND KDEALX = P_VERSION AND KDETYP = P_TYPE AND KDEFOR = CODEFOR2 AND KDEOPT = CODEOPT2	 
				AND KDESEM = SEQGARANTIE2 AND KDENIVEAU = ( NIVEAUGAR2 + 1 ) 
			DO 
				FOR LOOP_GAR4 AS FREE_LIST CURSOR FOR 
					SELECT KDEID IDGAR4 , KDEFOR CODEFOR4 , KDEOPT CODEOPT4 , KDEGARAN CODEGAR4 , KDENIVEAU NIVEAUGAR4 , KDESEQ SEQGARANTIE4 FROM KPGARAN 
					WHERE KDEIPB = P_CODEOFFRE AND KDEALX = P_VERSION AND KDETYP = P_TYPE AND KDEFOR = CODEFOR3 AND KDEOPT = CODEOPT3	 
				    AND KDESEM = SEQGARANTIE3 AND KDENIVEAU = ( NIVEAUGAR3 + 1 ) 
				DO 
					/* SUPPRESSION DE LA GARANTIE */ 
					CALL SP_CREATEHISTODELGARANTIE ( P_CODEOFFRE , P_VERSION , P_TYPE , CODEFOR4 , CODEGAR4 , IDGAR4 ) ; 
				END FOR ; 
  
				/* SUPPRESSION DE LA GARANTIE */ 
				CALL SP_CREATEHISTODELGARANTIE ( P_CODEOFFRE , P_VERSION , P_TYPE , CODEFOR3 , CODEGAR3 , IDGAR3 ) ; 
			END FOR ; 
  
			/* SUPPRESSION DE LA GARANTIE */ 
			CALL SP_CREATEHISTODELGARANTIE ( P_CODEOFFRE , P_VERSION , P_TYPE , CODEFOR2 , CODEGAR2 , IDGAR2 ) ; 
		END FOR ; 
								 
		/* SUPPRESSION DE LA GARANTIE */ 
		CALL SP_CREATEHISTODELGARANTIE ( P_CODEOFFRE , P_VERSION , P_TYPE , CODEFOR1 , CODEGAR1 , IDGAR1 ) ; 
	END FOR ; 

END P1 ;

