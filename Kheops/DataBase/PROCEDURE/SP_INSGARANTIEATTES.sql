CREATE PROCEDURE SP_INSGARANTIEATTES ( 
	IN P_CODECONTRAT CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) ,
	IN P_NUMAVN INTEGER ,	
	IN P_FONCTION CHAR(6) , 
	IN P_PERIODEDEB INTEGER , 
	IN P_PERIODEFIN INTEGER , 
	IN P_LOTID INTEGER , 
	IN P_CODERSQ INTEGER , 
	IN P_CODEFOR INTEGER , 
	IN P_CODEOPT INTEGER , 
	IN P_TOP_OPT_EDTB CHAR(1) , 
	IN P_DEBFOR INTEGER , 
	IN P_FINFOR INTEGER ) 
	LANGUAGE SQL 
	SPECIFIC SP_INSGARANTIEATTES 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD ,
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_TOP_GAR_EDTB CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NATPORTEE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_RSQPORTEE INTEGER DEFAULT 0 ; 
	DECLARE V_OBJPORTEE INTEGER DEFAULT 0 ; 
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	 
	DECLARE V_DATDEBSPE INTEGER DEFAULT 0 ; 
	DECLARE V_DATFINSPE INTEGER DEFAULT 0 ; 
  
	/* INSERTION DE LA FORMULE */ 
	INSERT INTO KPSELW 
		( KHVID , KHVTYP , KHVIPB , KHVALX , KHVPERI , KHVRSQ , KHVOBJ , KHVFOR , KHVKDEID , KHVEDTB , KHVDEB , KHVFIN ) 
	VALUES 
		( P_LOTID , P_TYPE , P_CODECONTRAT , P_VERSION , 'FO' , P_CODERSQ , 0 , P_CODEFOR , 0 , P_TOP_OPT_EDTB , P_DEBFOR , P_FINFOR ) ; 
	 
	SET V_TOP_GAR_EDTB = 'O' ; 
	/* SÉLECTION DES GARANTIES */ 
	FOR LOOP_GAR AS FREE_LIST CURSOR FOR 
		SELECT KDEID CODEGARAN , KDEDATDEB DEBGARAN , KDEDATFIN FINGARAN , KDEGAN NATGARAN , GARGE REGULARISABLE 
		FROM KPGARAN 
			INNER JOIN KGARAN ON GAGAR = KDEGARAN 
			INNER JOIN KPGARTAR ON KDGKDEID = KDEID
		WHERE TRIM ( KDEIPB ) = TRIM ( P_CODECONTRAT ) AND KDEALX = P_VERSION AND KDETYP = P_TYPE 
			AND KDEFOR = P_CODEFOR AND KDEOPT = P_CODEOPT AND KDEGAN != 'E'
			AND (P_FONCTION = 'ATTEST' OR
				 (KDGPRIVALA > 0 OR KDGPRIMPRO > 0 OR KDEGARAN IN ('RCFR', 'RCEX', 'RCUS'))
			)
	DO 
		SET V_NATPORTEE = '' ; 
		SET V_RSQPORTEE = 0 ; 
		SET V_OBJPORTEE = 0 ; 
		SET V_COUNT = 0 ; 
	 
		IF ( ( P_FONCTION = 'ATTEST' AND ( NATGARAN = 'A' OR NATGARAN = 'C' OR NATGARAN = 'E' ) ) 
			OR ( P_FONCTION = 'REGULE' AND ( NATGARAN = 'A' OR NATGARAN = 'C' ) AND REGULARISABLE <> 'N' ) 
			OR ( P_FONCTION != 'ATTEST' AND P_FONCTION != 'REGULE' ) ) THEN 
			IF ( DEBGARAN = 0 ) THEN 
				SET DEBGARAN = P_DEBFOR ; 
			END IF ; 
			IF ( FINGARAN = 0 ) THEN 
				SET FINGARAN = P_FINFOR ; 
			END IF ; 
			 
			/* SI LES DATES DE LA GARANTIE RENTRENT DANS LA PÉRIODE */ 
			IF ( DEBGARAN <= P_PERIODEFIN AND ( FINGARAN >= P_PERIODEDEB OR FINGARAN = 0 ) ) THEN 
				/* GESTION DES PORTEES DE GARANTIE */ 
				SELECT DISTINCT IFNULL ( KDFGAN , '' ) , IFNULL ( KDFRSQ , 0 ) INTO V_NATPORTEE , V_RSQPORTEE 
					FROM KPGARAP WHERE KDFKDEID = CODEGARAN ; 
				IF ( V_NATPORTEE != '' ) THEN 
				 
					FOR LOOP_OBJPORTEE AS FREE_LIST CURSOR FOR 
						SELECT KHVOBJ CODEOBJ , KHVDEB DEBOBJ , KHVFIN FINOBJ , IFNULL ( KDFGAN , '' ) OBJPORTEE 
						FROM KPSELW 
						LEFT JOIN KPGARAP ON KHVIPB = KDFIPB AND KHVALX = KDFALX AND KHVTYP = KDFTYP 
						AND KHVRSQ = KDFRSQ AND KHVOBJ = KDFOBJ AND KDFKDEID = CODEGARAN AND KDFGAN = V_NATPORTEE 
						WHERE KHVID = P_LOTID AND TRIM ( KHVIPB ) = P_CODECONTRAT AND KHVALX = P_VERSION AND KHVTYP = P_TYPE 
						AND KHVRSQ = V_RSQPORTEE AND KHVPERI = 'OB' 
					DO 
						IF ( ( OBJPORTEE = '' AND V_NATPORTEE = 'A' ) OR ( OBJPORTEE != '' AND V_NATPORTEE = 'E' ) ) THEN 
							SET V_TOP_GAR_EDTB = 'N' ; 
						ELSE 
							IF ( V_DATDEBSPE = 0 OR DEBOBJ < V_DATDEBSPE ) THEN 
								SET V_DATDEBSPE = DEBOBJ ; 
							END IF ; 
							IF ( V_DATFINSPE = 0 OR FINOBJ > V_DATFINSPE ) THEN 
								SET V_DATFINSPE = FINOBJ ; 
							END IF ; 
						END IF ; 
					END FOR ; 
				 
					IF ( V_DATDEBSPE <= P_PERIODEFIN AND ( V_DATFINSPE >= P_PERIODEDEB OR V_DATFINSPE = 0 ) ) THEN 
						/* INSERTION DE LA GARANTIE */ 
						INSERT INTO KPSELW 
							( KHVID , KHVTYP , KHVIPB , KHVALX , KHVPERI , KHVRSQ , KHVOBJ , KHVFOR , KHVKDEID , KHVEDTB , KHVDEB , KHVFIN , KHVECO , KHVAVN) 
						VALUES 
							( P_LOTID , P_TYPE , P_CODECONTRAT , P_VERSION , 'GA' , P_CODERSQ , 0 , P_CODEFOR , CODEGARAN , V_TOP_GAR_EDTB , V_DATDEBSPE , V_DATFINSPE , 'O' , P_NUMAVN) ; 
					END IF ;				 
				ELSE 
					/* INSERTION DE LA GARANTIE */ 
					INSERT INTO KPSELW 
						( KHVID , KHVTYP , KHVIPB , KHVALX , KHVPERI , KHVRSQ , KHVOBJ , KHVFOR , KHVKDEID , KHVEDTB , KHVDEB , KHVFIN , KHVECO , KHVAVN) 
					VALUES 
						( P_LOTID , P_TYPE , P_CODECONTRAT , P_VERSION , 'GA' , P_CODERSQ , 0 , P_CODEFOR , CODEGARAN , V_TOP_GAR_EDTB , DEBGARAN , FINGARAN, 'O' , P_NUMAVN ) ; 
				END IF ; 
			 
			END IF ; 
		END IF ; 
	END FOR ; 
END P1  ;
  

  

