CREATE PROCEDURE SP_LGNCOND( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODEFORMULE INTEGER , 
	IN P_CODEOPTION INTEGER , 
	IN P_CONDITIONID INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_QUERY VARCHAR ( 8000 ) DEFAULT '' ; 
	DECLARE CURSOR1 CURSOR WITH RETURN FOR 
	SELECT DISTINCT KAPORDRE TRIVOLET, KAQORDRE TRIBLOC, KARDATEAPP TRIDATE, KDETRI TRIGAR, KDENIVEAU NIVEAU, KDESEM PERE, KDESE1 ORIGINE, KDGID IDLIGNE1, KDEID IDLIGNE2, KDESEQ IDSEQUENCE, KDEGARAN CODE, GADES DESCRIPTION, KDECAR COULEUR1, KDEGAN COULEUR2, KDGLCIVALO LCIVALEUR, KDGLCIUNIT LCIUNITE, KDGLCIBASE LCITYPE, KDGKDIID LIENLCI, IFNULL(KDILCE, '') CODECOMPLEXELCI, KDIDESC LIBLCICOMPLEXE, KDGLCIMOD LCILECTURESEULE, KDGLCIOBL LCIOBLIGATOIRE, KDGFRHVALO FRANCHISEVALEUR, KDGFRHUNIT FRANCHISEUNITE, KDGFRHBASE FRANCHISETYPE, KDGKDKID LIENFRH, IFNULL(KDKFHE, '') CODECOMPLEXEFRH, KDKDESC LIBFRHCOMPLEXE, KDGFRHMOD FRANCHISELECTURESEULE, KDGFRHOBL FRANCHISEOBLIGATOIRE, KDEASVALO ASSIETTEVALEUR, KDEASUNIT ASSIETTEUNITE, KDEASBASE ASSIETTETYPE, KDEASMOD ASSIETTELECTURESEULE, KDEASOBLI ASSIETTEOBLIGATOIRE, KDEALA ASSIETTEALIMAUTO, KDGNUMTAR NUMEROTARIF, KDGPRIVALO PRIMEVALEURORIGINE , KDGPRIVALA PRIMEVALEUR , KDGPRIVALW PRIMEVALEURTEMP , KDGPRIUNIT PRIMEUNITE, KDGPRIMPRO PRIMEMINI, KDGPRIMOD PRIMELECTURESEULE, KDGPRIOBL PRIMEOBLIGATOIRE, KDEKDCID CODEBLOC,KAKID CVOLET, KAKVOLET LVOLET, KAEID CBLOC, KAEBLOC LBLOC, IFNULL(KBEREPVAL, '') REPORTINVEN,
						'0' DATEDEB,
						KDEDATFIN DATEFIN, KDEHEUFIN HEUFIN, KDEDUREE DUREE, KDEDURUNI UNITDUREE, GAATG ATTENTATGAREAT 
				  FROM KPGARAN
				  INNER JOIN KPFOR ON KDEIPB = KDAIPB AND KDEALX = KDAALX AND KDETYP = KDATYP AND KDEFOR = KDAFOR
				  LEFT JOIN KGARAN ON GAGAR = KDEGARAN
				  INNER JOIN KPOPTD ON KDCID = KDEKDCID
				  INNER JOIN KVOLET ON KDCKAKID = KAKID
				  INNER JOIN KCATVOLET ON KAKID = KAPKAKID
				  INNER JOIN KCATBLOC ON KAQKAPID = KAPID
				  INNER JOIN KBLOC ON KDCKAEID = KAEID AND KAEID = KAQKAEID
				  INNER JOIN KPGARTAR ON KDGKDEID = KDEID
				  INNER JOIN KCATMODELE ON KARID = KDCKARID
				  LEFT JOIN ZALBINKMOD.YPLTGAR ON C2SEQ = KDESEQ AND C2NIV = KDENIVEAU AND C2MGA = KARMODELE
				  LEFT JOIN KPEXPLCI ON KDIID = KDGKDIID
				  LEFT JOIN KPEXPFRH ON KDKID = KDGKDKID
				  LEFT JOIN KPINVAPP ON KBGIPB = KDEIPB AND KBGALX = KDEALX AND KBGTYP = KDETYP AND KBGGAR = KDEGARAN
				  LEFT JOIN KPINVEN ON KBEID = KBGKBEID
				  WHERE KDEIPB = P_CODEOFFRE AND KDEALX = P_VERSION AND KDETYP = P_TYPE AND KDEFOR = P_CODEFORMULE  AND KDEOPT = P_CODEOPTION AND KDEGAN IN ('A', 'B', 'C') AND KAPKAIID = KDAKAIID  
					AND ( P_CONDITIONID = 0 OR KDGID = P_CONDITIONID )
				  ORDER BY KAPORDRE, KAQORDRE, KARDATEAPP DESC, KDETRI, KDEGARAN; 

	SET P_CODEOFFRE = LPAD( RTRIM ( P_CODEOFFRE ), 9, ' ');

	OPEN CURSOR1 ; 
END P1  ; 
  

