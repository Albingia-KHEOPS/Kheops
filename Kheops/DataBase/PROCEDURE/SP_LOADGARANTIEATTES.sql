CREATE PROCEDURE SP_LOADGARANTIEATTES ( 
	IN P_CODECONTRAT CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_LOTID INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_LOADGARANTIEATTES 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_QUERY VARCHAR ( 5000 ) DEFAULT '' ; 
	DECLARE CURSOR1 CURSOR WITH RETURN FOR SQL_STATEMENT ; 
	 
	SET V_QUERY = 'SELECT IDGARAN, CODERSQ, CODEOBJ, LETTREFOR , LIBFOR , CODEGARAN, LIBGARAN, NIVGARAN, SEQGARAN, MASTERGARAN,
			NATUREGARAN, CAST(VALGARAN AS DOUBLE) VALGARAN, UNITGARAN, LIBUNTGAR, BASEGARAN, DATEDEBGARAN, DATEFINGARAN, DUREEGARAN, DURUNITEGARAN, DATEWDGARAN, DATEWFGARAN,
			TYPEPORTEE, CODEOBJPORTEE, FORMUSE, GARUSE
		FROM V_ATTESTGARAN
		WHERE ATTESTID = ' CONCAT P_LOTID CONCAT ' AND TRIM(CODECONTRAT) = ''' CONCAT TRIM ( P_CODECONTRAT ) CONCAT ''' AND VERSCONTRAT = ' CONCAT P_VERSION CONCAT ' AND TYPECONTRAT = ''' CONCAT P_TYPE CONCAT '''' ; 
	 
	/* IF (TRIM(P_SEARCHGARANTIE) != '') THEN           
		SET V_QUERY = TRIM(V_QUERY) CONCAT ' AND (TRIM(LOWER(CODEGARAN)) LIKE ''%' CONCAT TRIM(LOWER(P_SEARCHGARANTIE)) CONCAT '%''           
							OR TRIM(LOWER(LIBGARAN)) LIKE ''%' CONCAT TRIM(LOWER(P_SEARCHGARANTIE)) CONCAT '%'')';           
	END IF;	 */ 
	 
	SET V_QUERY = TRIM ( V_QUERY ) CONCAT ' ORDER BY VOLETORDRE, BLOCORDRE, GARORDRE' ; 
  
	PREPARE SQL_STATEMENT FROM V_QUERY ; 
	OPEN CURSOR1 ; 
	 
END P1  ; 
  

  

