CREATE PROCEDURE SP_LOADLISTNOMENCLATURE ( 
	IN P_TYPOLOGIE CHAR(15) , 
	IN P_BRANCHE CHAR(10) , 
	IN P_CIBLE CHAR(10) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_LOADLISTNOMENCLATURE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_QUERY VARCHAR ( 8000 ) DEFAULT '' ; 
	DECLARE CURSOR1 CURSOR WITH RETURN FOR SQL_STATEMENT ; 
	 
/*							LEFT JOIN KNMVALF ON KHIID = KHKKHIID1 OR KHIID = KHKKHIID2 OR KHIID = KHKKHIID3 OR KHIID = KHKKHIID4 OR KHIID = KHKKHIID5 */ 
  
	SET V_QUERY = 'SELECT KHIID NOMENCLATUREID, KHINORD NOMENCLATUREORDRE, KHINMC NOMENCLATURECODE, KHIDESI NOMENCLATURELIB, KAIBRA CODEBRANCHE, BRCHE.TPLIB LIBBRANCHE, 
						KAHCIBLE CODECIBLE, KAHDESC LIBCIBLE, KHITYPO CODETYPO, TYPO.TPLIB LIBTYPO
						FROM KNMREF
							LEFT JOIN KNMVALF ON KHIID = KHKKHIID
							LEFT JOIN KCIBLE ON KHKNMG = KAHNMG
							LEFT JOIN KCIBLEF ON KAHID = KAIKAHID
							LEFT JOIN YYYYPAR BRCHE ON BRCHE.TCON = ''GENER'' AND BRCHE.TFAM = ''BRCHE'' AND TRIM(BRCHE.TCOD) = TRIM(KAIBRA)
							LEFT JOIN YYYYPAR TYPO ON TYPO.TCON = ''KHEOP'' AND TYPO.TFAM = ''NMTYP'' AND TRIM(TYPO.TCOD) = TRIM(KHITYPO)
						WHERE KHIID <> 0' ; 
							 
	 
	IF ( TRIM ( P_TYPOLOGIE ) != '' OR TRIM ( P_BRANCHE ) != '' OR TRIM ( P_CIBLE ) != '' ) THEN 
		 
		IF ( TRIM ( P_TYPOLOGIE ) != '' ) THEN 
			SET V_QUERY = V_QUERY CONCAT ' AND TRIM(KHITYPO) = ''' CONCAT TRIM ( P_TYPOLOGIE ) CONCAT '''' ; 
		END IF ; 
	 
		IF ( TRIM ( P_BRANCHE ) != '' ) THEN 
			SET V_QUERY = V_QUERY CONCAT ' AND TRIM(KAIBRA) = ''' CONCAT TRIM ( P_BRANCHE ) CONCAT '''' ; 
		END IF ; 
	 
		IF ( TRIM ( P_CIBLE ) != '' ) THEN 
			SET V_QUERY = V_QUERY CONCAT ' AND TRIM(KAHCIBLE) = ''' CONCAT TRIM ( P_CIBLE ) CONCAT '''' ; 
		END IF ; 
	 
	END IF ; 
	 
	SET V_QUERY = V_QUERY CONCAT ' ORDER BY CODETYPO, NOMENCLATUREORDRE' ; 
	 
	PREPARE SQL_STATEMENT FROM V_QUERY ; 
	OPEN CURSOR1 ; 
  
END P1  ; 
  

  

