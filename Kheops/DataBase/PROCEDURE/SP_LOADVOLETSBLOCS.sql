CREATE PROCEDURE SP_LOADVOLETSBLOCS ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODECIBLE INTEGER , 
	IN P_DATE INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_LOADVOLETSBLOCS 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	 
	DECLARE V_NATURECONTRAT CHAR ( 3 ) DEFAULT '' ; 
	DECLARE V_INTERCALAIRE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_MODELEDATEAPPLI INTEGER DEFAULT 0 ; 
	DECLARE V_DATEEFFET INTEGER DEFAULT 0 ; 
	DECLARE V_DATECREATION INTEGER DEFAULT 0 ; 
  
	 
  
	DECLARE CURSORVOLETSBLOCS CURSOR FOR 
	SELECT	CATVOLET . KAPID GUIDV , 
			VOLET . KAKVOLET CODEVOLET , 
			VOLET . KAKDESC DESCRVOLET , 
			CATVOLET . KAPCAR CARACVOLET , 
			VOLET . KAKID GUIDVOLET , 
			KAQID GUIDB , 
			KAEBLOC CODEBLOC , 
			KAEDESC DESCRBLOC , 
			KAQCAR CARACBLOC , 
			KAEID GUIDBLOC , 
			MODEL . KARMODELE LIBMODELE , 
			MODEL . KARID GUIDM , 
			VOLET . KAKPRES VOLETCOLLAPSE , 
			CATVOLET . KAPORDRE VOLETORDRE , 
			CATBLOC . KAQORDRE BLOCORDRE 
		 
	FROM KCATVOLET CATVOLET 
		INNER JOIN KVOLET VOLET ON CATVOLET . KAPKAKID = VOLET . KAKID 
		LEFT JOIN KCATBLOC CATBLOC ON CATVOLET . KAPID = CATBLOC . KAQKAPID 
		LEFT JOIN KBLOC BLOC ON CATBLOC . KAQKAEID = BLOC . KAEID 
		INNER JOIN KCATMODELE MODEL ON CATBLOC . KAQID = MODEL . KARKAQID 
					AND MODEL . KARID = ( SELECT F_ECMGETYPO ( CAST ( V_NATURECONTRAT AS VARCHAR ( 3 ) ) , 
												CAST ( V_INTERCALAIRE AS VARCHAR ( 1 ) ) , CAST ( CATBLOC . KAQID AS INTEGER ) , 
												CAST ( V_MODELEDATEAPPLI AS INTEGER ) ) 
												FROM SYSIBM . SYSDUMMY1 ) 
  
  
	WHERE KAPKAIID = P_CODECIBLE ; 
	 
	 
	SET P_CODEOFFRE = F_PADLEFT ( 9 , P_CODEOFFRE ) ; 
	 
	/* RÉCUPÉRATION DE LA DATE DE DÉBUT D'EFFET DE L'AFFAIRE OU DE LA DATE DE CRÉATION */ 
	SET V_MODELEDATEAPPLI = 0 ; 
	SET V_DATEEFFET = 0 ; 
	SET V_DATECREATION = 0 ; 
	 
	IF ( TRIM ( P_TYPE ) = 'P' ) THEN 
		SELECT Y1 . PBNPL , JDITC , IFNULL ( Y2 . PBSAA * 10000 + Y2 . PBSAM * 100 + Y2 . PBSAJ , 0 ) , Y1 . PBEFA * 10000 + Y1 . PBEFM * 100 + Y1 . PBEFJ 
			INTO V_NATURECONTRAT , V_INTERCALAIRE , V_DATECREATION , V_DATEEFFET 
			FROM YPOBASE Y1 
				INNER JOIN YPRTENT ON JDIPB = Y1 . PBIPB AND JDALX = Y1 . PBALX 
				LEFT JOIN YPOBASE Y2 ON Y1 . PBOFF = Y2 . PBIPB AND Y1 . PBOFV = Y2 . PBALX AND Y2 . PBTYP = 'O' 
			WHERE Y1 . PBIPB = P_CODEOFFRE AND Y1 . PBALX = P_VERSION AND Y1 . PBTYP = P_TYPE ; 
			 
		IF ( V_DATECREATION > 0 ) THEN 
			SET V_MODELEDATEAPPLI = V_DATECREATION ; 
		ELSE 
			SET V_MODELEDATEAPPLI = V_DATEEFFET ; 
		END IF ; 
	END IF ; 
	 
	IF ( TRIM ( P_TYPE ) = 'O' ) THEN 
		SELECT PBNPL , JDITC , PBSAA * 10000 + PBSAM * 100 + PBSAJ 
			INTO V_NATURECONTRAT , V_INTERCALAIRE , V_MODELEDATEAPPLI 
		FROM YPOBASE 
			INNER JOIN YPRTENT ON JDIPB = PBIPB AND JDALX = PBALX 
			WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
	END IF ; 
  
	 
	 -- SELECT PBNPL , JDITC INTO V_NATURECONTRAT , V_INTERCALAIRE	 
	 -- FROM YPOBASE 
			 -- INNER JOIN YPRTENT ON JDIPB = PBIPB AND JDALX = PBALX 
			 -- WHERE PBTYP = P_TYPE AND TRIM ( PBIPB ) = P_CODEOFFRE AND PBALX = P_VERSION ; 
	OPEN CURSORVOLETSBLOCS ; 
	END P1  ;



