CREATE OR REPLACE PROCEDURE SP_MAPFORMULEGARANTIE ( 
	IN P_CODECONTRAT CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_DATENOW INTEGER ) 
	LANGUAGE SQL 
	SPECIFIC SP_MAPFORMULEGARANTIE
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_MODELEID INTEGER DEFAULT 0 ; 
	DECLARE V_NEWID INTEGER DEFAULT 0 ; 
	DECLARE V_TYPO CHAR ( 3 ) DEFAULT '' ; 
	DECLARE V_DATEAPP INTEGER DEFAULT 0 ; 
	DECLARE V_NEWMODELEID INTEGER DEFAULT 0 ; 
	DECLARE V_NEWMODELE CHAR ( 10 ) DEFAULT '' ; 
	 
	DECLARE V_NEWGARSEQ INTEGER DEFAULT 0 ; 
	DECLARE V_NEWGARMASTER INTEGER DEFAULT 0 ; 
	DECLARE V_NEWGARNIV1 INTEGER DEFAULT 0 ; 
	DECLARE V_NEWGARCAR CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NEWGARNAT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NEWGARINA CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NEWGARCNA CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NEWGARTAX CHAR ( 2 ) DEFAULT '' ; 
	DECLARE V_NEWGARTRI CHAR ( 12 ) DEFAULT '' ; 
	DECLARE V_NEWGARPRP CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NEWGARTCD CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NEWGARNTM CHAR ( 1 ) DEFAULT '' ;	 
  
	DECLARE V_MODELEDATEAPPLI INTEGER DEFAULT 0 ; 
	DECLARE V_DATEEFFET INTEGER DEFAULT 0 ; 
	DECLARE V_DATECREATION INTEGER DEFAULT 0 ; 
  
	SET P_CODECONTRAT = LPAD ( RTRIM ( P_CODECONTRAT ) , 9 , ' ' ) ; 

	SET V_MODELEDATEAPPLI = 0 ; 
	SET V_DATEEFFET = 0 ; 
	SET V_DATECREATION = 0 ; 
	 
	SELECT IFNULL ( Y2 . PBSAA * 10000 + Y2 . PBSAM * 100 + Y2 . PBSAJ , 0 ) , Y1 . PBEFA * 10000 + Y1 . PBEFM * 100 + Y1 . PBEFJ 
		INTO V_DATECREATION , V_DATEEFFET 
		FROM YPOBASE Y1 
			LEFT JOIN YPOBASE Y2 ON Y1 . PBOFF = Y2 . PBIPB AND Y1 . PBOFV = Y2 . PBALX AND Y2 . PBTYP = 'O' 
		WHERE Y1 . PBIPB = P_CODECONTRAT AND Y1 . PBALX = P_VERSION AND Y1 . PBTYP = P_TYPE ; 
		 
	IF ( V_DATECREATION > 0 ) THEN 
		SET V_MODELEDATEAPPLI = V_DATECREATION ; 
	ELSE 
		SET V_MODELEDATEAPPLI = V_DATEEFFET ; 
	END IF ; 
  
	FOR LOOP_GAR AS FREE_LIST CURSOR FOR 
		SELECT KDEID GARID , KDEGARAN GARANTIE , KDESEQ GARSEQ , KDENIVEAU GARNIV , KDESEM GARMASTER , KDESE1 GARNIV1 , 
			KDCMODELE MODELEGAR , KDCID OPTDID , KDCKARID MODELID 
		FROM KPGARAN 
			INNER JOIN KPOPTD ON KDCID = KDEKDCID 
		WHERE KDEIPB = P_CODECONTRAT AND KDEALX = P_VERSION AND KDETYP = P_TYPE 
	DO 
		SET V_MODELEID = 0 ; 
		SET V_TYPO = '' ; 
		SET V_DATEAPP = 0 ; 
		 
		SELECT KARKAQID , KARTYPO , KARDATEAPP INTO V_MODELEID , V_TYPO , V_DATEAPP FROM KCATMODELE WHERE KARID = MODELID ; 
		 
		SET V_NEWMODELEID = 0 ; 
		SET V_NEWMODELE = '' ; 
		 
		SELECT KARID , KARMODELE INTO V_NEWMODELEID , V_NEWMODELE 
			FROM KCATMODELE 
			WHERE KARKAQID = V_MODELEID AND TRIM ( KARTYPO ) = TRIM ( V_TYPO ) AND KARDATEAPP > V_DATEAPP AND KARDATEAPP <= V_MODELEDATEAPPLI 
			ORDER BY KARDATEAPP DESC FETCH FIRST 1 ROWS ONLY ; 
	 
		IF ( V_NEWMODELEID > 0 ) THEN 
			SET V_NEWGARSEQ = 0 ; 
			SET V_NEWGARMASTER = 0 ; 
			SET V_NEWGARNIV1 = 0 ; 
			SET V_NEWGARCAR = '' ; 
			SET V_NEWGARNAT = '' ; 
			SET V_NEWGARINA = '' ; 
			SET V_NEWGARCNA = '' ; 
			SET V_NEWGARTAX = '' ; 
			SET V_NEWGARTRI = '' ; 
			SET V_NEWGARPRP = '' ; 
			SET V_NEWGARTCD = '' ; 
			SET V_NEWGARNTM = '' ;		 
		 
			SELECT C2SEQ , C2SEM , C2SE1 , C2CAR , C2NAT , C2INA , C2CNA , C2TAX , 
				C2TRI , C2PRP , C2TCD , C2NTM 
			INTO V_NEWGARSEQ , V_NEWGARMASTER , V_NEWGARNIV1 , V_NEWGARCAR , V_NEWGARNAT , V_NEWGARINA , V_NEWGARCNA , V_NEWGARTAX , 
				V_NEWGARTRI , V_NEWGARPRP , V_NEWGARTCD , V_NEWGARNTM 
			FROM ZALBINKMOD . YPLTGAR WHERE TRIM ( C2MGA ) = TRIM ( V_NEWMODELE ) AND TRIM ( C2GAR ) = TRIM ( GARANTIE ) AND C2NIV = GARNIV ; 
		 
			IF ( V_NEWGARSEQ > 0 ) THEN 
				UPDATE KPGARAN 
					SET KDESEQ = V_NEWGARSEQ , KDESEM = V_NEWGARMASTER , KDESE1 = V_NEWGARNIV1 , KDECAR = V_NEWGARCAR , KDENAT = V_NEWGARNAT , 
						KDEINA = V_NEWGARINA , KDECATNAT = V_NEWGARCNA , KDETAXCOD = V_NEWGARTAX , KDETRI = V_NEWGARTRI , 
						KDEPRP = V_NEWGARPRP , KDETCD = V_NEWGARTCD , KDEPNTM = V_NEWGARNTM 
				WHERE KDEID = GARID ; 
				UPDATE KPGARAH 
					SET KDESEQ = V_NEWGARSEQ , KDESEM = V_NEWGARMASTER , KDESE1 = V_NEWGARNIV1 , KDECAR = V_NEWGARCAR , KDENAT = V_NEWGARNAT , 
						KDEINA = V_NEWGARINA , KDECATNAT = V_NEWGARCNA , KDETAXCOD = V_NEWGARTAX , KDETRI = V_NEWGARTRI , 
						KDEPRP = V_NEWGARPRP , KDETCD = V_NEWGARTCD , KDEPNTM = V_NEWGARNTM 
				WHERE KDEID = GARID ; 
				UPDATE KPOPTD 
					SET KDCMODELE = V_NEWMODELE , KDCKARID = V_NEWMODELEID 
				WHERE KDCID = OPTDID ; 
			ELSE 
				DELETE FROM KPGARAN WHERE KDEID = GARID ; 
	CALL SP_NCHRONO ( 'SessionKheoDec' , V_NEWID ) ; 
	INSERT INTO KEDILOG 
( IDSESSION , TYP , IPB , ALX , STATUT , METHODE , DATEHEURE , INFO ) 
VALUES 
( V_NEWID , P_TYPE , P_CODECONTRAT , P_VERSION , 'delgar' , 'SP_MAPFORMULEGAR' , '' , 'TRACEDEL' ) ; 
			END IF ; 
		END IF ; 
	 
	END FOR ; 
	 
END P1  ; 
  

  

