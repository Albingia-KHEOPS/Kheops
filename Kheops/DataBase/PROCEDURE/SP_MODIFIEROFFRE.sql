
CREATE OR REPLACE PROCEDURE SP_MODIFIEROFFRE ( 
	IN P_CODE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_REFERENCE CHAR(40) , 
	IN P_MOTCLE1 CHAR(10) , 
	IN P_MOTCLE2 CHAR(10) , 
	IN P_MOTCLE3 CHAR(10) , 
	IN P_CODEDEVISE CHAR(3) , 
	IN P_PERIODICITE CHAR(1) , 
	IN P_ECHEANCEJOUR INTEGER , 
	IN P_ECHEANCEMOIS INTEGER , 
	IN P_EFFETJOUR INTEGER , 
	IN P_EFFETMOIS INTEGER , 
	IN P_EFFETANNEE INTEGER , 
	IN P_EFFETHEURE INTEGER , 
	IN P_FINEFFETJOUR INTEGER , 
	IN P_FINEFFETMOIS INTEGER , 
	IN P_FINEFFETANNEE INTEGER , 
	IN P_FINEFFETHEURE INTEGER , 
	IN P_DUREE INTEGER , 
	IN P_UNITEDUREE CHAR(1) , 
	IN P_NATURE CHAR(1) , 
	IN P_APERITION DECIMAL(5, 2) , 
	IN P_COUVERT DECIMAL(3, 0) , 
	IN P_SOUSCRIPTEUR CHAR(10) , 
	IN P_GESTIONNAIRE CHAR(10) , 
	IN P_REGIMETAXE CHAR(1) , 
	IN P_IDASSURE INTEGER , 
	IN P_COURTIER INTEGER , 
	IN P_COURTIERAPP INTEGER , 
	IN P_REFCOURTIER CHAR(25) , 
	IN P_INTERLOCUTEUR INTEGER , 
	IN P_TYPEINTERLOCUTEUR CHAR(1) , 
	IN P_BRANCHE CHAR(2) , 
	IN P_ANNEESAISIE INTEGER , 
	IN P_MOISSAISIE INTEGER , 
	IN P_JOURSAISIE INTEGER , 
	IN P_HEURESAISIE INTEGER , 
	IN P_ETAT CHAR(1) , 
	IN P_TYPETRAITEMENT CHAR(5) , 
	IN P_CIBLE CHAR(10) , 
	IN P_LIENKPINVEN INTEGER , 
	IN P_LIENKPDESI INTEGER , 
	IN P_LIENKPOBSV INTEGER , 
	IN P_OBSERVATION CHAR(5000) , 
	IN P_OBSVCHRONO INTEGER , 
	IN P_CODEINDICE CHAR(3) , 
	IN P_VALINDICEORIGINE DECIMAL(7, 2) , 
	IN P_VALINDICEACTUALISE DECIMAL(7, 2) , 
	IN P_INTERCALCOURTIER CHAR(1) , 
	IN P_APPLICATNAT CHAR(1) , 
	IN P_IDAPERITEUR CHAR(6) , 
	IN P_POURCENTAPERITION DECIMAL(5, 2) , 
	IN P_TAUXFRAISAPERITION DECIMAL(5, 2) , 
	IN P_AVENANT DECIMAL(3, 0) , 
	IN P_TYPEACTEGESTION CHAR(1) , 
	IN P_TODAYYEAR INTEGER , 
	IN P_TODAYMONTH INTEGER , 
	IN P_TODAYDAY INTEGER , 
	IN P_TODAYHOUR INTEGER , 
	IN P_USERTODAY CHAR(10) , 
	IN P_DATESTATISTIQUE INTEGER , 
	IN P_LTA CHAR(1) , 
	IN P_ANTECEDENT CHAR(10) , 
	IN P_DESCRIPTION CHAR(5000) , 
	IN P_VALIDITEOFFRE INTEGER , 
	IN P_DATEPROJET INTEGER , 
	IN P_RELANCE CHAR(1) , 
	IN P_RELANCEVALEUR INTEGER , 
	IN P_PREAVISRESIL INTEGER) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC  SP_MODIFIEROFFRE
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	 
	DECLARE NBROW INTEGER DEFAULT 0 ; 
    DECLARE NBROW_KPDESI INTEGER DEFAULT 0 ; 
	DECLARE V_SOUSBRANCHE CHAR ( 3 ) DEFAULT '' ; 
	DECLARE V_CATEGORIE CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_JDINA CHAR ( 1 ) DEFAULT 'N' ; 
	DECLARE V_INDVAL DECIMAL ( 7 , 2 ) DEFAULT 0 ; 
	DECLARE V_TPCN1 INTEGER DEFAULT 0 ; 
	DECLARE V_JDDPV DECIMAL ( 2 , 0 ) DEFAULT 0 ; 
	DECLARE V_KAAAND INTEGER DEFAULT 0 ; 
	 
	SET P_CODE = LPAD ( TRIM ( P_CODE ) , 9 , ' ' ) ; 
	 
	IF ( P_BRANCHE IS NOT NULL AND TRIM ( P_BRANCHE ) <> '' AND P_CIBLE IS NOT NULL AND TRIM ( P_CIBLE ) <> '' ) THEN 
	 
		SELECT KAISBR , KAICAT INTO V_SOUSBRANCHE , V_CATEGORIE 
		FROM KCIBLEF 
		WHERE KAIBRA = P_BRANCHE AND KAICIBLE = P_CIBLE ; 
		 
	END IF ; 
	 
	 --YPOBASE 
	SELECT COUNT ( * ) INTO NBROW 
	FROM YPOBASE 
	WHERE	PBIPB = P_CODE 
			AND PBALX = P_VERSION 
			AND PBTYP = P_TYPE ; 
	 
	IF ( NBROW = 1 ) THEN 
	 
	 --Mise à jour YPOBASE 
		UPDATE YPOBASE 
			SET PBREF = P_REFERENCE 
				, PBMO1 = P_MOTCLE1 
				, PBMO2 = P_MOTCLE2 
				, PBMO3 = P_MOTCLE3 
				, PBDEV = P_CODEDEVISE 
				, PBPER = P_PERIODICITE 
				, PBECJ = P_ECHEANCEJOUR 
				, PBECM = P_ECHEANCEMOIS 
				, PBEFJ = P_EFFETJOUR 
				, PBEFM = P_EFFETMOIS 
				, PBEFA = P_EFFETANNEE 
				, PBEFH = P_EFFETHEURE 
				, PBFEJ = P_FINEFFETJOUR 
				, PBFEM = P_FINEFFETMOIS 
				, PBFEA = P_FINEFFETANNEE 
				, PBFEH = P_FINEFFETHEURE 
				, PBCTD = P_DUREE 
				, PBCTU = P_UNITEDUREE 
				, PBNPL = P_NATURE 
				, PBAPP = P_APERITION 
				, PBPCV = P_COUVERT 
				, PBSOU = P_SOUSCRIPTEUR 
				, PBGES = P_GESTIONNAIRE 
				, PBMJU = P_USERTODAY 
				, PBMJA = P_TODAYYEAR 
				, PBMJM = P_TODAYMONTH 
				, PBMJJ = P_TODAYDAY 
				, PBRGT = P_REGIMETAXE 
				, PBAPR = P_IDAPERITEUR 
				, PBANT = P_ANTECEDENT 
				, PBDUR = P_VALIDITEOFFRE 
				, PBREL = P_RELANCE 
				, PBRLD = P_RELANCEVALEUR 
		WHERE PBIPB = P_CODE 
			AND PBALX = P_VERSION 
			AND PBTYP = P_TYPE ; 
	 
	ELSE 
	 
	 --Insertion YPOBASE 
	INSERT INTO YPOBASE 
				( PBMO1 , PBMO2 , PBMO3 , 
				PBANT , PBDUR , PBREL , PBRLD , 
				PBIAS , PBICT , PBCTA , 
				PBOCT , 
				PBIN5 , PBTIL , 
				PBBRA , PBTBR , 
				PBSAA , PBSAM , PBSAJ , PBSAH , 
				PBMJU , 
				PBMJA , PBMJM , PBMJJ , 
				PBIPB , PBALX , PBTYP , PBETA , 
				PBSTA , PBSTM , PBSTJ , 
				PBCRA , PBCRM , PBCRJ , 
				PBDEA , PBDEM , PBDEJ , 
				PBDEU , PBTTR , PBCRU , PBSOU , PBGES , PBREF , 
				PBSBR , PBCAT , PBAPR ) 
	VALUES 
	( 
				P_MOTCLE1 , P_MOTCLE2 , P_MOTCLE3 , 
				P_ANTECEDENT , P_VALIDITEOFFRE , P_RELANCE , P_RELANCEVALEUR , 
				P_IDASSURE , P_COURTIER , P_COURTIERAPP , 
				P_REFCOURTIER , 
				P_INTERLOCUTEUR , P_TYPEINTERLOCUTEUR , 
				P_BRANCHE , P_BRANCHE , 
				P_ANNEESAISIE , P_MOISSAISIE , P_JOURSAISIE , P_HEURESAISIE , 
				P_USERTODAY , 
				P_TODAYYEAR , P_TODAYMONTH , P_TODAYDAY , 
				P_CODE , P_VERSION , P_TYPE , P_ETAT , 
				P_TODAYYEAR , P_TODAYMONTH , P_TODAYDAY , 
				P_TODAYYEAR , P_TODAYMONTH , P_TODAYDAY , 
				P_TODAYYEAR , P_TODAYMONTH , P_TODAYDAY , 
				'SPRINKS' , P_TYPETRAITEMENT , P_USERTODAY , P_SOUSCRIPTEUR , P_GESTIONNAIRE , P_REFERENCE , 
				V_SOUSBRANCHE , V_CATEGORIE , P_IDAPERITEUR 
	) ; 
			 
	END IF ; 
	 
  
--KPDESI 
	SELECT KAAAND INTO V_KAAAND 
	   FROM KPENT 
    WHERE KAATYP = P_TYPE AND KAAIPB = P_CODE AND KAAALX = P_VERSION ; 


	SELECT COUNT(*) INTO NBROW_KPDESI
		FROM KPDESI 
	  WHERE KADCHR = V_KAAAND;
  
IF ( V_KAAAND <> 0 AND NBROW_KPDESI > 0 ) THEN 
		UPDATE KPDESI 
		  SET KADDESI = P_DESCRIPTION 
		WHERE KADCHR = V_KAAAND ; 
ELSE 
	IF (P_DESCRIPTION != '') THEN
		CALL SP_NCHRONO ('KADCHR', V_KAAAND);

		INSERT INTO KPDESI (KADCHR, KADTYP, KADIPB, KADALX, KADDESI) 
		VALUES (V_KAAAND, P_TYPE, P_CODE, P_VERSION , P_DESCRIPTION);
	
		UPDATE KPENT 
			SET KAAAND = V_KAAAND
		WHERE KAATYP = P_TYPE AND KAAIPB=P_CODE AND KAAALX=P_VERSION ; 
	END IF;
END IF ; 
  
  
  
	 
	 --KPOBJ 
	SELECT COUNT ( * ) INTO NBROW 
	FROM KPOBJ 
	WHERE KACIPB = P_CODE 
	AND KACALX = P_VERSION 
	AND KACTYP = P_TYPE ; 
	 
	IF ( NBROW = 0 ) THEN 
	 
		INSERT INTO KPOBJ 
		( KACIPB , KACALX , KACTYP , KACRSQ , KACOBJ , KACCIBLE , KACINVEN , KACDESI , KACOBSV ) 
		VALUES 
		( 
		P_CODE , P_VERSION , P_TYPE , 1 , 1 , P_CIBLE , P_LIENKPINVEN , P_LIENKPDESI , P_LIENKPOBSV 
		) ; 
		 
	END IF ; 
	 
	 --KPOBSV 
	SELECT COUNT ( * ) INTO NBROW 
	FROM KPOBSV 
	WHERE KAJIPB = P_CODE 
	AND KAJALX = P_VERSION 
	AND KAJTYP = P_TYPE 
	AND KAJTYPOBS = 'GENERALE' ; 
	 
	IF ( NBROW = 1 ) THEN 
		 
			UPDATE KPOBSV 
				SET KAJOBSV = TRIM ( P_OBSERVATION ) 
			WHERE KAJIPB = P_CODE 
			AND KAJALX = P_VERSION 
			AND KAJTYP = P_TYPE 
			AND KAJTYPOBS = 'GENERALE' ; 
		 
	ELSE 
	 
			INSERT INTO KPOBSV 
			( KAJIPB , KAJALX , KAJCHR , KAJTYP , KAJTYPOBS , KAJOBSV ) 
			VALUES 
			( P_CODE , P_VERSION , P_OBSVCHRONO , P_TYPE , 'GENERALE' , TRIM ( P_OBSERVATION ) ) ; 
			 
	END IF ; 
	 
	--KPENT 
	SELECT COUNT ( * ) INTO NBROW 
	FROM KPENT 
	WHERE KAAIPB = P_CODE 
	AND KAAALX = P_VERSION 
	AND KAATYP = P_TYPE ; 
			 
	IF ( NBROW = 1 ) THEN 
				 
		UPDATE KPENT 
			SET KAAOBSV = P_OBSVCHRONO , 
			KAADPRJ = P_DATEPROJET 
		WHERE KAAIPB = P_CODE AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
							 
	ELSE 
				 
		INSERT INTO KPENT ( KAAIPB , KAAALX , KAATYP , KAABONI , KAABONT , KAAANTI , KAADESI , KAAOBSV , KAACIBLE , KAADPRJ ) 
		VALUES 
		( P_CODE , P_VERSION , P_TYPE , '' , 0 , '' , 0 , P_OBSVCHRONO , P_CIBLE , P_DATEPROJET ) ; 
			 
	END IF ; 

	 --YPRTENT 
	SELECT COUNT ( * ) INTO NBROW 
	FROM YPRTENT 
	WHERE JDIPB = P_CODE 
	AND JDALX = P_VERSION ; 
	 
	IF ( P_CODEINDICE IS NOT NULL AND P_CODEINDICE <> '' ) THEN 
		SET V_JDINA = 'O' ; 
	END IF ;	 
	IF ( NBROW != 0 ) THEN 
		/* SAB 14/02/2017 : bug 2291    */ 
		--SELECT TPCN1 INTO V_TPCN1 FROM YYYYPAR WHERE TFAM = 'PBPER' AND TCON = 'PRODU' AND TCOD = P_PERIODICITE ; 
		--SELECT JDDPV INTO V_JDDPV FROM YPRTENT WHERE JDIPB = P_CODE AND JDALX = P_VERSION ; 
		--IF ( ( V_JDDPV = 0 OR V_JDDPV IS NULL ) AND ( ( P_PERIODICITE <> 'U' ) OR ( P_PERIODICITE <> 'E' ) ) ) THEN 
		/*UPDATE YPRTENT SET JDDPV = V_TPCN1 */ 
			UPDATE YPRTENT SET JDDPV = P_PREAVISRESIL 
			WHERE JDIPB = P_CODE AND JDALX = P_VERSION ; 
		--END IF ; 
	END IF ; 
  
	IF ( NBROW = 1 ) THEN 
		SET V_INDVAL = 0 ; 
		SELECT JDIVO INTO V_INDVAL FROM YPRTENT WHERE JDIPB = P_CODE AND JDALX = P_VERSION ; 
				 
		UPDATE YPRTENT 
			SET JDIND = P_CODEINDICE 
			, JDIVO = P_VALINDICEORIGINE 
			, JDIVA = P_VALINDICEACTUALISE 
			, JDITC = P_INTERCALCOURTIER 
			, JDCNA = P_APPLICATNAT 
			, JDDPJ = P_EFFETJOUR 
			, JDDPM = P_EFFETMOIS 
			, JDDPA = P_EFFETANNEE 
			, JDFPJ = P_FINEFFETJOUR 
			, JDFPM = P_FINEFFETMOIS 
			, JDFPA = P_FINEFFETANNEE 
			, JDINA = V_JDINA 
			, JDIVW = 0 
			, JDLTA = P_LTA 
		WHERE JDIPB = P_CODE 
			AND JDALX = P_VERSION ; 
	 
		IF ( V_INDVAL != P_VALINDICEORIGINE ) THEN 
			UPDATE KPOPT SET KDBIVO = P_VALINDICEORIGINE , KDBIVA = P_VALINDICEORIGINE WHERE KDBIPB = P_CODE AND KDBALX = P_VERSION AND KDBTYP = P_TYPE ; 
		END IF ; 
	 
	ELSE 
		 
		INSERT INTO YPRTENT 
			( JDIPB , JDALX , JDDRQ , JDNBR , JDIND , JDIVO , JDIVA , JDITC , JDSHT , 
				JDDPJ , JDDPM , JDDPA , JDFPJ , JDFPM , JDFPA , JDINA , JDIVW , JDLTA ) 
		VALUES 
			( P_CODE , P_VERSION , 1 , 1 , P_CODEINDICE , P_VALINDICEORIGINE , P_VALINDICEACTUALISE , P_INTERCALCOURTIER , 'H' , 
				P_EFFETJOUR , P_EFFETMOIS , P_EFFETANNEE , P_FINEFFETJOUR , P_FINEFFETMOIS , P_FINEFFETANNEE , V_JDINA , 0 , P_LTA ) ; 
	 
	END IF ; 
	 
	 --YPRTOBJ 
	UPDATE YPRTOBJ 
	SET JGIVO = P_VALINDICEORIGINE , 
	JGIVA = P_VALINDICEACTUALISE , 
	JGIVW = 0 
	WHERE JGIPB = P_CODE AND JGALX = P_VERSION ; 
	 
	 --KPOPT 
	UPDATE KPOPT 
	SET KDBIVO = P_VALINDICEORIGINE , 
	KDBIVA = P_VALINDICEACTUALISE , 
	KDBIVW = 0 
	WHERE KDBIPB = P_CODE AND KDBALX = P_VERSION AND KDBTYP = P_TYPE ; 
	 
	 --KPENT 
		SELECT COUNT ( * ) INTO NBROW 
	FROM KPENT 
	WHERE KAAIPB = P_CODE 
	AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
	 
	IF ( NBROW = 1 ) THEN	 
		UPDATE KPENT SET KAADSTA = P_DATESTATISTIQUE		 
		WHERE KAAIPB = P_CODE 
		AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
	END IF ; 
	 
	 --YPOCOAS 
	IF ( P_NATURE = 'A' OR P_NATURE = 'E' ) THEN	 
		DELETE FROM YPOCOAS 
		WHERE	PHIPB = P_CODE 
				AND PHALX = P_VERSION 
				AND PHTYP = P_TYPE 
				AND PHTAP = 'A' ; 
	ELSE 
		IF ( P_NATURE = 'C' OR P_NATURE = 'D' ) THEN 
			DELETE FROM YPOCOAS 
			WHERE	PHIPB = P_CODE 
					AND PHALX = P_VERSION 
					AND PHTYP = P_TYPE ; 
					 
			INSERT INTO YPOCOAS 
			( PHIPB , PHALX , PHTYP , PHTAP , PHCIE , PHAPP , PHTXF ) 
			VALUES 
			( P_CODE , P_VERSION , P_TYPE , 'A' , P_IDAPERITEUR , P_POURCENTAPERITION , P_TAUXFRAISAPERITION ) ; 
		ELSE 
			DELETE FROM YPOCOAS 
			WHERE	PHIPB = P_CODE 
					AND PHALX = P_VERSION 
					AND PHTYP = P_TYPE ;		 
		END IF ; 
	END IF ; 
	 
	 --Acte de gestion 
	 --YPOTRAC 
	INSERT INTO YPOTRAC ( PYTYP , PYIPB , PYALX , PYAVN , PYTTR , PYVAG , PYTRA , PYTRM , PYTRJ , PYTRH , PYLIB , PYINF , 
PYSDA , PYSDM , PYSDJ , PYSFA , PYSFM , PYSFJ , PYMJU , PYMJA , PYMJM , PYMJJ , PYMJH ) 
	VALUES 
	( P_TYPE , P_CODE , P_VERSION , P_AVENANT , P_TYPETRAITEMENT , P_TYPEACTEGESTION , P_TODAYYEAR , 
	P_TODAYMONTH , P_TODAYDAY , P_TODAYHOUR , '' , 'I' , 0 , 0 , 0 , 0 , 0 , 0 , P_USERTODAY , 
	P_TODAYYEAR , P_TODAYMONTH , P_TODAYDAY , P_TODAYHOUR ) ; 
						 
						 
END P1  ; 
  
