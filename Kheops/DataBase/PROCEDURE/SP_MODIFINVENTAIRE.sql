CREATE PROCEDURE SP_MODIFINVENTAIRE ( 
	IN P_IDINVENTAIRE INTEGER , 
	IN P_CODEINVENTAIRE CHAR(20) , 
	IN P_DESCRIPTION CHAR(40) , 
	IN P_KAGTMAP INTEGER , 
	IN P_CODEFILTRE INTEGER , 
	OUT P_RETURN INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_MODIFINVENTAIRE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_NBLIGN INTEGER DEFAULT 0 ; 
	DECLARE V_NEWID INTEGER DEFAULT 0 ; 
	 
	DECLARE CURSORINVENTAIRE CURSOR FOR SELECT KAGID GUIDID , 
	KAGTYINV CODE , 
	KAGDESC LIBELLE , 
	KAGTMAP KAGTMAP , 
	KAGKGGID CODEFILTRE 
	FROM KINVTYP 
	ORDER BY KAGTYINV ; 
  
	SET V_NBLIGN = 0 ; 
	SET V_NEWID = 0 ; 
  
	SELECT COUNT ( * ) INTO V_NBLIGN FROM KINVTYP WHERE KAGID = P_IDINVENTAIRE ; 
	 
	IF ( P_IDINVENTAIRE = 0 ) THEN 
		CALL SP_NCHRONO ( 'KAGID' , V_NEWID ) ; 
		INSERT INTO KINVTYP 
		( KAGID , KAGTYINV , KAGDESC , KAGTMAP , KAGKGGID ) 
		VALUES 
		( V_NEWID , P_CODEINVENTAIRE , P_DESCRIPTION , P_KAGTMAP , P_CODEFILTRE ) ; 
		SET P_RETURN = 1 ; 
	ELSE 
		IF ( V_NBLIGN > 0 ) THEN 
		UPDATE KINVTYP 
SET KAGTYINV = P_CODEINVENTAIRE , 
KAGDESC = P_DESCRIPTION , 
KAGTMAP = P_KAGTMAP , 
KAGKGGID = P_CODEFILTRE 
WHERE KAGID = P_IDINVENTAIRE ; 
		SET P_RETURN = 1 ; 
		ELSE 
		SET P_RETURN = 0 ; 
		END IF ; 
	END IF ; 
	 
	OPEN CURSORINVENTAIRE ;	 
  
END P1  ; 
  

  

