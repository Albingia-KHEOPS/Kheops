CREATE PROCEDURE SP_NCHRONO ( 
	IN P_CHAMP CHAR(40) , 
	OUT P_SEQ INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_NCHRONO 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	 
	DECLARE V_NUMCHR CHAR ( 40 ) DEFAULT '' ; 
	DECLARE V_RET CHAR ( 3 ) DEFAULT '' ; 
	 
	CALL SP_PGMCHR ( P_CHAMP , 'INC' , V_NUMCHR , V_RET ) ; 
	 
	SET P_SEQ = 0 ; 
	IF ( V_RET = '' ) THEN 
		SET P_SEQ = CAST ( V_NUMCHR AS INTEGER ) ; 
	END IF ; 
  
-- DECLARE V_CHRONO INTEGER DEFAULT 0 ; 
-- DECLARE V_NB INTEGER DEFAULT 0 ; 
-- SET P_SEQ = 0 ; 
-- SELECT IFNULL ( KATNUU , 0 ) INTO V_NB FROM KCHRONO WHERE KATCLE = P_CHAMP ; 
-- SET V_NB = V_NB + 1 ; 
-- IF ( V_NB = 1 ) THEN 
-- INSERT INTO KCHRONO ( KATCLE , KATNUD , KATNUF , KATNUU , KATNUA , KATOBS ) 
-- VALUES ( P_CHAMP , 1 , 9999999 , 1 , 9999000 , 'Cée par la fonction SQL SF_GETID' ) ; 
-- ELSE 
-- UPDATE KCHRONO 
-- SET KATNUU = V_NB 
-- WHERE KATCLE = P_CHAMP ; 
-- END IF ; 
-- SELECT KATNUU INTO V_NB 
-- FROM KCHRONO 
-- WHERE KATCLE = P_CHAMP ; 
-- SET P_SEQ = V_NB ; 
END P1  ;

