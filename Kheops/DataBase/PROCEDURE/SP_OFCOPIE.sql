CREATE OR REPLACE PROCEDURE  SP_OFCOPIE ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_COPYCODEOFFRE CHAR(9) , 
	IN P_COPYVERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_DATESYSTEME CHAR(8) , 
	IN P_USER CHAR(15) , 
	IN P_TRAITEMENT CHAR(1) , 
	IN P_MODECOPY CHAR(7) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_OFCOPIE
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	DBGVIEW = *SOURCE , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	DECLARE V_DEVISE CHAR ( 3 ) DEFAULT '' ; 
	DECLARE V_PERIODE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_NEWCODEINVEN INTEGER DEFAULT 0 ; 
	DECLARE V_ANTEC CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_VALIDITE INTEGER DEFAULT 0 ; 
	DECLARE V_RELANCE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_RELANCEVAL INTEGER DEFAULT 0 ; 
	DECLARE V_OBSV_DESTINATION INTEGER DEFAULT 0 ; 
	DECLARE V_REGIMETAXE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_TYPEBRANCHE CHAR ( 2 ) DEFAULT '' ; 
	DECLARE V_NATUREPOLICE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_STATUTKHEOPS CHAR ( 3 ) DEFAULT '' ; 
	DECLARE V_YEAREFFET INTEGER DEFAULT 0 ; 
	DECLARE V_MONTHEFFET INTEGER DEFAULT 0 ; 
	DECLARE V_DAYEFFET INTEGER DEFAULT 0 ; 
	DECLARE V_TYPEFRAIS CHAR ( 1 ) DEFAULT '' ; 
	 
	DECLARE V_TCENC CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_TCYEN CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_JDENC CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CODEENC CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_IDCOMMENT INTEGER DEFAULT 0 ; 
	DECLARE V_KAAASS CHAR ( 1 ) DEFAULT '' ; 
	 
	DECLARE V_SOUSBRA CHAR ( 3 ) DEFAULT '' ; 
	DECLARE V_CATEGO CHAR ( 5 ) DEFAULT '' ; 
	 
	 
	DECLARE V_MONTFRAISACC DECIMAL ( 7 , 0 ) DEFAULT 0 ; 
	DECLARE V_COPYFRAISACC DECIMAL ( 7 , 0 ) DEFAULT 0 ; 
	
	DECLARE V_APPTAXEATT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_APPATT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_TXCOMCATNAT DECIMAL ( 5 , 3 ) DEFAULT 0 ; 
	DECLARE V_INDEXATION CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CODEINDICE CHAR ( 3 ) DEFAULT '' ; 
	DECLARE V_INDEXCAPITAUX CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_INDEXFRANCHISE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_INDEXLCI CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_INDEXPRIME CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_SOUMISCATNAT CHAR ( 1 ) DEFAULT '' ; 
	 
	DECLARE V_BRANCHE CHAR ( 2 ) DEFAULT '' ; 
	DECLARE V_CIBLE CHAR ( 10 ) DEFAULT '' ;	 
	
	SET P_CODEOFFRE = LPAD( P_CODEOFFRE , 9 , ' ');
	SET P_COPYCODEOFFRE = LPAD( P_COPYCODEOFFRE , 9 , ' ');
	 
		 
	 --Valeurs possibles dans P_TRAITEMENT : C (Copie dans une offre existante) ou N (Copie dans une nouvelle offre) 
	DELETE FROM YPRTRSQ WHERE JEIPB = P_CODEOFFRE AND JEALX = P_VERSION ; 
	 
	FOR LOOP_RSQ AS FREE_LIST CURSOR FOR 
		SELECT KABDESI DESIID , KABOBSV OBSVID FROM KPRSQ WHERE KABIPB = P_CODEOFFRE AND KABALX = P_VERSION AND KABTYP = P_TYPE 
		DO 
			IF ( DESIID > 0 ) THEN 
				DELETE FROM KPDESI WHERE KADCHR = DESIID ; 
			END IF ; 
			IF ( OBSVID > 0 ) THEN 
				DELETE FROM KPOBSV WHERE KAJCHR = OBSVID ; 
			END IF ; 
	END FOR ; 
	 
	DELETE FROM KPRSQ WHERE KABIPB = P_CODEOFFRE AND KABALX = P_VERSION AND KABTYP = P_TYPE ; 
	 
	DELETE FROM YPRTOBJ WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION ; 
	 
	FOR LOOP_OBJ AS FREE_LIST CURSOR FOR 
		SELECT KACDESI DESIID , KACOBSV OBSVID FROM KPOBJ WHERE KACIPB = P_CODEOFFRE AND KACALX = P_VERSION AND KACTYP = P_TYPE 
		DO 
			IF ( DESIID > 0 ) THEN 
				DELETE FROM KPDESI WHERE KADCHR = DESIID ; 
			END IF ; 
			IF ( OBSVID > 0 ) THEN 
				DELETE FROM KPOBSV WHERE KAJCHR = OBSVID ; 
			END IF ; 
	END FOR ; 
	 
	DELETE FROM KPOBJ WHERE KACIPB = P_CODEOFFRE AND KACALX = P_VERSION AND KACTYP = P_TYPE ; 
	 
	DELETE FROM KPCOPID WHERE KFLIPB = P_COPYCODEOFFRE AND KFLALX = P_COPYVERSION AND KFLTYP = P_TYPE ; 
	 
	SELECT KAAOBSV , KAAASS INTO V_OBSV_DESTINATION , V_KAAASS FROM KPENT WHERE KAAIPB = P_CODEOFFRE AND KAATYP = P_TYPE AND KAAALX = P_VERSION ; 
	 
	SELECT PBBRA INTO V_BRANCHE FROM YPOBASE WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
	 
	SELECT KAACIBLE INTO V_CIBLE FROM KPENT WHERE KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
		 
	SELECT KAISBR , KAICAT INTO V_SOUSBRA , V_CATEGO FROM KCIBLEF WHERE KAICIBLE = V_CIBLE AND KAIBRA = V_BRANCHE ; 
	 
	SELECT CAAFR , CAATT , CACNC , CAINA , CAIND , CAIXC , CAIXF , CAIXL , CAIXP 
	INTO V_MONTFRAISACC , V_APPTAXEATT , V_TXCOMCATNAT , V_INDEXATION , V_CODEINDICE , V_INDEXCAPITAUX , V_INDEXFRANCHISE , V_INDEXLCI , V_INDEXPRIME 
	FROM YCATEGO WHERE CABRA = V_BRANCHE AND CASBR = V_SOUSBRA AND CACAT = V_CATEGO ; 
  
	IF ( P_TRAITEMENT = 'N' ) THEN 
		IF ( TRIM ( P_MODECOPY ) != 'CNVA' AND TRIM ( P_MODECOPY ) != 'OFFRE' ) THEN 
			DELETE FROM YPRTADR WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION ; 
		END IF ; 
	 
		IF ( TRIM ( P_MODECOPY ) = 'CNVA' ) THEN 
			SELECT TRIM ( TCENC ) , TRIM ( TCYEN ) , TRIM ( JDENC ) INTO V_TCENC , V_TCYEN , V_JDENC 
				FROM YCOURTI 
					INNER JOIN YPOBASE ON TCICT = PBICT 
					INNER JOIN YPRTENT ON PBIPB = JDIPB AND PBALX = JDALX 
				WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
		END IF ; 
		 
	 
		 
		DELETE FROM YPRTENT WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
		DELETE FROM KPENT WHERE KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION ; 
		 
		SELECT JDAFC, JDAFR INTO V_TYPEFRAIS, V_COPYFRAISACC FROM YPRTENT WHERE JDIPB = P_COPYCODEOFFRE AND JDALX = P_COPYVERSION ; 
		 
		IF ( TRIM ( P_MODECOPY ) = 'CNVA' OR V_TYPEFRAIS = 'S' ) THEN	 
			SET V_TYPEFRAIS = 'S';
			IF (TRIM(V_CIBLE) = 'GRCEQCLI' OR TRIM(V_CIBLE) = 'GRCEQSAL' OR TRIM(V_CIBLE) = 'IMACEQ' OR TRIM(V_CIBLE) = 'EQDOM' OR TRIM(V_CIBLE) = 'RCCEQ') THEN
				SET V_TYPEFRAIS = 'P';
				SEt V_MONTFRAISACC = V_COPYFRAISACC;
			END IF;
		 
			 --Si copie de canevas ou type de frais = standard => on ne copie pas les frais standards, ni la prochaine échéance 
			INSERT INTO YPRTENT ( JDIPB , JDALX , JDSHT , JDENC , JDITC , JDVAL , JDVAA , JDVAW , JDVAT , JDVAU , JDVAH , JDDRQ , JDNBR , JDTXL , 
			JDTRR , JDXCM , JDNEX , JDNPA , JDAFC , JDAFR , JDATT , JDCNA , JDCNC , JDINA , JDIND , JDIXC , JDIXF , JDIXL , JDIXP , JDIVO , JDIVA , JDIVW , 
			JDMHT , JDREA , JDREB , JDREH , JDDPV , JDGAU , JDGVL , JDGUN , JDPBN , JDPBS , JDPBR , JDPBT , JDPBC , JDPBP , JDPBA , JDRCG , JDCCG , JDRCS , 
			JDCCS , JDCLV , JDAGM , JDLCV , JDLCA , JDLCW , JDLCU , JDLCE , JDDPA , JDDPM , JDDPJ , JDFPA , JDFPM , JDFPJ , JDPEA , JDPEM , JDPEJ , JDACQ , 
			JDTMC , JDTFO , JDTFT , JDTFF , JDTFP , JDPRO , JDTMI , JDTFM , JDTMA , JDTMG , JDCMC , JDCFO , JDCFT , JDCFH , JDCHT , JDCTT , JDCCP , JDEHH , 
			JDEHC , JDSMP , JDIVX , JDTCR , JDNPG , JDEDI , JDEDN , JDEDA , JDEDM , JDEDJ , JDEHI , JDIAX , JDTED , JDDOO , JDRUA , JDRUM , JDRUJ , JDECG , 
			JDECP , JDAPT , JDAPR , JDAAT , JDAAR , JDACR , JDACV , JDAXT , JDAXC , JDAXF , JDAXM , JDAXG , JDATA , JDATX , JDAUT , JDAUF , 
			JDLTA , JDLTASP , JDLDEB, JDLDEH, JDLFIN, JDLFIH, JDLDUR, JDLDUU ) 
			( SELECT P_CODEOFFRE , P_VERSION , JDSHT , JDENC , JDITC , JDVAL , JDVAA , JDVAW , JDVAT , JDVAU , JDVAH , JDDRQ , JDNBR , JDTXL , 
			JDTRR , JDXCM , JDNEX , JDNPA , V_TYPEFRAIS , V_MONTFRAISACC , V_APPTAXEATT , JDCNA , JDCNC , V_INDEXATION , V_CODEINDICE , V_INDEXCAPITAUX , V_INDEXFRANCHISE , V_INDEXLCI , V_INDEXPRIME , JDIVO , 0 , JDIVW , 
			JDMHT , JDREA , JDREB , JDREH , JDDPV , JDGAU , JDGVL , JDGUN , JDPBN , JDPBS , JDPBR , JDPBT , JDPBC , JDPBP , JDPBA , JDRCG , JDCCG , JDRCS , 
			JDCCS , JDCLV , JDAGM , JDLCV , JDLCA , JDLCW , JDLCU , JDLCE , JDDPA , JDDPM , JDDPJ , JDFPA , JDFPM , JDFPJ , 0 , 0 , 0 , JDACQ , 
			JDTMC , JDTFO , JDTFT , JDTFF , JDTFP , JDPRO , JDTMI , JDTFM , JDTMA , JDTMG , JDCMC , JDCFO , JDCFT , JDCFH , JDCHT , JDCTT , JDCCP , JDEHH , 
			JDEHC , JDSMP , JDIVX , JDTCR , JDNPG , JDEDI , JDEDN , JDEDA , JDEDM , JDEDJ , JDEHI , JDIAX , JDTED , JDDOO , JDRUA , JDRUM , JDRUJ , JDECG , 
			JDECP , JDAPT , JDAPR , JDAAT , JDAAR , JDACR , JDACV , JDAXT , JDAXC , JDAXF , JDAXM , JDAXG , JDATA , JDATX , JDAUT , JDAUF , 
			JDLTA , JDLTASP , JDLDEB, JDLDEH, JDLFIN, JDLFIH, JDLDUR, JDLDUU 
			FROM YPRTENT WHERE JDIPB = P_COPYCODEOFFRE AND JDALX = P_COPYVERSION ) ; 
			 
			IF ( TRIM ( P_MODECOPY ) = 'CNVA' ) THEN 
			 
				IF ( TRIM ( V_TCENC ) = 'O' ) THEN 
					SET V_CODEENC = 'D' ; 
				ELSE 
					IF ( TRIM ( V_JDENC ) = '' ) THEN 
						SET V_CODEENC = TRIM ( V_TCYEN ) ; 
					ELSE 
						IF ( TRIM ( P_TYPE ) = 'O' ) THEN 
							SET V_CODEENC = TRIM ( V_TCYEN ) ; 
						END IF ; 
						IF ( TRIM ( P_TYPE ) = 'P' ) THEN 
							IF ( TRIM ( V_TCYEN ) = 'D' ) THEN 
								SET V_CODEENC = TRIM ( V_TCYEN ) ; 
							END IF ; 
						END IF ; 
					END IF ; 
				END IF ; 
				IF ( TRIM ( V_CODEENC ) = '' ) THEN 
					SET V_CODEENC = 'C' ; 
				END IF ; 
				 
				UPDATE YPRTENT SET JDENC = TRIM ( V_CODEENC ) WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
			END IF ; 
				 
		ELSE 
		 
			IF ( TRIM ( P_MODECOPY ) = 'OFFRE' AND P_TRAITEMENT = 'N' ) THEN 
		 
				INSERT INTO YPRTENT ( JDIPB , JDALX , JDSHT , JDENC , JDITC , JDVAL , JDVAA , JDVAW , JDVAT , JDVAU , JDVAH , JDDRQ , JDNBR , JDTXL , 
					JDTRR , JDXCM , JDNEX , JDNPA , JDAFC , JDAFR , JDATT , JDCNA , JDCNC , JDINA , JDIND , JDIXC , JDIXF , JDIXL , JDIXP , JDIVO , JDIVA , JDIVW , 
					JDMHT , JDREA , JDREB , JDREH , JDDPV , JDGAU , JDGVL , JDGUN , JDPBN , JDPBS , JDPBR , JDPBT , JDPBC , JDPBP , JDPBA , JDRCG , JDCCG , JDRCS , 
					JDCCS , JDCLV , JDAGM , JDLCV , JDLCA , JDLCW , JDLCU , JDLCE , JDDPA , JDDPM , JDDPJ , JDFPA , JDFPM , JDFPJ , JDPEA , JDPEM , JDPEJ , JDACQ , 
					JDTMC , JDTFO , JDTFT , JDTFF , JDTFP , JDPRO , JDTMI , JDTFM , JDTMA , JDTMG , JDCMC , JDCFO , JDCFT , JDCFH , JDCHT , JDCTT , JDCCP , JDEHH , 
					JDEHC , JDSMP , JDIVX , JDTCR , JDNPG , JDEDI , JDEDN , JDEDA , JDEDM , JDEDJ , JDEHI , JDIAX , JDTED , JDDOO , JDRUA , JDRUM , JDRUJ , JDECG , 
					JDECP , JDAPT , JDAPR , JDAAT , JDAAR , JDACR , JDACV , JDAXT , JDAXC , JDAXF , JDAXM , JDAXG , JDATA , JDATX , JDAUT , JDAUF , 
					JDLTA , JDLTASP , JDLDEB, JDLDEH, JDLFIN, JDLFIH, JDLDUR, JDLDUU ) 
				( SELECT P_CODEOFFRE , P_VERSION , JDSHT , JDENC , JDITC , JDVAL , JDVAA , JDVAW , JDVAT , JDVAU , JDVAH , JDDRQ , JDNBR , JDTXL , 
					JDTRR , JDXCM , JDNEX , JDNPA , JDAFC , JDAFR , JDATT , JDCNA , JDCNC , JDINA , '' , JDIXC , JDIXF , JDIXL , JDIXP , JDIVO , 0 , JDIVW , 
					JDMHT , JDREA , JDREB , JDREH , JDDPV , JDGAU , JDGVL , JDGUN , JDPBN , JDPBS , JDPBR , JDPBT , JDPBC , JDPBP , JDPBA , JDRCG , JDCCG , JDRCS , 
					JDCCS , JDCLV , JDAGM , JDLCV , JDLCA , JDLCW , JDLCU , JDLCE , JDDPA , JDDPM , JDDPJ , JDFPA , JDFPM , JDFPJ , JDPEA , JDPEM , JDPEJ , JDACQ , 
					JDTMC , JDTFO , JDTFT , 0 , JDTFP , '' , JDTMI , JDTFM , JDTMA , JDTMG , JDCMC , JDCFO , JDCFT , JDCFH , JDCHT , JDCTT , JDCCP , JDEHH , 
					JDEHC , JDSMP , JDIVX , JDTCR , JDNPG , JDEDI , JDEDN , JDEDA , JDEDM , JDEDJ , JDEHI , JDIAX , JDTED , JDDOO , JDRUA , JDRUM , JDRUJ , JDECG , 
					JDECP , JDAPT , JDAPR , JDAAT , JDAAR , JDACR , JDACV , JDAXT , JDAXC , JDAXF , JDAXM , JDAXG , JDATA , JDATX , JDAUT , JDAUF , 
					JDLTA , JDLTASP , JDLDEB, JDLDEH, JDLFIN, JDLFIH, JDLDUR, JDLDUU 
				FROM YPRTENT WHERE JDIPB = P_COPYCODEOFFRE AND JDALX = P_COPYVERSION ) ; 
		 
			ELSE 
			 
				IF ( TRIM ( P_MODECOPY ) = 'OFFRE' AND P_TRAITEMENT = 'C' ) THEN 
	 
					INSERT INTO YPRTENT ( JDIPB , JDALX , JDSHT , JDENC , JDITC , JDVAL , JDVAA , JDVAW , JDVAT , JDVAU , JDVAH , JDDRQ , JDNBR , JDTXL , 
						JDTRR , JDXCM , JDNEX , JDNPA , JDAFC , JDAFR , JDATT , JDCNA , JDCNC , JDINA , JDIND , JDIXC , JDIXF , JDIXL , JDIXP , JDIVO , JDIVA , JDIVW , 
						JDMHT , JDREA , JDREB , JDREH , JDDPV , JDGAU , JDGVL , JDGUN , JDPBN , JDPBS , JDPBR , JDPBT , JDPBC , JDPBP , JDPBA , JDRCG , JDCCG , JDRCS , 
						JDCCS , JDCLV , JDAGM , JDLCV , JDLCA , JDLCW , JDLCU , JDLCE , JDDPA , JDDPM , JDDPJ , JDFPA , JDFPM , JDFPJ , JDPEA , JDPEM , JDPEJ , JDACQ , 
						JDTMC , JDTFO , JDTFT , JDTFF , JDTFP , JDPRO , JDTMI , JDTFM , JDTMA , JDTMG , JDCMC , JDCFO , JDCFT , JDCFH , JDCHT , JDCTT , JDCCP , JDEHH , 
						JDEHC , JDSMP , JDIVX , JDTCR , JDNPG , JDEDI , JDEDN , JDEDA , JDEDM , JDEDJ , JDEHI , JDIAX , JDTED , JDDOO , JDRUA , JDRUM , JDRUJ , JDECG , 
						JDECP , JDAPT , JDAPR , JDAAT , JDAAR , JDACR , JDACV , JDAXT , JDAXC , JDAXF , JDAXM , JDAXG , JDATA , JDATX , JDAUT , JDAUF , 
						JDLTA , JDLTASP , JDLDEB, JDLDEH, JDLFIN, JDLFIH, JDLDUR, JDLDUU ) 
					( SELECT P_CODEOFFRE , P_VERSION , JDSHT , JDENC , JDITC , JDVAL , JDVAA , JDVAW , JDVAT , JDVAU , JDVAH , JDDRQ , JDNBR , JDTXL , 
						JDTRR , JDXCM , JDNEX , JDNPA , JDAFC , JDAFR , JDATT , JDCNA , JDCNC , JDINA , '' , JDIXC , JDIXF , JDIXL , JDIXP , JDIVO , 0 , JDIVW , 
						JDMHT , JDREA , JDREB , JDREH , JDDPV , JDGAU , JDGVL , JDGUN , JDPBN , JDPBS , JDPBR , JDPBT , JDPBC , JDPBP , JDPBA , JDRCG , JDCCG , JDRCS , 
						JDCCS , JDCLV , JDAGM , JDLCV , JDLCA , JDLCW , JDLCU , JDLCE , JDDPA , JDDPM , JDDPJ , JDFPA , JDFPM , JDFPJ , JDPEA , JDPEM , JDPEJ , JDACQ , 
						JDTMC , JDTFO , JDTFT , 0 , JDTFP , JDPRO , JDTMI , JDTFM , JDTMA , JDTMG , JDCMC , JDCFO , JDCFT , JDCFH , JDCHT , JDCTT , JDCCP , JDEHH , 
						JDEHC , JDSMP , JDIVX , JDTCR , JDNPG , JDEDI , JDEDN , JDEDA , JDEDM , JDEDJ , JDEHI , JDIAX , JDTED , JDDOO , JDRUA , JDRUM , JDRUJ , JDECG , 
						JDECP , JDAPT , JDAPR , JDAAT , JDAAR , JDACR , JDACV , JDAXT , JDAXC , JDAXF , JDAXM , JDAXG , JDATA , JDATX , JDAUT , JDAUF , 
						JDLTA , JDLTASP , JDLDEB, JDLDEH, JDLFIN, JDLFIH, JDLDUR, JDLDUU 
					FROM YPRTENT WHERE JDIPB = P_COPYCODEOFFRE AND JDALX = P_COPYVERSION ) ; 
			 
				ELSE 
			 
					INSERT INTO YPRTENT ( JDIPB , JDALX , JDSHT , JDENC , JDITC , JDVAL , JDVAA , JDVAW , JDVAT , JDVAU , JDVAH , JDDRQ , JDNBR , JDTXL , 
						JDTRR , JDXCM , JDNEX , JDNPA , JDAFC , JDAFR , JDATT , JDCNA , JDCNC , JDINA , JDIND , JDIXC , JDIXF , JDIXL , JDIXP , JDIVO , JDIVA , JDIVW , 
						JDMHT , JDREA , JDREB , JDREH , JDDPV , JDGAU , JDGVL , JDGUN , JDPBN , JDPBS , JDPBR , JDPBT , JDPBC , JDPBP , JDPBA , JDRCG , JDCCG , JDRCS , 
						JDCCS , JDCLV , JDAGM , JDLCV , JDLCA , JDLCW , JDLCU , JDLCE , JDDPA , JDDPM , JDDPJ , JDFPA , JDFPM , JDFPJ , JDPEA , JDPEM , JDPEJ , JDACQ , 
						JDTMC , JDTFO , JDTFT , JDTFF , JDTFP , JDPRO , JDTMI , JDTFM , JDTMA , JDTMG , JDCMC , JDCFO , JDCFT , JDCFH , JDCHT , JDCTT , JDCCP , JDEHH , 
						JDEHC , JDSMP , JDIVX , JDTCR , JDNPG , JDEDI , JDEDN , JDEDA , JDEDM , JDEDJ , JDEHI , JDIAX , JDTED , JDDOO , JDRUA , JDRUM , JDRUJ , JDECG , 
						JDECP , JDAPT , JDAPR , JDAAT , JDAAR , JDACR , JDACV , JDAXT , JDAXC , JDAXF , JDAXM , JDAXG , JDATA , JDATX , JDAUT , JDAUF , 
						JDLTA , JDLTASP , JDLDEB, JDLDEH, JDLFIN, JDLFIH, JDLDUR, JDLDUU ) 
					( SELECT P_CODEOFFRE , P_VERSION , JDSHT , JDENC , JDITC , JDVAL , JDVAA , JDVAW , JDVAT , JDVAU , JDVAH , JDDRQ , JDNBR , JDTXL , 
						JDTRR , JDXCM , JDNEX , JDNPA , JDAFC , JDAFR , JDATT , JDCNA , JDCNC , JDINA , '' , JDIXC , JDIXF , JDIXL , JDIXP , JDIVO , 0 , JDIVW , 
						JDMHT , JDREA , JDREB , JDREH , JDDPV , JDGAU , JDGVL , JDGUN , JDPBN , JDPBS , JDPBR , JDPBT , JDPBC , JDPBP , JDPBA , JDRCG , JDCCG , JDRCS , 
						JDCCS , JDCLV , JDAGM , JDLCV , JDLCA , JDLCW , JDLCU , JDLCE , JDDPA , JDDPM , JDDPJ , JDFPA , JDFPM , JDFPJ , JDPEA , JDPEM , JDPEJ , JDACQ , 
						JDTMC , JDTFO , JDTFT , JDTFF , JDTFP , JDPRO , JDTMI , JDTFM , JDTMA , JDTMG , JDCMC , JDCFO , JDCFT , JDCFH , JDCHT , JDCTT , JDCCP , JDEHH , 
						JDEHC , JDSMP , JDIVX , JDTCR , JDNPG , JDEDI , JDEDN , JDEDA , JDEDM , JDEDJ , JDEHI , JDIAX , JDTED , JDDOO , JDRUA , JDRUM , JDRUJ , JDECG , 
						JDECP , JDAPT , JDAPR , JDAAT , JDAAR , JDACR , JDACV , JDAXT , JDAXC , JDAXF , JDAXM , JDAXG , JDATA , JDATX , JDAUT , JDAUF , 
						JDLTA , JDLTASP , JDLDEB, JDLDEH, JDLFIN, JDLFIH, JDLDUR, JDLDUU 
					FROM YPRTENT WHERE JDIPB = P_COPYCODEOFFRE AND JDALX = P_COPYVERSION ) ; 
				END IF ; 
			END IF ; 
		END IF ; 
		CALL SP_CKPENT ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , P_CODEOFFRE , P_VERSION , P_TRAITEMENT , P_MODECOPY ) ; 
		 
		SET P_TRAITEMENT = 'C' ; 
	END IF ; 
	 
	 
	SELECT PBDEV , PBPER , PBANT , PBDUR , PBREL , PBRLD , PBRGT , PBTBR , PBNPL , PBORK 
		INTO V_DEVISE , V_PERIODE , V_ANTEC , V_VALIDITE , V_RELANCE , V_RELANCEVAL , V_REGIMETAXE , V_TYPEBRANCHE , V_NATUREPOLICE , V_STATUTKHEOPS 
	FROM YPOBASE 
	WHERE PBIPB = P_COPYCODEOFFRE AND PBALX = P_COPYVERSION AND PBTYP = P_TYPE ; 
	 
	IF ( TRIM ( P_MODECOPY ) = 'CNVA' ) THEN 
	 
		SELECT PBEFA , PBEFM , PBEFJ INTO V_YEAREFFET , V_MONTHEFFET , V_DAYEFFET 
		FROM YPOBASE WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
		 
		UPDATE YPOBASE 
		SET PBDEV = V_DEVISE , 
		PBPER = V_PERIODE , 
		PBANT = V_ANTEC , 
		PBDUR = V_VALIDITE , 
		PBREL = V_RELANCE , 
		PBRLD = V_RELANCEVAL , 
		PBRGT = V_REGIMETAXE , 
		PBTBR = V_TYPEBRANCHE , 
		PBNPL = V_NATUREPOLICE , 
		PBAVA = V_YEAREFFET , 
		PBAVM = V_MONTHEFFET , 
		PBAVJ = V_DAYEFFET 
		WHERE PBIPB = P_CODEOFFRE 
		AND PBALX = P_VERSION 
		AND PBTYP = P_TYPE ; 
		 
		 --SELECT KAAASS INTO V_KAAASS FROM KPENT WHERE TRIM(KAAIPB) = TRIM(P_COPYCODEOFFRE) AND KAAALX = P_COPYVERSION AND KAATYP = P_TYPE ; 
		UPDATE KPENT 
		SET KAAOBSV = V_OBSV_DESTINATION , KAAASS = V_KAAASS 
		WHERE KAAIPB = P_CODEOFFRE AND KAATYP = P_TYPE AND KAAALX = P_VERSION ; 
		 
		 -- AJOUT LE 05/09/2016 SUIVANT LE DOC "KHEOPS - LISTE DES CHAMPS - RÈGLES DE MAPPAGES 13-06-16.XLSX" 
		CALL SP_COPIEDOCEXT ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , P_CODEOFFRE , P_VERSION , P_TYPE , P_MODECOPY , P_DATESYSTEME , P_USER ) ; 
	 
	ELSE 
		IF ( TRIM ( P_MODECOPY ) = 'OFFRE' OR TRIM ( P_MODECOPY ) = 'AFNCOPY' ) THEN 
			UPDATE YPOBASE SET PBDEV = V_DEVISE , PBPER = V_PERIODE , PBRGT = V_REGIMETAXE WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
		 
			UPDATE KPENT SET KAAOBSV = V_OBSV_DESTINATION WHERE KAAIPB = P_CODEOFFRE AND KAATYP = P_TYPE AND KAAALX = P_VERSION ; 
		END IF ; 
	END IF ; 
	 
	CALL SP_CRSQ ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , 0 , '' , 0 , P_TRAITEMENT , P_CODEOFFRE , P_VERSION , P_MODECOPY ) ; 
	 
	IF ( TRIM ( P_MODECOPY ) = 'VERSION' ) THEN 
		CALL SP_ADR ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , P_VERSION , P_CODEOFFRE , P_VERSION , 'P' ) ; 
	END IF ; 
	 
	CALL SP_CFORMUL ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , 0 , '' , 0 , P_DATESYSTEME , P_USER , P_TRAITEMENT , P_CODEOFFRE , P_VERSION , P_MODECOPY ) ; 
	 
	CALL SP_CINVEN ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , 0 , 0 , '' , 0 , P_TRAITEMENT , P_CODEOFFRE , P_VERSION , P_MODECOPY , V_NEWCODEINVEN ) ; 
	 
	CALL SP_CKCOPID ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , P_CODEOFFRE , P_VERSION , P_TYPE ) ; 
	 
	CALL SP_CINTERV ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , P_CODEOFFRE , P_VERSION , P_TYPE , P_MODECOPY ) ; 
	 
	CALL SP_CCLAUSE ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , 0 , '' , 0 , P_TRAITEMENT , P_CODEOFFRE , P_VERSION , P_MODECOPY ) ; 
	 
	IF ( TRIM ( P_MODECOPY ) = 'VERSION' OR TRIM ( P_MODECOPY ) = 'AFFNOUV' ) THEN 
		CALL SP_COPOP ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , P_CODEOFFRE , P_TYPE , P_VERSION ) ; 
	END IF ; 
	 
	IF ( TRIM ( P_MODECOPY ) = 'VERSION' ) THEN 
	 
		CALL SP_CKCOPID ( P_COPYCODEOFFRE , P_COPYVERSION , P_TYPE , P_CODEOFFRE , P_VERSION , P_TYPE ) ; 
		 
		FOR LOOP_TRACE AS FREE_LIST CURSOR FOR 
			SELECT KEVTYP , KEVIPB , KEVALX , KEVETAPE , KEVETORD , KEVORDR , KEVPERI , KEVRSQ , KEVOBJ , KEVKBEID , 
			KEVFOR , KEVOPT , KEVNIVM , KEVCRU , KEVCRD , KEVCRH , KEVMAJU , KEVMAJD , KEVMAJH 
			FROM KPCTRLE 
			WHERE KEVIPB = P_COPYCODEOFFRE AND KEVALX = P_COPYVERSION AND KEVTYP = P_TYPE AND KEVETAPE <> 'OPT' 
		DO 
			INSERT INTO KPCTRLE 
			( KEVTYP , KEVIPB , KEVALX , KEVETAPE , KEVETORD , KEVORDR , KEVPERI , KEVRSQ , KEVOBJ , KEVKBEID , 
			KEVFOR , KEVOPT , KEVNIVM , KEVCRU , KEVCRD , KEVCRH , KEVMAJU , KEVMAJD , KEVMAJH ) 
			VALUES 
			( KEVTYP , P_CODEOFFRE , P_VERSION , KEVETAPE , KEVETORD , KEVORDR , KEVPERI , KEVRSQ , KEVOBJ , KEVKBEID , 
			KEVFOR , KEVOPT , KEVNIVM , P_USER , P_DATESYSTEME , KEVCRH , P_USER , P_DATESYSTEME , KEVMAJH ) ; 
				 
		END FOR ; 
	END IF ; 
	 
	/* 2017-07-10 : ajout de la vérification de l'application de la taxe Attentat (FGA) */ 
	/* si vide => reprise de la valeur du paramétrage */ 
	SELECT JDATT INTO V_APPATT FROM YPRTENT WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
  
	IF ( TRIM ( V_APPATT ) = '' ) THEN 
		UPDATE YPRTENT SET JDATT = V_APPTAXEATT WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
	END IF ; 
	SELECT JDATT INTO V_APPATT FROM YPRTENT WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
	/* ********************************************************* */ 
  
END P1  ; 
  

  

