CREATE PROCEDURE SP_REPORT_REGULE_AMOUNTS ( 
	IN P_REGULEID CHAR(15) 
	) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_REPORT_REGULE_AMOUNTS 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	
		DECLARE V_RGID BIGINT DEFAULT 0 ; 
		DECLARE V_TYPE CHAR(10) DEFAULT '';
		DECLARE V_MODE CHAR(1) DEFAULT '';
		DECLARE V_COEF DECIMAL(11, 2) DEFAULT 0;
		DECLARE V_MHT DECIMAL(11, 2) DEFAULT 0;
		
		SET V_RGID = CAST ( P_REGULEID AS BIGINT ) ;
		
		SELECT KHWMRG, KHWACC, KHWMHT INTO V_TYPE, V_MODE, V_MHT FROM KPRGU WHERE KHWID = V_RGID;
		
		IF (V_MODE = 'E') THEN
		
			/* update KPRGUR */
			FOR FORLOOPRSQ_GUG AS FREE_LIST CURSOR FOR 
				SELECT KILRSQ RSQ, KILMHT MHT, KHWEMD EMD, KHWCOT COTIS, KHWSCHG SCHG, KHWSPC SPC, KHWSRIM SRIM, KHWMHC MHC, KHWBRNC BRNC, KHWASV ASV, KHWSIDF SIDF, KHWSREC SREC
				FROM KPRGUR
				INNER JOIN KPRGU ON KHWID = KILKHWID
				WHERE KILKHWID = V_RGID
				ORDER BY KILRSQ
			DO
					SET V_COEF = MHT / V_MHT;
				
					UPDATE KPRGUR SET  KILSPC = SPC, KILASV = ASV * V_COEF, KILBRNC = BRNC * V_COEF, KILEMD = EMD * V_COEF, 
					KILCOT = COTIS * V_COEF, KILSCHG = SCHG * V_COEF, KILSRIM = SRIM * V_COEF, KILMHC = MHC * V_COEF,
					KILSIDF = SIDF * V_COEF, KILSREC = SREC * V_COEF
					WHERE KILKHWID = V_RGID AND KILRSQ = RSQ;
				
				
			END FOR;
			/* END update KPRGUR */
			
		END IF;
		
	END P1;

