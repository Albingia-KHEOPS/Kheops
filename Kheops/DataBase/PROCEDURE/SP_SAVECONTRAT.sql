CREATE OR REPLACE PROCEDURE SP_SAVECONTRAT ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_AVENANT INTEGER , 
	IN P_STOP CHAR(10) , 
	IN P_DESCRIPTION CHAR(5000) , 
	IN P_DESCRIPTIF CHAR(40) , 
	IN P_MOTCLE1 CHAR(10) , 
	IN P_MOTCLE2 CHAR(10) , 
	IN P_MOTCLE3 CHAR(10) , 
	IN P_OBSERVATIONS CHAR(5000) , 
	IN P_DEVISE CHAR(3) , 
	IN P_REGIMETAXE CHAR(1) , 
	IN P_CATNAT CHAR(1) , 
	IN P_ANTECEDENT CHAR(1) , 
	IN P_OBSANTECEDENT CHAR(5000) , 
	IN P_PERIODICITE CHAR(1) , 
	IN P_ECHPRINCIPJOUR INTEGER , 
	IN P_ECHPRINCIPMOIS INTEGER , 
	IN P_PROCHECHJOUR INTEGER , 
	IN P_PROCHECHMOIS INTEGER , 
	IN P_PROCHECHANNEE INTEGER , 
	IN P_DEBEFFETJOUR INTEGER , 
	IN P_DEBEFFETMOIS INTEGER , 
	IN P_DEBEFFETANNEE INTEGER , 
	IN P_DEBEFFETHEURE INTEGER , 
	IN P_FINEFFETJOUR INTEGER , 
	IN P_FINEFFETMOIS INTEGER , 
	IN P_FINEFFETANNEE INTEGER , 
	IN P_FINEFFETHEURE INTEGER , 
	IN P_DUREE INTEGER , 
	IN P_DUREEUNITE CHAR(1) , 
	IN P_ACCORDJOUR INTEGER , 
	IN P_ACCORDMOIS INTEGER , 
	IN P_ACCORDANNEE INTEGER , 
	IN P_NBMOISRESIL INTEGER , 
	IN P_INDICEREF CHAR(3) , 
	IN P_VALEUR DECIMAL(7, 2) , 
	IN P_APERITEUR CHAR(6) , 
	IN P_NATURECONTRAT CHAR(1) , 
	IN P_PARTALBINGIA DECIMAL(5, 2) , 
	IN P_FRAISAPE DECIMAL(5, 2) , 
	IN P_COUVERTURE INTEGER , 
	IN P_INTERCALAIRE CHAR(1) , 
	IN P_SOUSCRIPTEUR CHAR(10) , 
	IN P_GESTIONNAIRE CHAR(10) , 
	IN P_DEBPERIODJOUR INTEGER , 
	IN P_DEBPERIODMOIS INTEGER , 
	IN P_DEBPERIODANNEE INTEGER , 
	IN P_FINPERIODJOUR INTEGER , 
	IN P_FINPERIODMOIS INTEGER , 
	IN P_FINPERIODANNEE INTEGER , 
	IN P_DATESTAT INTEGER , 
	IN P_USER CHAR(10) , 
	IN P_DATENOWJOUR INTEGER , 
	IN P_DATENOWMOIS INTEGER , 
	IN P_DATENOWANNEE INTEGER , 
	IN P_HEURENOW INTEGER , 
	IN P_DATEAVTJOUR INTEGER , 
	IN P_DATEAVTMOIS INTEGER , 
	IN P_DATEAVTANNEE INTEGER , 
	IN P_HEUREAVT INTEGER , 
	IN P_PARTAPERITEUR DECIMAL(5, 2) , 
	IN P_IDINTERLOAPERITEUR INTEGER , 
	IN P_REFAPERITEUR CHAR(25) , 
	IN P_FRAISACCAPERITEUR DECIMAL(5, 2) , 
	IN P_COMMAPERITEUR DECIMAL(5, 2) , 
	IN P_ACTEGESTION CHAR(5) ,
	IN P_LTA CHAR(1) ) 
	LANGUAGE SQL 
	SPECIFIC SP_SAVECONTRAT 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_CODEOBS INTEGER DEFAULT 0 ; 
	DECLARE V_CODEDESI INTEGER DEFAULT 0 ; 
	/* DECLARE V_ACTEGEST CHAR ( 6 ) DEFAULT 'AFFNOUV' ;  */ 
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	DECLARE V_HEURENOW DECIMAL ( 4 , 0 ) DEFAULT 0 ; 
	DECLARE V_JDINA CHAR ( 1 ) DEFAULT 'N' ; 
	DECLARE V_CONTROLASS INTEGER DEFAULT 0 ; 
DECLARE V_DATEHTEMP INTEGER DEFAULT 0 ; 
	DECLARE V_DATETEMP INTEGER DEFAULT 0 ; 
DECLARE V_DATENOW INTEGER DEFAULT 0 ;	 
	DECLARE V_TTR CHAR ( 5 ) DEFAULT '' ;
    
    SET V_TTR = P_ACTEGESTION ;

	SET P_CODEOFFRE = LPAD ( TRIM ( P_CODEOFFRE ) , 9 , ' ');

	SET V_HEURENOW = CAST ( P_HEURENOW AS NUMERIC ( 4 , 0 ) ) ; 
  
/*Si modification de la date d'avenant  */ 
IF ( P_AVENANT > 0 ) THEN 
		SET V_DATENOW = P_DATENOWANNEE * 10000 + P_DATENOWMOIS * 100 + P_DATENOWJOUR ; 
		SET V_DATEHTEMP = P_DATEAVTANNEE * 10000 + P_DATEAVTMOIS * 100 + P_DATEAVTJOUR ;			 
		SELECT IFNULL ( PBAVA * 10000 + PBAVM * 100 + PBAVJ , 0 ) , PBTTR INTO V_DATETEMP , V_TTR FROM YPOBASE 
			WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE AND PBAVN = P_AVENANT ; 
		IF ( V_DATEHTEMP != V_DATETEMP ) THEN 
			 --RECHERCHE SI ENREGISTREMENT EXISTE DANS KPCTRLA 
			SELECT COUNT ( * ) INTO V_CONTROLASS FROM KPCTRLA WHERE KGTTYP = P_TYPE AND KGTIPB = P_CODEOFFRE AND KGTALX = P_VERSION ; 
			IF ( V_CONTROLASS = 0 ) THEN	 
				DELETE FROM KPCTRLE WHERE KEVTYP = P_TYPE AND KEVIPB = P_CODEOFFRE AND KEVALX = P_VERSION AND KEVETAPE = 'COT' ; 
			 
				INSERT INTO KPCTRLA 
					( KGTTYP , KGTIPB , KGTALX , KGTETAPE , KGTLIB , KGTCRU , KGTCRD , KGTCRH , KGTMAJU , KGTMAJD , KGTMAJH ) 
				VALUES 
					( P_TYPE , P_CODEOFFRE , P_VERSION , 'GEN' , 'Date d''avenant' , P_USER , V_DATENOW , P_HEURENOW , P_USER , V_DATENOW , P_HEURENOW ) ; 
			END IF ; 
		END IF ; 
	END IF ; 
	 
	/* CORRECTION ECM 2015-07-06 : ON NE PEUT MODIFIER LA DATE ET L'HEURE DE DÉBUT D'EFFET POUR UN AVENANT */ 
	 --PBEFJ = P_DEBEFFETJOUR , PBEFM = P_DEBEFFETMOIS , PBEFA = P_DEBEFFETANNEE , PBEFH = P_DEBEFFETHEURE , 
	 --MISE À JOUR DE YPOBASE-- 
	UPDATE YPOBASE 
		SET PBREF = P_DESCRIPTIF , PBMO1 = P_MOTCLE1 , PBMO2 = P_MOTCLE2 , PBMO3 = P_MOTCLE3 , PBDEV = P_DEVISE , PBPER = P_PERIODICITE , 
			PBECJ = P_ECHPRINCIPJOUR , PBECM = P_ECHPRINCIPMOIS , 
			PBFEJ = P_FINEFFETJOUR , PBFEM = P_FINEFFETMOIS , PBFEA = P_FINEFFETANNEE , PBFEH = P_FINEFFETHEURE , PBCTD = P_DUREE , PBCTU = P_DUREEUNITE , 
			PBSAJ = P_ACCORDJOUR , PBSAM = P_ACCORDMOIS , PBSAA = P_ACCORDANNEE , PBNPL = P_NATURECONTRAT , PBAPP = P_PARTALBINGIA , PBPCV = P_COUVERTURE , 
			PBSOU = P_SOUSCRIPTEUR , PBGES = P_GESTIONNAIRE , PBRGT = P_REGIMETAXE , PBANT = P_ANTECEDENT , 
			PBMJU = P_USER , PBMJJ = P_DATENOWJOUR , PBMJM = P_DATENOWMOIS , PBMJA = P_DATENOWANNEE , PBAPR = P_APERITEUR , PBSTP = P_STOP , 
			PBAVA = P_DATEAVTANNEE , PBAVM = P_DATEAVTMOIS , PBAVJ = P_DATEAVTJOUR 
		WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
		 
	SELECT KAAOBSV INTO V_CODEOBS FROM KPENT WHERE KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
	 --MISE À JOUR DE KPOBSV-- 
	IF ( V_CODEOBS > 0 ) THEN 
		UPDATE KPOBSV 
			SET KAJOBSV = TRIM ( P_OBSERVATIONS ) 
			WHERE KAJCHR = V_CODEOBS ; 
	END IF ; 
	 
	IF ( P_INDICEREF IS NOT NULL AND P_INDICEREF <> '' ) THEN 
		SET V_JDINA = 'O' ; 
	END IF ;	 
	 
	 
	 --Indexation, attente validation FDU traitement en avenant 
	 --MISE À JOUR DE YPRTENT-- 
	UPDATE YPRTENT 
		SET JDDPV = P_NBMOISRESIL , JDIND = P_INDICEREF , JDIVA = P_VALEUR , JDITC = P_INTERCALAIRE , JDCNA = P_CATNAT , 
			JDDPJ = P_DATEAVTJOUR , JDDPM = P_DATEAVTMOIS , JDDPA = P_DATEAVTANNEE , 
			JDFPJ = P_FINPERIODJOUR , JDFPM = P_FINPERIODMOIS , JDFPA = P_FINPERIODANNEE , 
			JDPEJ = P_PROCHECHJOUR , JDPEM = P_PROCHECHMOIS , JDPEA = P_PROCHECHANNEE , 
			JDINA = V_JDINA , JDIVO = P_VALEUR , JDIVW = 0 , JDLTA = P_LTA
		WHERE JDIPB = P_CODEOFFRE AND JDALX = P_VERSION ; 
	 
	 --YPRTOBJ  
	UPDATE YPRTOBJ 
	SET JGIVO = P_VALEUR , 
	JGIVA = P_VALEUR , 
	JGIVW = 0 
	WHERE JGIPB = P_CODEOFFRE AND JGALX = P_VERSION ; 
	 
	 --KPOPT  
	UPDATE KPOPT 
	SET KDBIVO = P_VALEUR , 
	KDBIVA = P_VALEUR , 
	KDBIVW = 0 
	WHERE KDBIPB = P_CODEOFFRE AND KDBALX = P_VERSION AND KDBTYP = P_TYPE ; 
	 --Fin indexation 
	 --MISE À JOUR DE KPENT-- 
	UPDATE KPENT 
	SET KAADSTA = P_DATESTAT , KAAAVH = P_HEUREAVT 
	WHERE KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
	 
	 --MISE À JOUR YPOCOAS-- 
	CASE P_NATURECONTRAT 
		WHEN 'A' THEN 
			DELETE FROM YPOCOAS WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE AND PHTAP = 'A' ; 
		WHEN 'E' THEN 
			DELETE FROM YPOCOAS WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE AND PHTAP = 'A' ; 
		WHEN 'C' THEN 
			DELETE FROM YPOCOAS WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE ; 
			INSERT INTO YPOCOAS 
				( PHIPB , PHALX , PHTYP , PHTAP , PHCIE , PHTXF , 
				PHAPP , PHIN5 , PHPOL , PHAFR , PHCOM ) 
			VALUES 
				( P_CODEOFFRE , P_VERSION , P_TYPE , 'A' , P_APERITEUR , P_FRAISAPE , 
				P_PARTAPERITEUR , P_IDINTERLOAPERITEUR , P_REFAPERITEUR , P_FRAISACCAPERITEUR , P_COMMAPERITEUR ) ; 
		WHEN 'D' THEN 
			DELETE FROM YPOCOAS WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE ; 
			INSERT INTO YPOCOAS 
				( PHIPB , PHALX , PHTYP , PHTAP , PHCIE , PHTXF , 
				PHAPP , PHIN5 , PHPOL , PHAFR , PHCOM ) 
			VALUES 
				( P_CODEOFFRE , P_VERSION , P_TYPE , 'A' , P_APERITEUR , P_FRAISAPE , 
				P_PARTAPERITEUR , P_IDINTERLOAPERITEUR , P_REFAPERITEUR , P_FRAISACCAPERITEUR , P_COMMAPERITEUR ) ; 
		ELSE 
			DELETE FROM YPOCOAS WHERE PHIPB = P_CODEOFFRE AND PHALX = P_VERSION AND PHTYP = P_TYPE ; 
	END CASE ; 
	 
	 --INSERTION DANS YPOTRAC-- 
	INSERT INTO YPOTRAC 
		( PYTYP , PYIPB , PYALX , PYAVN , PYTTR , PYVAG , PYTRA , PYTRM , PYTRJ , PYTRH , 
			PYLIB , PYINF , PYSDA , PYSDM , PYSDJ , PYSFA , PYSFM , PYSFJ , PYMJU , PYMJA , PYMJM , PYMJJ , PYMJH ) 
	VALUES 
		( P_TYPE , P_CODEOFFRE , P_VERSION , P_AVENANT , V_TTR , 'G' , P_DATENOWANNEE , P_DATENOWMOIS , P_DATENOWJOUR , P_HEURENOW , 
			'' , 'I' , 0 , 0 , 0 , 0 , 0 , 0 , P_USER , P_DATENOWANNEE , P_DATENOWMOIS , P_DATENOWJOUR , P_HEURENOW ) ; 
	 
	 --MISE À JOUR DE KPDESI-- 
	SELECT KAAAND INTO V_CODEDESI FROM KPENT WHERE KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION AND KAATYP = P_TYPE ; 
	SELECT COUNT ( * ) INTO V_COUNT FROM KPDESI WHERE KADCHR = V_CODEDESI ; 
	IF ( V_COUNT > 0 ) THEN 
		UPDATE KPDESI SET KADDESI = TRIM ( P_OBSANTECEDENT ) WHERE KADCHR = V_CODEDESI ; 
	ELSE 
		CALL SP_NCHRONO ( 'KADCHR' , V_CODEDESI ) ; 
		INSERT INTO KPDESI 
			( KADCHR , KADTYP , KADIPB , KADALX , KADDESI ) 
		VALUES 
			( V_CODEDESI , P_TYPE , P_CODEOFFRE , P_VERSION , TRIM ( P_OBSANTECEDENT ) ) ; 
		UPDATE KPENT SET KAAAND = V_CODEDESI WHERE KAATYP = P_TYPE AND KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION ; 
	END IF ; 
	 
	IF ( P_AVENANT > 0 ) THEN 
		CALL SP_CHECKTRACE ( P_CODEOFFRE , P_VERSION , P_TYPE , P_AVENANT , 'GEN' , 
			P_STOP , P_DESCRIPTION , P_REGIMETAXE , 
			P_CATNAT , P_ANTECEDENT , P_PERIODICITE , P_ECHPRINCIPJOUR , P_ECHPRINCIPMOIS , P_PROCHECHJOUR , P_PROCHECHMOIS , 
			P_PROCHECHANNEE , P_FINEFFETJOUR , P_FINEFFETMOIS , P_FINEFFETANNEE , P_FINEFFETHEURE , P_DUREE , P_DUREEUNITE , P_NBMOISRESIL , P_APERITEUR , 
			P_NATURECONTRAT , P_PARTALBINGIA , P_FRAISAPE , P_COUVERTURE , P_INTERCALAIRE , 
			0 , '' , 0 , 0 , '' , '' , '' , '' , 
			P_USER , P_DATENOWJOUR , P_DATENOWMOIS , P_DATENOWANNEE , P_HEURENOW ) ; 
	END IF ; 
END P1  ; 
  

  

