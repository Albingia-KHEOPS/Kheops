CREATE PROCEDURE SP_SAVEGRILLE ( 
	IN P_NEWGRILLE INTEGER , 
	IN P_CODEGRILLE CHAR(15) , 
	IN P_LIBELLEGRILLE CHAR(60) , 
	OUT P_RETURN CHAR(500) ) 
	LANGUAGE SQL 
	SPECIFIC SP_SAVEGRILLE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	DECLARE V_NEWID INTEGER DEFAULT 0 ; 
	 
	SET P_RETURN = '' ; 
	 
	IF ( P_NEWGRILLE = 0 ) THEN 
	 
		IF ( TRIM ( P_RETURN ) = '' ) THEN 
			UPDATE KNMGRI 
				SET KHJDESI = TRIM ( P_LIBELLEGRILLE ) 
			WHERE TRIM ( KHJNMG ) = TRIM ( P_CODEGRILLE ) ; 
		 
			SET P_RETURN = TRIM ( P_CODEGRILLE ) ; 
		 
			/* SELECT COUNT ( * ) INTO V_COUNT FROM KNMVALF WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) AND TRIM ( KHKTYPO ) = TRIM ( P_TYPOLOGIEGRILLE ) ;         
			IF ( V_COUNT > 0 ) THEN         
				UPDATE KNMVALF SET KHKTYPO = TRIM ( P_TYPOLOGIEGRILLE ) WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) ;         
			ELSE         
				CALL SP_NCHRONO ( 'KHKID' , V_NEWID ) ;         
				INSERT INTO KNMVALF         
					( KHKID , KHKNMG , KHKTYPO )         
				VALUES         
					( V_NEWID , TRIM ( P_CODEGRILLE ) , TRIM ( P_TYPOLOGIEGRILLE ) ) ;         
			END IF ;  */ 
		END IF ;	 
  
	ELSE 
	 
		SELECT COUNT ( * ) INTO V_COUNT FROM KNMGRI WHERE TRIM ( KHJNMG ) = TRIM ( P_CODEGRILLE ) ; 
		IF ( V_COUNT > 0 ) THEN 
			SET P_RETURN = 'ERRORCode déjà présent pour cette typologie' ; 
		END IF ; 
		 
		IF ( TRIM ( P_RETURN ) = '' ) THEN 
			INSERT INTO KNMGRI 
				( KHJNMG , KHJDESI ) 
			VALUES 
				( TRIM ( P_CODEGRILLE ) , TRIM ( P_LIBELLEGRILLE ) ) ; 
				 
			SET P_RETURN = TRIM ( P_CODEGRILLE ) ; 
		 
			/*SELECT COUNT ( * ) INTO V_COUNT FROM KNMVALF WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) AND TRIM ( KHKTYPO ) = TRIM ( P_TYPOLOGIEGRILLE ) ;         
			IF ( V_COUNT > 0 ) THEN         
				UPDATE KNMVALF SET KHKTYPO = TRIM ( P_TYPOLOGIEGRILLE ) WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) ;         
			ELSE         
				CALL SP_NCHRONO ( 'KHKID' , V_NEWID ) ;         
				INSERT INTO KNMVALF         
					( KHKID , KHKNMG , KHKTYPO )         
				VALUES         
					( V_NEWID , TRIM ( P_CODEGRILLE ) , TRIM ( P_TYPOLOGIEGRILLE ) ) ;         
			END IF ; */ 
		END IF ; 
  
	END IF ; 
	 
END P1  ; 
  

  

