CREATE PROCEDURE SP_SAVELINEGRILLE ( 
	IN P_NEWGRILLE INTEGER , 
	IN P_CODEGRILLE CHAR(15) , 
	IN P_LIBELLEGRILLE CHAR(60) , 
	IN P_TYPOLOGIE CHAR(15) , 
	IN P_LIBTYPOLOGIE CHAR(15) , 
	IN P_LIENTYPOLOGIE CHAR(1) , 
	IN P_ORDRETYPOLOGIE INTEGER , 
	OUT P_RETURN CHAR(500) ) 
	LANGUAGE SQL 
	SPECIFIC SP_SAVELINEGRILLE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	DECLARE V_NEWID INTEGER DEFAULT 0 ; 
	DECLARE V_IDTYPO INTEGER DEFAULT 0 ; 
	 
	SET P_RETURN = '' ; 
	 
	/* CALL SP_SAVEGRILLE ( P_NEWGRILLE , P_CODEGRILLE , P_LIBELLEGRILLE , P_TYPOLOGIEGRILLE , P_RETURN ) ;  */ 
	CALL SP_SAVEGRILLE ( P_NEWGRILLE , P_CODEGRILLE , P_LIBELLEGRILLE , P_RETURN ) ; 
	 
	IF ( LOCATE ( 'ERROR' , P_RETURN ) = 0 ) THEN 
	 
		/* SELECT KHIID INTO V_IDTYPO FROM KNMREF WHERE TRIM ( KHITYPO ) = TRIM ( P_TYPOLOGIE ) ;  */ 
		 
		CASE P_ORDRETYPOLOGIE 
			WHEN 1 THEN 
				UPDATE KNMGRI SET KHJTYPO1 = TRIM ( P_TYPOLOGIE ) , KHJLIB1 = TRIM ( P_LIBTYPOLOGIE ) , KHJLIEN1 = TRIM ( P_LIENTYPOLOGIE ) 
					WHERE TRIM ( KHJNMG ) = TRIM ( P_CODEGRILLE ) ; 
					 
/* 				UPDATE KNMVALF SET KHKTYPO1 = TRIM ( P_TYPOLOGIE ) , KHKKHIID1 = V_IDTYPO         
					WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) AND KHKTYPO = TRIM ( P_TYPOLOGIEGRILLE ) ;				  */ 
			WHEN 2 THEN 
				UPDATE KNMGRI SET KHJTYPO2 = TRIM ( P_TYPOLOGIE ) , KHJLIB2 = TRIM ( P_LIBTYPOLOGIE ) , KHJLIEN2 = TRIM ( P_LIENTYPOLOGIE ) 
					WHERE TRIM ( KHJNMG ) = TRIM ( P_CODEGRILLE ) ; 
  
/* 				UPDATE KNMVALF SET KHKTYPO2 = TRIM ( P_TYPOLOGIE ) , KHKKHIID2 = V_IDTYPO         
					WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) AND KHKTYPO = TRIM ( P_TYPOLOGIEGRILLE ) ;				  */ 
			WHEN 3 THEN 
				UPDATE KNMGRI SET KHJTYPO3 = TRIM ( P_TYPOLOGIE ) , KHJLIB3 = TRIM ( P_LIBTYPOLOGIE ) , KHJLIEN3 = TRIM ( P_LIENTYPOLOGIE ) 
					WHERE TRIM ( KHJNMG ) = TRIM ( P_CODEGRILLE ) ; 
  
				/* UPDATE KNMVALF SET KHKTYPO3 = TRIM ( P_TYPOLOGIE ) , KHKKHIID3 = V_IDTYPO         
					WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) AND KHKTYPO = TRIM ( P_TYPOLOGIEGRILLE ) ;				  */ 
			WHEN 4 THEN 
				UPDATE KNMGRI SET KHJTYPO4 = TRIM ( P_TYPOLOGIE ) , KHJLIB4 = TRIM ( P_LIBTYPOLOGIE ) , KHJLIEN4 = TRIM ( P_LIENTYPOLOGIE ) 
					WHERE TRIM ( KHJNMG ) = TRIM ( P_CODEGRILLE ) ; 
  
	/* 			UPDATE KNMVALF SET KHKTYPO4 = TRIM ( P_TYPOLOGIE ) , KHKKHIID4 = V_IDTYPO         
					WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) AND KHKTYPO = TRIM ( P_TYPOLOGIEGRILLE ) ;				  */ 
			WHEN 5 THEN 
				UPDATE KNMGRI SET KHJTYPO5 = TRIM ( P_TYPOLOGIE ) , KHJLIB5 = TRIM ( P_LIBTYPOLOGIE ) , KHJLIEN5 = TRIM ( P_LIENTYPOLOGIE ) 
					WHERE TRIM ( KHJNMG ) = TRIM ( P_CODEGRILLE ) ; 
  
		/* 		UPDATE KNMVALF SET KHKTYPO5 = TRIM ( P_TYPOLOGIE ) , KHKKHIID5 = V_IDTYPO         
					WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) AND KHKTYPO = TRIM ( P_TYPOLOGIEGRILLE ) ; */				 
		END CASE ; 
  
/* 		SELECT COUNT ( * ) INTO V_COUNT FROM KNMVALF WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) AND KHKNIV = P_ORDRETYPOLOGIE ;          
		IF ( V_COUNT > 0 ) THEN          
			UPDATE KNMVALF SET KHKTYPO = TRIM ( P_TYPOLOGIE ) WHERE TRIM ( KHKNMG ) = TRIM ( P_CODEGRILLE ) AND KHKNIV = P_ORDRETYPOLOGIE ;          
		ELSE          
			CALL SP_NCHRONO ( 'KHKID' , V_NEWID ) ;          
			INSERT INTO KNMVALF          
				( KHKID , KHKNMG , KHKTYPO , KHKORDR )          
			VALUES          
				( V_NEWID , TRIM ( P_CODEGRILLE ) , TRIM ( P_TYPOLOGIE ) , P_ORDRETYPOLOGIE ) ;          
		END IF ; */					 
		 
	END IF ; 
  
END P1  ; 
  

  

