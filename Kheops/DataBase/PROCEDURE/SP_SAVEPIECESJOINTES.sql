CREATE PROCEDURE SP_SAVEPIECESJOINTES ( 
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CONTEXTE CHAR(10) , 
	IN P_ETAPE CHAR(10) , 
	IN P_DATE INTEGER , 
	IN P_CODERISQUE INTEGER , 
	IN P_CODEOBJET INTEGER , 
	IN P_CODEFORMULE INTEGER , 
	IN P_CODEOPTION INTEGER , 
	IN P_EMPLACEMENT CHAR(10) , 
	IN P_SOUSEMPLACEMENT CHAR(10) , 
	IN P_ORDRE DECIMAL(7, 3) , 
	IN P_PIECESJOINTESID CHAR(500) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_SAVEPIECESJOINTES 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_IDCLAUSE INTEGER DEFAULT 0 ; 
	DECLARE V_LEFT VARCHAR ( 500 ) DEFAULT '' ; 
	DECLARE V_RIGHT VARCHAR ( 500 ) DEFAULT '' ; 
	DECLARE V_IDPIECEJOINTE INTEGER DEFAULT 0 ; 
	 
	DECLARE V_CLNM1 CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_CLNM2 CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_CLNM3 INTEGER DEFAULT 0 ; 
	 
DECLARE V_AVENANT DECIMAL ( 3 ) DEFAULT 0 ; 
  
	SELECT PBAVN INTO V_AVENANT 
	FROM YPOBASE 
	WHERE TRIM ( PBIPB ) = TRIM ( P_CODEOFFRE ) AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
  
	CALL SP_SPLIT ( P_PIECESJOINTESID , ';' , 'L' , V_LEFT ) ; 
	CALL SP_SPLIT ( P_PIECESJOINTESID , ';' , 'R' , V_RIGHT ) ; 
	 
	WHILE ( TRIM ( V_LEFT ) != '' ) DO 
		CALL SP_NCHRONO ( 'KCAID' , V_IDCLAUSE ) ; 
		 
		SET V_CLNM1 = '' ; 
		SET V_CLNM2 = '' ; 
		SET V_CLNM3 = 0 ; 
		 
		SELECT SUBSTR ( TPCA2 , 1 , 5 ) , SUBSTR ( TPCA2 , 6 , 5 ) INTO V_CLNM1 , V_CLNM2 FROM YYYYPAR WHERE TCON = 'KHEOP' AND TFAM = 'CTX' AND TCOD = P_CONTEXTE ; 
		IF ( V_CLNM1 != '' OR V_CLNM2 != '' ) THEN 
			IF ( V_AVENANT = 0 ) THEN 
				SELECT IFNULL ( MAX ( KCACLNM3 ) , 0 ) + 1 INTO V_CLNM3 FROM KPCLAUSE WHERE TRIM ( KCAIPB ) = TRIM ( P_CODEOFFRE ) AND KCAALX = P_VERSION AND KCATYP = P_TYPE AND KCACLNM1 = V_CLNM1 AND KCACLNM2 = V_CLNM2 ; 
			ELSE 
				SELECT IFNULL ( MAX ( KCACLNM3 ) , 0 ) + 1 INTO V_CLNM3 FROM HPCLAUSE WHERE TRIM ( KCAIPB ) = TRIM ( P_CODEOFFRE ) AND KCAALX = P_VERSION AND KCATYP = P_TYPE AND KCACLNM1 = V_CLNM1 AND KCACLNM2 = V_CLNM2 ;			 
			END IF ; 
		END IF ;		 
		 
		SET V_IDPIECEJOINTE = CAST ( TRIM ( V_LEFT ) AS INTEGER ) ; 
		 
		/* MODIFICATION ECM 2015-03-26 POUR SAUVEGARDE DES EMPLACEMENTS, SOUS-EMPLACEMENTS, ORDRE DANS LES NOMENCLATURES */ 
		INSERT INTO KPCLAUSE 
			( KCAID , KCATYP , KCAIPB , KCAALX , KCAETAFF , KCAPERI , KCARSQ , KCAOBJ , 
				KCAINVEN , KCAINLGN , KCAFOR , KCAOPT , KCAGAR , KCACTX , KCAAJT , KCANTA , 
				KCACLNM1 , KCACLNM2 , KCACLNM3 , KCAVER , KCATXL , KCAMER , KCADOC , KCACHI , KCACHIS , KCAIMP , 
				KCACXI , KCAIAN , KCAIAC , KCASIT , KCASITD , KCAAVNC , KCACRD , KCAAVNM , 
				KCAMAJD , KCASPA , KCATYPO , KCAAIM , KCATAE , KCAELGO , KCAELGI , KCAXTL , KCATYPD ) 
		VALUES 
			( V_IDCLAUSE , P_TYPE , P_CODEOFFRE , P_VERSION , P_ETAPE , P_ETAPE , P_CODERISQUE , P_CODEOBJET , 
				0 , 0 , P_CODEFORMULE , P_CODEOPTION , '' , P_CONTEXTE , 'O' , 'P' , 
				V_CLNM1 , V_CLNM2 , V_CLNM3 , 0 , V_IDPIECEJOINTE , 0 , 'CP' , P_EMPLACEMENT , P_SOUSEMPLACEMENT , 0 , 
				P_ORDRE , 'N' , '' , 'V' , P_DATE , V_AVENANT , P_DATE , V_AVENANT , 
				P_DATE , 'N' , '' , 'O' , '' , '' , 0 , 'O' , 'E' ) ; 
/* 		VALUES           
			( V_IDCLAUSE , P_TYPE , P_CODEOFFRE , P_VERSION , P_ETAPE , P_ETAPE , P_CODERISQUE , P_CODEOBJET ,           
				0 , 0 , P_CODEFORMULE , P_CODEOPTION , '' , P_CONTEXTE , 'O' , '' ,           
				P_EMPLACEMENT , P_SOUSEMPLACEMENT , P_ORDRE , 0 , V_IDPIECEJOINTE , 0 , 'CP' , P_EMPLACEMENT , P_SOUSEMPLACEMENT , 0 ,           
				P_ORDRE , 'N' , '' , 'V' , P_DATE , 0 , P_DATE , 0 ,           
				P_DATE , 'N' , '' , 'O' , '' , '' , 0 , 'O' , 'E' ) ;  */ 
	 
		CALL SP_SPLIT ( V_RIGHT , ';' , 'L' , V_LEFT ) ; 
		CALL SP_SPLIT ( V_RIGHT , ';' , 'R' , V_RIGHT ) ; 
	END WHILE ; 
  
END P1  ; 
  

  

