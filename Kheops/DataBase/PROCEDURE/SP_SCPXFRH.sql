CREATE PROCEDURE SP_SCPXFRH ( 
	IN P_ID INTEGER , 
	IN P_EXPRESSION INTEGER , 
	IN P_FRHVALEUR DECIMAL(13, 2) , 
	IN P_FRHUNITE CHAR(3) , 
	IN P_FRHTYPE CHAR(3) , 
	IN P_FRHMINI DECIMAL(13, 2) , 
	IN P_FRHMAXI DECIMAL(13, 2) , 
	IN P_FRHDATEDEB INTEGER , 
	IN P_FRHDATEFIN INTEGER ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_SCPXFRH 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
DECLARE V_ORDRE INTEGER DEFAULT 0 ; 
  
IF ( P_ID = 0 ) THEN 
  
SELECT IFNULL ( MAX ( KDLORDRE ) + 1 , 1 ) INTO V_ORDRE FROM KPEXPFRHD WHERE KDLKDKID = P_EXPRESSION ; 
  
CALL SP_NCHRONO ( 'KDLID' , P_ID ) ; 
INSERT INTO KPEXPFRHD 
( KDLID , KDLKDKID , KDLORDRE , KDLFHVAL , KDLFHVAU , KDLFHBASE , KDLFHMINI , KDLFHMAXI , KDLLIMDEB , KDLLIMFIN ) 
VALUES 
( P_ID , P_EXPRESSION , V_ORDRE , P_FRHVALEUR , P_FRHUNITE , P_FRHTYPE , P_FRHMINI , P_FRHMAXI , P_FRHDATEDEB , P_FRHDATEFIN ) ; 
  
ELSE 
  
UPDATE KPEXPFRHD 
SET KDLFHVAL = P_FRHVALEUR , KDLFHVAU = P_FRHUNITE , KDLFHBASE = P_FRHTYPE , 
KDLFHMINI = P_FRHMINI , KDLFHMAXI = P_FRHMAXI , KDLLIMDEB = P_FRHDATEDEB , KDLLIMFIN = P_FRHDATEFIN 
WHERE KDLID = P_ID AND KDLKDKID = P_EXPRESSION ; 
  
END IF ; 
  
END P1  ; 
  

  

