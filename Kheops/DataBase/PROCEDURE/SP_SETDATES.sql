CREATE PROCEDURE SP_SETDATES ( 
	IN P_CODEAFFAIRE CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_TYPE CHAR(1) , 
	IN P_CODEAVN INTEGER , 
	IN P_CODERSQ INTEGER , 
	IN P_CODEOBJ INTEGER , 
	IN P_CODEFOR INTEGER , 
	IN P_CODEOPT INTEGER , 
	IN P_CODEGARAN INTEGER , 
	IN P_PERIMETRE CHAR(3) ) 
	LANGUAGE SQL 
	SPECIFIC SP_SETDATES 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_DATEDEB INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREDEB INTEGER DEFAULT 0 ; 
	DECLARE V_DATEFIN INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREFIN INTEGER DEFAULT 0 ; 
  
	DECLARE V_DATEDEBOBJ INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREDEBOBJ INTEGER DEFAULT 0 ; 
	DECLARE V_DATEFINOBJ INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREFINOBJ INTEGER DEFAULT 0 ; 
  
	DECLARE V_DATEDEBRSQ INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREDEBRSQ INTEGER DEFAULT 0 ; 
	DECLARE V_DATEFINRSQ INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREFINRSQ INTEGER DEFAULT 0 ; 
  
	DECLARE V_DATEDEBAFF INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREDEBAFF INTEGER DEFAULT 0 ; 
	DECLARE V_DATEFINAFF INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREFINAFF INTEGER DEFAULT 0 ; 
  
	DECLARE V_DATEDEBGAR INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREDEBGAR INTEGER DEFAULT 0 ; 
	DECLARE V_DATEFINGAR INTEGER DEFAULT 0 ; 
	DECLARE V_HEUREFINGAR INTEGER DEFAULT 0 ; 
  
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	DECLARE V_OUT INTEGER DEFAULT 0 ; 
	 
	DECLARE V_DATEDEBSTD NUMERIC ( 12 , 0 ) ; 
	DECLARE V_DATEFINSTD NUMERIC ( 12 , 0 ) ; 
	 
	DECLARE V_ISSORTI CHAR ( 1 ) DEFAULT 'N' ; 
	DECLARE V_DATEDEBAVN INTEGER DEFAULT 0 ; 
	 
	SET V_COUNT = 0 ; 
	SET V_OUT = 0 ; 
  
	SET P_CODEAFFAIRE = F_PADLEFT ( 9 , P_CODEAFFAIRE ) ; 
  
	SELECT PBAVA * 10000 + PBAVM * 100 + PBAVJ INTO V_DATEDEBAVN FROM YPOBASE 
	WHERE PBIPB = P_CODEAFFAIRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 
  
	CASE TRIM ( P_PERIMETRE ) 
		WHEN 'RSQ' THEN 
			SELECT PBEFA * 10000 + PBEFM * 100 + PBEFJ , PBEFH , PBFEA * 10000 + PBFEM * 100 + PBFEJ , PBFEH , 
				JEVDA * 10000 + JEVDM * 100 + JEVDJ , JEVDH , JEVFA * 10000 + JEVFM * 100 + JEVFJ , JEVFH 
				INTO V_DATEDEBAFF , V_HEUREDEBAFF , V_DATEFINAFF , V_HEUREFINAFF , 
					V_DATEDEBRSQ , V_HEUREDEBRSQ , V_DATEFINRSQ , V_HEUREFINRSQ			 
			FROM YPOBASE 
				INNER JOIN YPRTRSQ ON JEIPB = PBIPB AND JEALX = PBALX AND JERSQ = P_CODERSQ 
			WHERE PBIPB = P_CODEAFFAIRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ;	 
			 
			IF ( V_DATEDEBRSQ = 0 ) THEN			 
				SET V_DATEDEB = V_DATEDEBAFF ; 
				SET V_HEUREDEB = V_HEUREDEBAFF ;	 
			ELSE 
				SET V_DATEDEB = V_DATEDEBRSQ ; 
				SET V_HEUREDEB = V_HEUREDEBRSQ ; 
			END IF ; 
			 
			IF ( V_DATEFINRSQ = 0 ) THEN				 
				SET V_DATEFIN = V_DATEFINAFF ; 
				SET V_HEUREFIN = V_HEUREFINAFF ; 
			ELSE 
				SET V_DATEFIN = V_DATEFINRSQ ; 
				SET V_HEUREFIN = V_HEUREFINRSQ ; 
			END IF ; 
			 
			SET V_COUNT = 0 ; 
			SELECT COUNT ( * ) INTO V_COUNT FROM KJOBSORTI 
				WHERE IPB = P_CODEAFFAIRE AND ALX = P_VERSION AND TYP = P_TYPE AND AVN = P_CODEAVN AND RSQ = P_CODERSQ ; 
  
			IF ( V_DATEFIN <> 0 AND V_DATEFIN < V_DATEDEBAVN ) THEN 
				SET V_ISSORTI = 'O' ; 
			ELSE 
				SET V_ISSORTI = 'N' ; 
			END IF ; 
			 
			IF ( V_COUNT = 0 ) THEN 
				INSERT INTO KJOBSORTI 
					( IPB , ALX , TYP , AVN , RSQ , OBJ , FORM , OPT , GARAN , 
						DATEDEB , HEUREDEB , DATEFIN , HEUREFIN , SORTI ) 
				VALUES 
					( P_CODEAFFAIRE , P_VERSION , P_TYPE , P_CODEAVN , P_CODERSQ , P_CODEOBJ , P_CODEFOR , P_CODEOPT , P_CODEGARAN , 
						V_DATEDEB , V_HEUREDEB , V_DATEFIN , V_HEUREFIN , V_ISSORTI ) ; 
			ELSE 
				UPDATE KJOBSORTI 
					SET DATEDEB = V_DATEDEB , HEUREDEB = V_HEUREDEB , DATEFIN = V_DATEFIN , HEUREFIN = V_HEUREFIN , SORTI = V_ISSORTI 
				WHERE IPB = P_CODEAFFAIRE AND ALX = P_VERSION AND TYP = P_TYPE AND AVN = P_CODEAVN AND RSQ = P_CODERSQ ; 
			END IF ; 
			 
			 
		WHEN 'OBJ' THEN 
			SELECT PBEFA * 10000 + PBEFM * 100 + PBEFJ , PBEFH , PBFEA * 10000 + PBFEM * 100 + PBFEJ , PBFEH , 
				JEVDA * 10000 + JEVDM * 100 + JEVDJ , JEVDH , JEVFA * 10000 + JEVFM * 100 + JEVFJ , JEVFH , 
				JGVDA * 10000 + JGVDM * 100 + JGVDJ , JGVDH , JGVFA * 10000 + JGVFM * 100 + JGVFJ , JGVFH 
				INTO V_DATEDEBAFF , V_HEUREDEBAFF , V_DATEFINAFF , V_HEUREFINAFF , 
					V_DATEDEBRSQ , V_HEUREDEBRSQ , V_DATEFINRSQ , V_HEUREFINRSQ , 
					V_DATEDEBOBJ , V_HEUREDEBOBJ , V_DATEFINOBJ , V_HEUREFINOBJ 
			FROM YPOBASE 
				INNER JOIN YPRTRSQ ON JEIPB = PBIPB AND JEALX = PBALX AND JERSQ = P_CODERSQ 
				INNER JOIN YPRTOBJ ON JGIPB = JEIPB AND JGALX = JEALX AND JGRSQ = JERSQ AND JGOBJ = P_CODEOBJ 
			WHERE PBIPB = P_CODEAFFAIRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ;		 
	 
			IF ( V_DATEDEBOBJ = 0 ) THEN 
				IF ( V_DATEDEBRSQ = 0 ) THEN 
					SET V_DATEDEB = V_DATEDEBAFF ; 
					SET V_HEUREDEB = V_HEUREDEBAFF ; 
				ELSE 
					SET V_DATEDEB = V_DATEDEBRSQ ; 
					SET V_HEUREDEB = V_HEUREDEBRSQ ; 
				END IF ; 
			ELSE 
				SET V_DATEDEB = V_DATEDEBOBJ ; 
				SET V_HEUREDEB = V_HEUREDEBOBJ ; 
			END IF ; 
  
			IF ( V_DATEFINOBJ = 0 ) THEN 
				IF ( V_DATEFINRSQ = 0 ) THEN 
					SET V_DATEFIN = V_DATEFINAFF ; 
					SET V_HEUREFIN = V_HEUREFINAFF ; 
				ELSE 
					SET V_DATEFIN = V_DATEFINRSQ ; 
					SET V_HEUREFIN = V_HEUREFINRSQ ; 
				END IF ; 
			ELSE 
				SET V_DATEFIN = V_DATEFINOBJ ; 
				SET V_HEUREFIN = V_HEUREFINOBJ ; 
			END IF ; 
			 
			 
			 
			SET V_COUNT = 0 ; 
			SELECT COUNT ( * ) INTO V_COUNT FROM KJOBSORTI 
				WHERE IPB = P_CODEAFFAIRE AND ALX = P_VERSION AND TYP = P_TYPE AND AVN = P_CODEAVN 
					AND RSQ = P_CODERSQ AND OBJ = P_CODEOBJ AND FORM = P_CODEFOR AND OPT = P_CODEOPT AND GARAN = P_CODEGARAN ; 
  
			IF ( V_DATEFIN <> 0 AND V_DATEFIN < V_DATEDEBAVN ) THEN 
				SET V_ISSORTI = 'O' ; 
			ELSE 
				SET V_ISSORTI = 'N' ; 
			END IF ; 
			 
			IF ( V_COUNT = 0 ) THEN 
				INSERT INTO KJOBSORTI 
					( IPB , ALX , TYP , AVN , RSQ , OBJ , FORM , OPT , GARAN , 
						DATEDEB , HEUREDEB , DATEFIN , HEUREFIN , SORTI ) 
				VALUES 
					( P_CODEAFFAIRE , P_VERSION , P_TYPE , P_CODEAVN , P_CODERSQ , P_CODEOBJ , P_CODEFOR , P_CODEOPT , P_CODEGARAN , 
						V_DATEDEB , V_HEUREDEB , V_DATEFIN , V_HEUREFIN , V_ISSORTI ) ; 
			ELSE 
				UPDATE KJOBSORTI 
					SET DATEDEB = V_DATEDEB , HEUREDEB = V_HEUREDEB , DATEFIN = V_DATEFIN , HEUREFIN = V_HEUREFIN , SORTI = V_ISSORTI 
				WHERE IPB = P_CODEAFFAIRE AND ALX = P_VERSION AND TYP = P_TYPE AND AVN = P_CODEAVN 
					AND RSQ = P_CODERSQ AND OBJ = P_CODEOBJ AND FORM = P_CODEFOR AND OPT = P_CODEOPT AND GARAN = P_CODEGARAN ; 
			END IF ; 
  
		WHEN 'GAR' THEN 
			SELECT KDEDATDEB , KDEHEUDEB , KDEDATFIN , KDEHEUFIN INTO V_DATEDEBGAR , V_HEUREDEBGAR , V_DATEFINGAR , V_HEUREFINGAR FROM KPGARAN WHERE KDEID = P_CODEGARAN ; 
			IF ( V_DATEDEBGAR = 0 OR V_DATEFINGAR = 0 ) THEN 
				CALL SP_GETDATEGARSTD ( P_CODEAFFAIRE , P_VERSION , P_TYPE , P_CODEFOR , P_CODEOPT , P_CODEGARAN , V_DATEDEBSTD , V_DATEFINSTD ) ; 
				 
				IF ( V_DATEDEBGAR = 0 ) THEN 
					SET V_HEUREDEB = MOD ( V_DATEDEBSTD , 10000 ) ; 
					SET V_DATEDEB = V_DATEDEBSTD / 10000 ; 
				ELSE 
					SET V_HEUREDEB = V_HEUREDEBGAR / 100 ; 
					SET V_DATEDEB = V_DATEDEBGAR ; 
				END IF ; 
				IF ( V_DATEFINGAR = 0 ) THEN 
					SET V_HEUREFIN = MOD ( V_DATEFINSTD , 10000 ) ; 
					SET V_DATEFIN = V_DATEFINSTD / 10000 ; 
				ELSE 
					SET V_HEUREFIN = V_HEUREFINGAR / 100 ; 
					SET V_DATEFIN = V_DATEFINGAR ; 
				END IF ; 
			ELSE 
				SET V_HEUREDEB = V_HEUREDEBGAR / 100 ; 
				SET V_DATEDEB = V_DATEDEBGAR ; 
				SET V_HEUREFIN = V_HEUREFINGAR / 100 ; 
				SET V_DATEFIN = V_DATEFINGAR ; 
			END IF ; 
  
			SET V_COUNT = 0 ; 
			SELECT COUNT ( * ) INTO V_COUNT FROM KJOBSORTI 
				WHERE IPB = P_CODEAFFAIRE AND ALX = P_VERSION AND TYP = P_TYPE AND AVN = P_CODEAVN 
					AND RSQ = P_CODERSQ AND OBJ = P_CODEOBJ AND FORM = P_CODEFOR AND OPT = P_CODEOPT AND GARAN = P_CODEGARAN ; 
  
			IF ( V_DATEFIN <> 0 AND V_DATEFIN < V_DATEDEBAVN ) THEN 
				SET V_ISSORTI = 'O' ; 
			ELSE 
				SET V_ISSORTI = 'N' ; 
			END IF ; 
			 
			IF ( V_COUNT = 0 ) THEN 
				INSERT INTO KJOBSORTI 
					( IPB , ALX , TYP , AVN , RSQ , OBJ , FORM , OPT , GARAN , 
						DATEDEB , HEUREDEB , DATEFIN , HEUREFIN , SORTI ) 
				VALUES 
					( P_CODEAFFAIRE , P_VERSION , P_TYPE , P_CODEAVN , P_CODERSQ , P_CODEOBJ , P_CODEFOR , P_CODEOPT , P_CODEGARAN , 
						V_DATEDEB , V_HEUREDEB , V_DATEFIN , V_HEUREFIN , V_ISSORTI ) ; 
			ELSE 
				UPDATE KJOBSORTI 
					SET DATEDEB = V_DATEDEB , HEUREDEB = V_HEUREDEB , DATEFIN = V_DATEFIN , HEUREFIN = V_HEUREFIN , SORTI = V_ISSORTI 
				WHERE IPB = P_CODEAFFAIRE AND ALX = P_VERSION AND TYP = P_TYPE AND AVN = P_CODEAVN 
					AND RSQ = P_CODERSQ AND OBJ = P_CODEOBJ AND FORM = P_CODEFOR AND OPT = P_CODEOPT AND GARAN = P_CODEGARAN ; 
			END IF ; 
			 
		ELSE 
			SET V_OUT = 1 ; 
	END CASE ; 
  
END P1  ;



