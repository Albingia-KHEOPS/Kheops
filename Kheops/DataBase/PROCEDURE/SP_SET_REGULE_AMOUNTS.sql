
  
CREATE PROCEDURE  SP_SET_REGULE_AMOUNTS ( 
	IN P_REGULEID CHAR(15) 
	) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_SET_REGULE_AMOUNTS 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
	
		DECLARE V_RGID BIGINT DEFAULT 0 ; 
		DECLARE V_MODE CHAR(10) DEFAULT '';
		DECLARE V_TYPE CHAR(10) DEFAULT '';
		
		SET V_RGID = CAST ( P_REGULEID AS BIGINT ) ;
		
		SELECT KHWMRG, PBBRA INTO V_MODE, V_TYPE
		FROM KPRGU 
		INNER JOIN YPOBASE ON PBIPB = KHWIPB AND PBALX = KHWALX AND PBTYP = KHWTYP
		WHERE KHWID = V_RGID;
		
		
		/* update KPRGUR */
		FOR FORLOOPRSQ_GUG AS FREE_LIST CURSOR FOR 
			SELECT KHXRSQ RSQ, SUM(KHXMHC) MHC, SUM(KHXMHT) MHT, SUM(KHXCNH) CNH, SUM(KHXMTT) MTT, SUM(KHXTTT) TTT 
			FROM KPRGUG 
			WHERE KHXKHWID = V_RGID
			GROUP BY KHXRSQ
		DO
		
			IF (TRIM(V_MODE) = 'BNS' OR TRIM(V_MODE) = 'BURNER' OR (TRIM(V_MODE) =  'PB') AND TRIM(V_TYPE) = 'TR') THEN
				UPDATE KPRGUR SET KILMHT = MHT, KILCNH = CNH, KILMTT = MTT, KILTTT = TTT
				WHERE KILKHWID = V_RGID AND KILRSQ = RSQ;
			
			ELSE
				UPDATE KPRGUR SET KILMHC = MHC, KILMHT = MHT, KILCNH = CNH, KILMTT = MTT, KILTTT = TTT
				WHERE KILKHWID = V_RGID AND KILRSQ = RSQ;
			END IF;
		
		END FOR;
		/* END update KPRGUR */
		
		
		/* update KPRGU */
		
		FOR FORLOOPRSQ_GUR AS FREE_LIST CURSOR FOR 
			SELECT KILKHWID REGID, SUM(KILMHC) MHC, SUM(KILMHT) MHT, SUM(KILCNH) CNH, SUM(KILMTT) MTT, SUM(KILTTT) TTT, 
									SUM(KILMTX) MTX, SUM(KILCNT) CNT, SUM(KILECT) ECT, SUM(KILEMT) EMT
			FROM KPRGUR
			WHERE KILKHWID = V_RGID
			GROUP BY KILKHWID
		DO
			IF (TRIM(V_MODE) = 'BNS' OR TRIM(V_MODE) = 'BURNER' OR (TRIM(V_MODE) =  'PB') AND TRIM(V_TYPE) = 'TR') THEN
				UPDATE KPRGU 
				SET 	KHWMHT = MHT, KHWCNH = CNH, 
						KHWMTT = MTT, KHWTTT = TTT, KHWMTX = MTX, 
						KHWCNT = CNT, KHWECT = ECT, KHWEMT = EMT
				WHERE KHWID = V_RGID;
			ELSE
				UPDATE KPRGU 
				SET 	KHWMHC = MHC, KHWMHT = MHT, KHWCNH = CNH, 
						KHWMTT = MTT, KHWTTT = TTT, KHWMTX = MTX, 
						KHWCNT = CNT, KHWECT = ECT, KHWEMT = EMT
				WHERE KHWID = V_RGID;
			END IF;
		
		
		END FOR;
		
		/* END update KPRGU */
		
		
	END P1;

