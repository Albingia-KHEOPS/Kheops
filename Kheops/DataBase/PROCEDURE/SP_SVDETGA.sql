CREATE PROCEDURE SP_SVDETGA ( 
	IN P_GUIDID INTEGER , 
	IN P_CODEAVENANT INTEGER , 
	IN P_DATEDEB INTEGER , 
	IN P_DATEFIN INTEGER , 
	IN P_HEUREDEB INTEGER , 
	IN P_HEUREFIN INTEGER , 
	IN P_DUREE INTEGER , 
	IN P_DUREEUNITE CHAR(1) , 
	IN P_GARANTIEINDEXE CHAR(1) , 
	IN P_CATNAT CHAR(1) , 
	IN P_MONTANTREF CHAR(1) , 
	IN P_APPLICATION CHAR(1) , 
	IN P_TYPEEMISSION CHAR(1) , 
	IN P_CODETAXE CHAR(2) , 
	IN P_ALIMAUTO CHAR(1) , 
	OUT P_FLAGMODIF CHAR(1) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_SVDETGA 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_GARANTIEINDEXE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CATNAT CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_MONTANTREF CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_APPLICATION CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_TYPEEMISSION CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CODETAXE CHAR ( 2 ) DEFAULT '' ; 
	DECLARE V_ALIMAUTO CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_DUREEUNITE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CREATEAVN INTEGER DEFAULT 0 ; 
	 
	 
	DECLARE V_CODEAFFAIRE CHAR ( 9 ) DEFAULT '' ; 
	DECLARE V_VERSION INTEGER DEFAULT 0 ; 
	DECLARE V_TYPE CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_CODEFOR INTEGER DEFAULT 0 ; 
	DECLARE V_CODEOPT INTEGER DEFAULT 0 ; 
	DECLARE V_GARANTIE CHAR ( 10 ) DEFAULT '' ; 
	DECLARE V_COUNT INTEGER DEFAULT 0 ; 
	DECLARE V_REPVAL CHAR ( 1 ) DEFAULT '' ; 
	DECLARE V_INVENVAL NUMERIC ( 13 , 2 ) DEFAULT 0 ; 
	DECLARE V_INVENTYP CHAR ( 5 ) DEFAULT '' ; 
	DECLARE V_INVENUNIT CHAR ( 1 ) DEFAULT '' ; 
	 
	SET P_FLAGMODIF = 'N' ; 
	 
	SELECT KDEIPB , KDEALX , KDETYP , KDEFOR , KDEOPT , KDEGARAN , KDEPIND , KDEPCATN , KDEPREF , KDEPPRP , KDEPEMI , KDEPTAXC , KDEALA , KDEDURUNI , KDECRAVN 
		INTO V_CODEAFFAIRE , V_VERSION , V_TYPE , V_CODEFOR , V_CODEOPT , V_GARANTIE , V_GARANTIEINDEXE , V_CATNAT , V_MONTANTREF , V_APPLICATION , V_TYPEEMISSION , V_CODETAXE , V_ALIMAUTO , V_DUREEUNITE , V_CREATEAVN 
	FROM KPGARAN 
	WHERE KDEID = P_GUIDID ; 
  
	SET V_CODEAFFAIRE = F_PADLEFT ( 9 , V_CODEAFFAIRE ) ; 
	 
	IF ( P_DATEDEB <> 0 OR P_DATEFIN <> 0 OR V_GARANTIEINDEXE <> P_GARANTIEINDEXE OR V_CATNAT <> P_CATNAT OR V_MONTANTREF <> P_MONTANTREF OR 
			P_DUREE <> 0 OR P_DUREEUNITE <> V_DUREEUNITE OR 
			V_APPLICATION <> P_APPLICATION OR V_TYPEEMISSION <> P_TYPEEMISSION OR V_CODETAXE <> P_CODETAXE OR V_ALIMAUTO <> P_ALIMAUTO ) THEN 
		SET P_FLAGMODIF = 'O' ; 
	END IF ; 
	 
	/* SI LE CODE AVENANT DE CRÉATION DE LA GARANTIE = AU CODE AVENANT EN PARAMÈTRE => MISE À ZÉRO DU CODE AVENANT EN PARAMÈTRE */ 
	/* ON NE MET PAS LA MÊME VALEUR DANS L'AVENANT DE MODIFICATION ET DE CRÉATION */ 
	IF ( P_CODEAVENANT = V_CREATEAVN ) THEN 
		SET P_CODEAVENANT = 0 ; 
	END IF ; 
	 
	UPDATE KPGARAN 
		SET KDEDATDEB = P_DATEDEB , KDEHEUDEB = P_HEUREDEB , KDEDATFIN = P_DATEFIN , 
			KDEHEUFIN = P_HEUREFIN , KDEDUREE = P_DUREE , KDEDURUNI = P_DUREEUNITE , KDEINA = P_GARANTIEINDEXE , KDECATNAT = P_CATNAT , 
			KDEALIREF = P_MONTANTREF , KDEPRP = P_APPLICATION , KDETYPEMI = P_TYPEEMISSION , KDETAXCOD = P_CODETAXE , KDEMODI = P_FLAGMODIF , 
			KDEALA = P_ALIMAUTO , KDEMAJAVN = P_CODEAVENANT 
	WHERE KDEID = P_GUIDID ; 
	 
	/* MODIFICATION DU 2015-03-06 POUR LE REPORT DE LA VALEUR DE L'INVENTAIRE */ 
	SET V_COUNT = 0 ; 
	SELECT COUNT ( * ) INTO V_COUNT FROM KPINVAPP 
		WHERE KBGIPB = V_CODEAFFAIRE AND KBGALX = V_VERSION AND KBGTYP = V_TYPE AND KBGFOR = V_CODEFOR AND KBGGAR = V_GARANTIE ; 
	IF ( V_COUNT > 0 ) THEN 
		SELECT KBEREPVAL , KBEVAL , KBEVAT , KBEVAU INTO V_REPVAL , V_INVENVAL , V_INVENTYP , V_INVENUNIT 
			FROM KPINVEN 
			INNER JOIN KPINVAPP ON KBGKBEID = KBEID 
			WHERE KBGIPB = V_CODEAFFAIRE AND KBGALX = V_VERSION AND KBGTYP = V_TYPE AND KBGFOR = V_CODEFOR AND KBGGAR = V_GARANTIE ; 
			 
		IF ( TRIM ( V_REPVAL ) = 'O' ) THEN 
			IF ( TRIM ( V_ALIMAUTO ) = 'I' ) THEN 
				UPDATE KPGARAN 
					SET KDEASVALO = V_INVENVAL , KDEASVALA = V_INVENVAL , KDEASVALW = 0 , KDEASUNIT = V_INVENUNIT , KDEASBASE = V_INVENTYP 
				WHERE KDEID = P_GUIDID ; 
			ELSE 
				UPDATE KPGARAN 
					SET KDEASVALW = V_INVENVAL 
				WHERE KDEID = P_GUIDID ; 
			END IF ; 
		END IF ;	 
	END IF ; 
	/* FIN DE MODIFICATION */ 
  
END P1  ;


