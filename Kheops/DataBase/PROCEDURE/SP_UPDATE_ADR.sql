CREATE OR REPLACE PROCEDURE SP_UPDATE_ADR ( 
	IN P_ACTION_YADRESS CHAR(6),
	IN P_NUMVOIE CHAR(10) , 
	IN P_NUMVOIE2 CHAR(15) , 
	IN P_CP CHAR(5) , 	
	IN P_CPX CHAR(5) , 
	IN P_CHRONO_YADRESS INTEGER ,
	IN P_INTCP INTEGER ,
	IN P_INTCPX INTEGER,
	IN P_BATIMENT CHAR(32) ,
	IN P_EXTVOIE CHAR (1),
	IN P_VOIE CHAR(32),
	IN P_BP CHAR(32),
	IN P_LOC CHAR(5),
	IN P_DEP CHAR(2),
	IN P_VILLE CHAR(26),
	IN P_VOIECOMPLETE CHAR(32),
	IN P_VILLECOMPLETE CHAR(32),
	IN P_VILLEX CHAR(32),
	IN P_MATHEX INTEGER,
	IN P_ALLOWNULL INTEGER,
	IN P_ACTION_YPRTADR CHAR(12),
	IN P_CODEOFFRE CHAR(9) , 
	IN P_VERSION INTEGER ,
	IN P_TYPE CHAR(1) , 
	IN P_CODERSQ INTEGER ,
	IN P_CODEOBJ INTEGER ,
	IN P_CHRONO_YPRTADR INTEGER,
	IN P_ACTION_YPOBASE CHAR (12),
	IN P_CHRONO_YPOBASE INTEGER,
	IN P_DEP_YPOBASE CHAR(2),
	IN P_CP_YPOBASE CHAR(5),
	IN P_LATITUDE NUMERIC(10, 7) , 
	IN P_LONGITUDE NUMERIC(10, 7) ) 
	DYNAMIC RESULT SETS 1 
	LANGUAGE SQL 
	SPECIFIC SP_UPDATE_ADR
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC

		DECLARE V_NUMVOIE INTEGER DEFAULT 0 ;
		DECLARE V_AD1 CHAR ( 32 ) DEFAULT '' ; 
		DECLARE V_AD2 CHAR ( 32 ) DEFAULT '' ;
		DECLARE V_COUNT INTEGER DEFAULT 0; 		
		
		SET V_NUMVOIE = CAST ( ('0' CONCAT TRIM(P_NUMVOIE)) AS INTEGER ) ;
		
		IF ( P_BATIMENT != '' ) THEN 
			SET V_AD1 = TRIM ( P_BATIMENT ) ; 
			SET V_AD2 = F_BUILDADDRESS ( V_NUMVOIE , P_NUMVOIE2 , P_EXTVOIE , P_VOIE ) ; 
		ELSE 
			SET V_AD1 = F_BUILDADDRESS ( V_NUMVOIE , P_NUMVOIE2 , P_EXTVOIE , P_VOIE ) ; 
			SET V_AD2 = TRIM ( P_BP ) ; 
		END IF ; 
		
		IF (TRIM(P_ACTION_YADRESS) != '') THEN
			/*  START YADRESS */
			IF (TRIM(P_ACTION_YADRESS) = 'DELETE') THEN
				/***** Edit : Supprimer les coordonnées de KGeoloc  *******/
				DELETE FROM KGEOLOC WHERE KGEOCHR = P_CHRONO_YADRESS ; 
				/***** Fin Edit :  Supprimer les coordonnées de KGeoloc *****/
				DELETE FROM YADRESS WHERE ABPCHR = P_CHRONO_YADRESS ; 
			ELSE
				IF (TRIM(P_ACTION_YADRESS) = 'CREATE') THEN
					INSERT INTO YADRESS 
					( ABPLG3 , ABPEXT, ABPLBN , ABPLG4 , ABPLG5 , ABPLOC , ABPDP6 , ABPVI6 , ABPL4F , ABPL6F , ABPVIX , ABPMAT , ABPCHR ) 
					VALUES 
					( UPPER(P_BATIMENT) , UPPER(P_EXTVOIE) , UPPER(P_NUMVOIE2) , UPPER(P_VOIE) , UPPER(P_BP) , UPPER(P_LOC) , UPPER(P_DEP) , UPPER(P_VILLE) , UPPER(P_VOIECOMPLETE) , UPPER(P_VILLECOMPLETE) , UPPER(P_VILLEX) , P_MATHEX , P_CHRONO_YADRESS ) ; 
					/***** Edit:Insérer les coordonnées dans KGEOLOC  *******/
					INSERT INTO KGEOLOC (KGEOCHR, LONGITUDE, LATITUDE) VALUES (P_CHRONO_YADRESS,P_LONGITUDE,P_LATITUDE );
					/*** Fin Edit: Insérer les coordonnées dans KGEOLOC ******/
				END IF;
			
				IF (TRIM(P_ACTION_YADRESS) = 'UPDATE') THEN
					UPDATE YADRESS 
					SET ABPLG3 = UPPER(P_BATIMENT) , ABPEXT = UPPER(P_EXTVOIE) , ABPLBN = UPPER(P_NUMVOIE2) , ABPLG4 = UPPER(P_VOIE) , ABPLG5 = UPPER(P_BP) , 
						ABPLOC = UPPER(P_LOC) , ABPDP6 = UPPER(P_DEP) , ABPVI6 = UPPER(P_VILLE) , ABPL4F = UPPER(P_VOIECOMPLETE) , 
						ABPL6F = UPPER(P_VILLECOMPLETE) , ABPVIX = UPPER(P_VILLEX) , ABPMAT = P_MATHEX 
					WHERE ABPCHR = P_CHRONO_YADRESS ; 
					/***** Edit:Mise à jour des coordonnées dans KGEOLOC  *********/
					UPDATE KGEOLOC
					SET LONGITUDE = P_LONGITUDE, LATITUDE = P_LATITUDE, TSMAJ = CURRENT_DATE
					WHERE KGEOCHR = P_CHRONO_YADRESS ; 
					/***** Fin Edit:Mise à jour des coordonnées dans KGEOLOC  *****/
				END IF;
				
				IF (P_ALLOWNULL > 0) THEN
					UPDATE YADRESS SET ABPCEX = P_INTCPX, ABPCP6 = P_INTCP, ABPNUM = V_NUMVOIE
					WHERE ABPCHR = P_CHRONO_YADRESS ;
				ELSE
					IF ( P_CPX != '' ) THEN 
						UPDATE YADRESS SET ABPCEX = P_INTCPX WHERE ABPCHR = P_CHRONO_YADRESS ; 
					END IF ; 

					IF ( P_CP != '' ) THEN 
						UPDATE YADRESS SET ABPCP6 = P_INTCP WHERE ABPCHR = P_CHRONO_YADRESS ; 
					END IF ; 
					 
					IF ( P_NUMVOIE != '' ) THEN 
						UPDATE YADRESS SET ABPNUM = V_NUMVOIE WHERE ABPCHR = P_CHRONO_YADRESS ; 
					END IF ; 
					
				END IF;
			
			END IF;

			/* END YADRESS */
		END IF;

		IF (TRIM(P_ACTION_YPRTADR) != '') THEN
			/* START YPRTADR */
			IF (TRIM(P_ACTION_YPRTADR) = 'DELETE') THEN
				DELETE FROM YPRTADR WHERE JFADH = P_CHRONO_YPRTADR ;
			ELSE		
				IF (TRIM(P_ACTION_YPRTADR) = 'CREATE') THEN
					SELECT COUNT(*) INTO V_COUNT FROM YPRTADR WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = P_CODERSQ AND JFOBJ = P_CODEOBJ ;
					IF (V_COUNT = 0) THEN
						INSERT INTO YPRTADR 
							( JFADH , JFAD1 , JFAD2 , JFDEP , JFCPO , JFVIL , JFIPB , JFALX , JFRSQ , JFOBJ, JFPAY ) 
						VALUES 
							( P_CHRONO_YPRTADR , V_AD1 , V_AD2 , P_DEP , P_CP , P_VILLE , P_CODEOFFRE , P_VERSION , P_CODERSQ , P_CODEOBJ, '' ) ; 
					ELSE
						SET P_ACTION_YPRTADR = 'UPDATE_SET';
					END IF;
				END IF;
			
				IF (TRIM(P_ACTION_YPRTADR) = 'UPDATE_SET') THEN
					UPDATE YPRTADR 
					SET JFADH = P_CHRONO_YPRTADR , JFAD1 = V_AD1 , JFAD2 = V_AD2 , JFDEP = P_DEP , JFCPO = P_CP , JFVIL = P_VILLE 
					WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = P_CODERSQ AND JFOBJ = P_CODEOBJ ; 	
				END IF;
				
				IF (TRIM(P_ACTION_YPRTADR) = 'UPDATE_WHERE') THEN
					UPDATE YPRTADR 
					SET JFAD1 = V_AD1 , JFAD2 = V_AD2 , JFDEP = P_DEP , JFCPO = P_CP , JFVIL = P_VILLE 
					WHERE JFIPB = P_CODEOFFRE AND JFALX = P_VERSION AND JFRSQ = P_CODERSQ AND JFOBJ = P_CODEOBJ AND JFADH = P_CHRONO_YPRTADR; 	
				END IF;
			END IF;


			/* END YPRTADR */

		END IF;
		
		IF (TRIM(P_ACTION_YPOBASE) != '') THEN
			IF (TRIM(P_ACTION_YPOBASE) = 'UPDATE_SET') THEN
				UPDATE YPOBASE 
				SET PBADH = P_CHRONO_YPOBASE , PBAD1 = V_AD1 , PBAD2 = V_AD2 , PBDEP = P_DEP_YPOBASE , PBCPO = P_CP_YPOBASE , PBVIL = P_VILLE , PBPAY = '' 
				WHERE PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 	
			END IF;
			
			IF (TRIM(P_ACTION_YPOBASE) = 'UPDATE_WHERE') THEN
				UPDATE YPOBASE
				SET PBAD1 = V_AD1 , PBAD2 = V_AD2 , PBDEP = P_DEP_YPOBASE , PBCPO = P_CP_YPOBASE , PBVIL = P_VILLE
				WHERE PBADH = P_CHRONO_YPOBASE AND PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBTYP = P_TYPE ; 	
			END IF;
		END IF;
	END P1;
