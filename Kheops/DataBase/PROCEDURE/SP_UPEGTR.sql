CREATE PROCEDURE SP_UPEGTR ( 
	IN P_TYPE_OFFRE CHAR(1) , 
	IN P_ID_OFFRE CHAR(9) , 
	IN P_VERSION_OFFRE INTEGER , 
	IN P_DATE_DEBUT INTEGER , 
	IN P_DATE_FIN INTEGER , 
	IN P_ID_ENGAGEMENT NUMERIC(15, 0) , 
	IN P_ID_TRAITE NUMERIC(15, 0) , 
	IN P_FAMILLE CHAR(10) , 
	IN P_ENG_TOTAL DECIMAL(13, 0) , 
	IN P_ENG_ALBIN DECIMAL(13, 0) , 
	IN P_MAJ_USER CHAR(10) , 
	IN P_MAJ_DATE NUMERIC(8, 0) , 
	IN P_MODE_MAJ CHAR(1) , 
	OUT P_RETOUR NUMERIC(15, 0) ) 
	LANGUAGE SQL 
	SPECIFIC SP_UPEGTR 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
DECLARE V_TOTAL_PART_ALBIN DECIMAL ( 13 , 0 ) DEFAULT 0 ; 
DECLARE V_NBR_ENG INTEGER DEFAULT 0 ; 
DECLARE V_KDOID INTEGER DEFAULT 0 ; 
DECLARE V_PBNPL CHAR ( 1 ) ; 
DECLARE V_PBAPP DECIMAL ( 5 , 2 ) ; 
DECLARE V_STATUT_ACTIF CHAR ( 1 ) ; 
IF ( P_MODE_MAJ = 'U' ) THEN 
SELECT SUM ( KDPENA ) INTO V_TOTAL_PART_ALBIN 
FROM KPENGFAM 
WHERE KDPKDOID = P_ID_ENGAGEMENT ; 
  
UPDATE KPENGFAM 
SET KDPFAM = P_FAMILLE , 
KDPENG = P_ENG_ALBIN , 
KDPENA = P_ENG_ALBIN , 
KDPMAJU = P_MAJ_USER , 
KDPMAJD = P_MAJ_DATE 
WHERE KDPID = P_ID_TRAITE ; 
UPDATE KPENG 
SET KDOMAJU = P_MAJ_USER , 
KDOMAJD = P_MAJ_DATE , 
KDOENG = V_TOTAL_PART_ALBIN , 
KDOENA = V_TOTAL_PART_ALBIN 
WHERE KDOID = P_ID_ENGAGEMENT ; 
SET P_RETOUR = P_ID_ENGAGEMENT ; 
END IF ; 
IF ( P_MODE_MAJ = 'I' ) THEN 
SELECT COUNT ( * ) INTO V_NBR_ENG FROM KPENG WHERE KDOID = P_ID_ENGAGEMENT ; 
IF ( V_NBR_ENG > 0 ) THEN 
UPDATE KPENG 
SET KDOECO = 'N' 
WHERE KDOID = P_ID_ENGAGEMENT ; 
ELSE 
CALL SP_NCHRONO ( 'KDOID' , V_KDOID ) ; 
  
SELECT SUM ( KDPENA ) INTO V_TOTAL_PART_ALBIN 
FROM KPENGFAM ; 
  
SELECT PBNPL , PBAPP INTO V_PBNPL , V_PBAPP 
FROM YPOBASE 
WHERE PBTYP = P_TYPE_OFFRE AND PBIPB = P_ID_OFFRE AND PBALX = P_VERSION_OFFRE ; 
  
INSERT INTO KPENG ( KDOID , KDOTYP , KDOIPB , KDOALX , KDOECO , KDOACT , KDOENGID , KDODATD , KDODATF , KDOCRU , KDOCRD , KDOMAJU , KDOMAJD , 
KDONPL , KDOAPP , KDOENG , KDOENA ) 
VALUES 
( V_KDOID , '' , '' , 0 , 'N' , 'O' , 0 , P_DATE_DEBUT , P_DATE_FIN , P_MAJ_USER , P_MAJ_DATE , 
P_MAJ_USER , P_MAJ_DATE , V_PBNPL , V_PBAPP , V_TOTAL_PART_ALBIN , V_TOTAL_PART_ALBIN ) ; 
SET P_RETOUR = V_KDOID ; 
END IF ; 
END IF ; 
IF ( P_MODE_MAJ = 'D' ) THEN 
DELETE FROM KPENGFAM 
WHERE KDPKDOID = P_ID_ENGAGEMENT ; 
  
DELETE FROM KPENG 
WHERE KDOID = P_ID_ENGAGEMENT ; 
END IF ; 
IF ( P_MODE_MAJ = 'DES' ) THEN 
  
SELECT KDOECO INTO V_STATUT_ACTIF 
FROM KPENG WHERE KDOID = P_ID_ENGAGEMENT ; 
  
UPDATE KPENG 
SET KDOECO = 'N' , 
KDOACT = 'N' , 
KDOMAJU = P_MAJ_USER , 
KDOMAJD = P_MAJ_DATE 
WHERE KDOID = P_ID_ENGAGEMENT ; 
  
IF ( V_STATUT_ACTIF = 'O' ) THEN 
UPDATE KPENG 
SET KDOECO = 'N' 
WHERE KDOID = P_ID_ENGAGEMENT AND KDOACT = 'O' ; 
END IF ; 
END IF ; 
  
END P1  ; 
  

  

