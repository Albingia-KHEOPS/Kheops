
CREATE OR REPLACE PROCEDURE SP_VALIDATIONAFFAIRE (
	IN P_CODEOFFRE CHAR(9) ,
	IN P_VERSION INTEGER ,
	IN P_TYPE CHAR(1) ,
	IN P_AVENANT INTEGER ,
	IN P_MODE CHAR(7) ,
	IN P_ETAT CHAR(1) ,
	IN P_MOTIF CHAR(3) ,
	IN P_YEARNOW INTEGER ,
	IN P_MONTHNOW INTEGER ,
	IN P_DAYNOW INTEGER ,
	IN P_HOURNOW INTEGER ,
	IN P_USER CHAR(10) ,
	OUT P_ERREUR CHAR(128) )
	LANGUAGE SQL
	SPECIFIC SP_VALIDATIONAFFAIRE
	NOT DETERMINISTIC
	MODIFIES SQL DATA
	CALLED ON NULL INPUT
	SET OPTION  ALWBLK = *ALLREAD ,
	ALWCPYDTA = *OPTIMIZE ,
	COMMIT = *CHG ,
	CLOSQLCSR = *ENDMOD ,
	DECRESULT = (31, 31, 00) ,
	DFTRDBCOL = ZALBINKHEO ,
	DYNDFTCOL = *YES ,
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' ,
	DYNUSRPRF = *USER ,
	SRTSEQ = *HEX
	P1 : BEGIN ATOMIC

	DECLARE V_NBLIGNE INTEGER DEFAULT 0 ;
	DECLARE V_EXIT INTEGER DEFAULT 0 ;
	DECLARE V_NEWLOTID INTEGER DEFAULT 0 ;
	DECLARE V_NEWLOTDID INTEGER DEFAULT 0 ;
	DECLARE V_NEWDOCID INTEGER DEFAULT 0 ;
	DECLARE V_CIBLE CHAR ( 10 ) DEFAULT '' ;
	DECLARE V_COUNT INTEGER DEFAULT 0 ;
	DECLARE V_BRANCHE CHAR ( 2 ) DEFAULT '' ;
	DECLARE V_SBR CHAR ( 3 ) DEFAULT '' ;
	DECLARE V_ACTEGESTION CHAR ( 5 ) DEFAULT '' ;
	DECLARE V_LIB CHAR ( 30 ) DEFAULT '' ;
	DECLARE V_COURTGES INTEGER DEFAULT 0 ;
	DECLARE V_COURTAPP INTEGER DEFAULT 0 ;


	DECLARE V_ETAT CHAR ( 1 ) DEFAULT 'N' ;
	DECLARE V_TTR CHAR ( 5 ) DEFAULT '' ;
	DECLARE V_PER CHAR ( 10 ) DEFAULT '' ;
	DECLARE V_FEA INTEGER DEFAULT 0 ;
	DECLARE V_FEM INTEGER DEFAULT 0 ;
	DECLARE V_FEJ INTEGER DEFAULT 0 ;
	DECLARE V_FEH INTEGER DEFAULT 0 ;

	SET P_CODEOFFRE = LPAD ( RTRIM ( P_CODEOFFRE ) , 9, ' ');

	SET P_ERREUR = '' ;
	SELECT KAACIBLE INTO V_CIBLE FROM KPENT WHERE KAAIPB = P_CODEOFFRE AND KAAALX = P_VERSION AND KAATYP = P_TYPE ;

	SELECT PBETA INTO V_ETAT FROM YPOBASE WHERE PBIPB = P_CODEOFFRE AND PBTYP = P_TYPE AND PBALX = P_VERSION ;

	IF (
	      (V_ETAT = 'N')
	   OR (V_ETAT = 'A' AND P_ETAT = 'V')
	   OR (V_ETAT = 'V' AND P_ETAT = 'X')
	   ) THEN
		SET V_ETAT = P_ETAT;
	END IF ;

	IF ( UPPER ( V_CIBLE ) NOT LIKE '%RECUP%' ) THEN

		CASE TRIM ( P_MODE )
			WHEN 'EDITER' THEN
				UPDATE YPOBASE
					SET PBETA = V_ETAT , PBSTF = P_MOTIF , PBSTA = P_YEARNOW , PBSTM = P_MONTHNOW , PBSTJ = P_DAYNOW , PBEDT = 'N' , PBTAC = 'N' ,
						PBTAA = 0 , PBTAM = 0 , PBTAJ = 0 , PBDEU = 'SPRINKS' , PBMJU = P_USER , PBMJA = P_YEARNOW , PBMJM = P_MONTHNOW , PBMJJ = P_DAYNOW , PBORK = 'KHE'
				WHERE PBIPB = P_CODEOFFRE AND PBTYP = P_TYPE AND PBALX = P_VERSION ;

			WHEN 'VALIDER' THEN
				UPDATE YPOBASE
					SET PBETA = 'V' , PBSTA = P_YEARNOW , PBSTM = P_MONTHNOW , PBSTJ = P_DAYNOW , PBEDT = 'N' , PBTAC = 'N' , PBTAA = 0 , PBTAM = 0 , PBTAJ = 0 ,
						PBCRU = P_USER , PBCRA = P_YEARNOW , PBCRM = P_MONTHNOW , PBCRJ = P_DAYNOW , PBDEU = 'SPRINKS' ,
						PBMJU = P_USER , PBMJA = P_YEARNOW , PBMJM = P_MONTHNOW , PBMJJ = P_DAYNOW , PBORK = 'KHE'
				WHERE PBIPB = P_CODEOFFRE AND PBTYP = P_TYPE AND PBALX = P_VERSION ;

				IF ( TRIM ( P_TYPE ) = 'O' ) THEN
					SELECT PBICT , PBCTA INTO V_COURTGES , V_COURTAPP FROM YPOBASE WHERE PBIPB = P_CODEOFFRE AND PBTYP = P_TYPE AND PBALX = P_VERSION ;

					IF ( V_COURTGES <> V_COURTAPP ) THEN
						UPDATE YPOBASE SET PBCTA = PBICT WHERE PBIPB = P_CODEOFFRE AND PBTYP = P_TYPE AND PBALX = P_VERSION ;
						DELETE FROM YPOCOUR WHERE PFIPB = P_CODEOFFRE AND PFALX = P_VERSION AND PFTYP = P_TYPE AND PFCTI = 'O' ;

						SET V_NBLIGNE = 0 ;
						SELECT COUNT ( * ) INTO V_NBLIGNE FROM YPOCOUR
						WHERE PFIPB = P_CODEOFFRE AND PFALX = P_VERSION AND PFTYP = P_TYPE AND PFCTI = 'A' ;

						IF ( V_NBLIGNE > 0 ) THEN
							UPDATE YPOCOUR SET PFICT = V_COURTGES
							WHERE PFIPB = P_CODEOFFRE AND PFALX = P_VERSION AND PFTYP = P_TYPE AND PFCTI = 'A' ;
						ELSE
							INSERT INTO YPOCOUR
								( PFIPB , PFALX , PFTYP , PFCTI , PFICT )
							VALUES
								( P_CODEOFFRE , P_VERSION , P_TYPE , 'A' , V_COURTGES ) ;
						END IF ;

					END IF ;
				END IF ;

				FOR LOOPGAR AS FREE_LIST CURSOR FOR
					SELECT KDEID GARID FROM KPGARAN WHERE KDEIPB = P_CODEOFFRE AND KDEALX = P_VERSION AND KDETYP = P_TYPE AND KDEALA != 'B' AND KDEALA != 'C'
				DO
					UPDATE KPGARAP
						SET KDFPRV = 0 , KDFPRA = 0 , KDFPRW = 0 , KDFPRU = '' , KDFTYC = '' , KDFMNT = 0
					WHERE KDFKDEID = GARID ;
				END FOR ;

				IF ( P_TYPE = 'P' ) THEN
					 -- Modif Hors Avn
					DELETE FROM KPVALH
					WHERE KIFTYP = P_TYPE AND KIFIPB = P_CODEOFFRE AND KIFALX = P_VERSION AND KIFAVN = P_AVENANT ;

					 -- GEN
					INSERT INTO KPVALH ( KIFTYP , KIFIPB , KIFALX , KIFAVN , KIFPERI , KIFRSQ , KIFOBJ , KIFFOR , KIFOPT ,
												KIFCRU , KIFCRD , KIFCRH , KIFFEA , KIFFEM , KIFFEJ , KIFCTD , KIFCTU , KIFRUL , KIFRUT )
					SELECT PBTYP , PBIPB , PBALX , PBAVN , 'GEN' , 0 , 0 , 0 , 0 , P_USER , ( P_YEARNOW * 10000 + P_MONTHNOW * 100 + P_DAYNOW ) , P_HOURNOW , PBFEA , PBFEM , PBFEJ , PBCTD , PBCTU , '' , ''
					FROM YPOBASE
					WHERE PBTYP = P_TYPE AND PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBAVN = P_AVENANT ;



					 -- RSQ
					INSERT INTO KPVALH ( KIFTYP , KIFIPB , KIFALX , KIFAVN , KIFPERI , KIFRSQ , KIFOBJ , KIFFOR , KIFOPT ,
												KIFCRU , KIFCRD , KIFCRH , KIFFEA , KIFFEM , KIFFEJ , KIFCTD , KIFCTU , KIFRUL , KIFRUT )
					SELECT PBTYP , PBIPB , PBALX , PBAVN , 'RSQ' , JERSQ , 0 , 0 , 0 , P_USER , ( P_YEARNOW * 10000 + P_MONTHNOW * 100 + P_DAYNOW ) , P_HOURNOW , PBFEA , PBFEM , PBFEJ , PBCTD , PBCTU , JERUL , JERUT
					FROM YPRTRSQ
							LEFT JOIN YPOBASE ON JEIPB = PBIPB AND JEALX = PBALX
					WHERE PBTYP = P_TYPE AND PBIPB = P_CODEOFFRE AND PBALX = P_VERSION AND PBAVN = P_AVENANT ;
				END IF ;

				/* bug 2283 :supprimer la règle (date vide d'un risque prend comme date celle du contrat)  mise en place (EVO : Bug 2070) lors de la validation d'une Affaire*/



				/* SUPPRESSION DE TOUTES LES TABLES DE TRAVAIL */
				DELETE FROM KPOPTDW WHERE KDCIPB = P_CODEOFFRE AND KDCALX = P_VERSION AND KDCTYP = P_TYPE ;
				DELETE FROM KPGARAW WHERE KDEIPB = P_CODEOFFRE AND KDEALX = P_VERSION AND KDETYP = P_TYPE ;
				DELETE FROM KPGARTAW WHERE KDGIPB = P_CODEOFFRE AND KDGALX = P_VERSION AND KDGTYP = P_TYPE ;
				DELETE FROM KPOPTAPW WHERE KDDIPB = P_CODEOFFRE AND KDDALX = P_VERSION AND KDDTYP = P_TYPE ;
			ELSE
				SET V_EXIT = 1 ;
		END CASE ;
ELSE
SET P_ERREUR = 'Impossible d''éditer ou valider une affaire ayant une cible de type RECUP' ;
END IF ;
END P1  ;