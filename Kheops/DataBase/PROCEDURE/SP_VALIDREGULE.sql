CREATE PROCEDURE SP_VALIDREGULE ( 
	IN P_CODECONTRAT CHAR(9) , 
	IN P_VERSION INTEGER , 
	IN P_USER CHAR(10) , 
	IN P_DATENOW INTEGER , 
	IN P_NUMPRIME INTEGER , 
	IN P_REGULEID INTEGER ) 
	LANGUAGE SQL 
	SPECIFIC SP_VALIDREGULE 
	NOT DETERMINISTIC 
	MODIFIES SQL DATA 
	CALLED ON NULL INPUT 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *CHG , 
	CLOSQLCSR = *ENDMOD , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = ZALBINKHEO , 
	DYNDFTCOL = *YES , 
	SQLPATH = 'ZALBINKHEO, ZALBINKMOD' , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	P1 : BEGIN ATOMIC 
  
	DECLARE V_NUMPRIME INTEGER DEFAULT 0 ; 
	DECLARE V_HTCATNAT DECIMAL ( 11 , 2 ) DEFAULT 0 ; 
	DECLARE V_HTHCATNAT DECIMAL ( 11 , 2 ) DEFAULT 0 ; 
	DECLARE V_ATTENTAT DECIMAL ( 11 , 2 ) DEFAULT 0 ; 
	DECLARE V_TOTALTAXE DECIMAL ( 11 , 2 ) DEFAULT 0 ; 
	DECLARE V_TOTALTTC DECIMAL ( 11 , 2 ) DEFAULT 0 ; 
	 
	SET V_NUMPRIME = 0 ; 
	SET V_HTCATNAT = 0 ; 
	SET V_HTHCATNAT = 0 ; 
	SET V_ATTENTAT = 0 ; 
	SET V_TOTALTAXE = 0 ; 
	SET V_TOTALTTC = 0 ; 
  
	SELECT PKIPK , PKKHT , PKCNH , IFNULL ( PLMHT , 0 ) , PKKTX , PKKTT 
		INTO V_NUMPRIME , V_HTCATNAT , V_HTHCATNAT , V_ATTENTAT , V_TOTALTAXE , V_TOTALTTC 
	FROM YPRIMES 
		LEFT JOIN YPRIMGA ON PLIPB = PKIPB AND PLALX = PKALX AND PLTYE = '2' AND PLGAR = 'ATTENT' AND PKIPK = PLIPK 
	WHERE TRIM ( PKIPB ) = TRIM ( P_CODECONTRAT ) AND PKALX = P_VERSION AND PKIPK = P_NUMPRIME ; 
  
	IF ( V_NUMPRIME = 0 ) THEN 
		SET P_NUMPRIME = 0 ; 
		SET V_HTCATNAT = 0 ; 
		SET V_HTHCATNAT = 0 ; 
		SET V_ATTENTAT = 0 ; 
		SET V_TOTALTAXE = 0 ; 
		SET V_TOTALTTC = 0 ;	 
	END IF ; 
	 
	UPDATE KPRGU 
		SET KHWETA = 'V' , KHWMAJU = P_USER , KHWMAJD = P_DATENOW , KHWIPK = P_NUMPRIME , 
			KHWMHT = V_HTCATNAT , KHWCNH = V_HTHCATNAT , KHWGRG = V_ATTENTAT , KHWTTT = V_TOTALTAXE , KHWMTT = V_TOTALTTC 
	WHERE KHWID = P_REGULEID ; 
  
END P1  ; 
  

  

