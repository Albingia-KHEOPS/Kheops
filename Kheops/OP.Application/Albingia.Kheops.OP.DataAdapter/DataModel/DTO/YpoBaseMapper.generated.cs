using Dapper;
using Dapper.FluentMap;
using Dapper.FluentMap.Mapping;
using System;
using System.Collections.Generic;
using System.Data;
using System.Runtime.Serialization;

namespace Albingia.Kheops.OP.DataAdapter.DataModel.DTO {
    public partial class YpoBaseMapper : EntityMap<YpoBase>   {
        public YpoBaseMapper () {
            Map(p => p.Pbipb).ToColumn("PBIPB");
            Map(p => p.Pbalx).ToColumn("PBALX");
            Map(p => p.Pbavn).ToColumn("PBAVN");
            Map(p => p.Pbhin).ToColumn("PBHIN");
            Map(p => p.Pbhia).ToColumn("PBHIA");
            Map(p => p.Pbhim).ToColumn("PBHIM");
            Map(p => p.Pbhij).ToColumn("PBHIJ");
            Map(p => p.Pbhih).ToColumn("PBHIH");
            Map(p => p.Pbhiu).ToColumn("PBHIU");
            Map(p => p.Pbtbr).ToColumn("PBTBR");
            Map(p => p.Pbias).ToColumn("PBIAS");
            Map(p => p.Pbref).ToColumn("PBREF");
            Map(p => p.Pbbra).ToColumn("PBBRA");
            Map(p => p.Pbsbr).ToColumn("PBSBR");
            Map(p => p.Pbcat).ToColumn("PBCAT");
            Map(p => p.Pbict).ToColumn("PBICT");
            Map(p => p.Pbtil).ToColumn("PBTIL");
            Map(p => p.Pbinl).ToColumn("PBINL");
            Map(p => p.Pboct).ToColumn("PBOCT");
            Map(p => p.Pbad1).ToColumn("PBAD1");
            Map(p => p.Pbad2).ToColumn("PBAD2");
            Map(p => p.Pbdep).ToColumn("PBDEP");
            Map(p => p.Pbcpo).ToColumn("PBCPO");
            Map(p => p.Pbvil).ToColumn("PBVIL");
            Map(p => p.Pbpay).ToColumn("PBPAY");
            Map(p => p.Pbsaa).ToColumn("PBSAA");
            Map(p => p.Pbsam).ToColumn("PBSAM");
            Map(p => p.Pbsaj).ToColumn("PBSAJ");
            Map(p => p.Pbsah).ToColumn("PBSAH");
            Map(p => p.Pbapr).ToColumn("PBAPR");
            Map(p => p.Pbapp).ToColumn("PBAPP");
            Map(p => p.Pbmo1).ToColumn("PBMO1");
            Map(p => p.Pbmo2).ToColumn("PBMO2");
            Map(p => p.Pbmo3).ToColumn("PBMO3");
            Map(p => p.Pbcle).ToColumn("PBCLE");
            Map(p => p.Pbant).ToColumn("PBANT");
            Map(p => p.Pbctd).ToColumn("PBCTD");
            Map(p => p.Pbctu).ToColumn("PBCTU");
            Map(p => p.Pbapo).ToColumn("PBAPO");
            Map(p => p.Pbdur).ToColumn("PBDUR");
            Map(p => p.Pbrel).ToColumn("PBREL");
            Map(p => p.Pbrld).ToColumn("PBRLD");
            Map(p => p.Pbatt).ToColumn("PBATT");
            Map(p => p.Pbrmp).ToColumn("PBRMP");
            Map(p => p.Pbvrf).ToColumn("PBVRF");
            Map(p => p.Pbolv).ToColumn("PBOLV");
            Map(p => p.Pbfoa).ToColumn("PBFOA");
            Map(p => p.Pbfom).ToColumn("PBFOM");
            Map(p => p.Pbcou).ToColumn("PBCOU");
            Map(p => p.Pbfoe).ToColumn("PBFOE");
            Map(p => p.Pbdev).ToColumn("PBDEV");
            Map(p => p.Pbrgt).ToColumn("PBRGT");
            Map(p => p.Pbtco).ToColumn("PBTCO");
            Map(p => p.Pbnat).ToColumn("PBNAT");
            Map(p => p.Pbdst).ToColumn("PBDST");
            Map(p => p.Pblie).ToColumn("PBLIE");
            Map(p => p.Pbges).ToColumn("PBGES");
            Map(p => p.Pbsou).ToColumn("PBSOU");
            Map(p => p.Pbori).ToColumn("PBORI");
            Map(p => p.Pbmai).ToColumn("PBMAI");
            Map(p => p.Pbefa).ToColumn("PBEFA");
            Map(p => p.Pbefm).ToColumn("PBEFM");
            Map(p => p.Pbefj).ToColumn("PBEFJ");
            Map(p => p.Pboff).ToColumn("PBOFF");
            Map(p => p.Pbofv).ToColumn("PBOFV");
            Map(p => p.Pbipa).ToColumn("PBIPA");
            Map(p => p.Pbala).ToColumn("PBALA");
            Map(p => p.Pbecm).ToColumn("PBECM");
            Map(p => p.Pbecj).ToColumn("PBECJ");
            Map(p => p.Pbpcv).ToColumn("PBPCV");
            Map(p => p.Pbcta).ToColumn("PBCTA");
            Map(p => p.Pbnrq).ToColumn("PBNRQ");
            Map(p => p.Pbnpl).ToColumn("PBNPL");
            Map(p => p.Pbper).ToColumn("PBPER");
            Map(p => p.Pbavc).ToColumn("PBAVC");
            Map(p => p.Pbava).ToColumn("PBAVA");
            Map(p => p.Pbavm).ToColumn("PBAVM");
            Map(p => p.Pbavj).ToColumn("PBAVJ");
            Map(p => p.Pbrsc).ToColumn("PBRSC");
            Map(p => p.Pbrsa).ToColumn("PBRSA");
            Map(p => p.Pbrsm).ToColumn("PBRSM");
            Map(p => p.Pbrsj).ToColumn("PBRSJ");
            Map(p => p.Pbmer).ToColumn("PBMER");
            Map(p => p.Pbeta).ToColumn("PBETA");
            Map(p => p.Pbsit).ToColumn("PBSIT");
            Map(p => p.Pbsta).ToColumn("PBSTA");
            Map(p => p.Pbstm).ToColumn("PBSTM");
            Map(p => p.Pbstj).ToColumn("PBSTJ");
            Map(p => p.Pbstq).ToColumn("PBSTQ");
            Map(p => p.Pbedt).ToColumn("PBEDT");
            Map(p => p.Pbtac).ToColumn("PBTAC");
            Map(p => p.Pbtaa).ToColumn("PBTAA");
            Map(p => p.Pbtam).ToColumn("PBTAM");
            Map(p => p.Pbtaj).ToColumn("PBTAJ");
            Map(p => p.Pbcru).ToColumn("PBCRU");
            Map(p => p.Pbcra).ToColumn("PBCRA");
            Map(p => p.Pbcrm).ToColumn("PBCRM");
            Map(p => p.Pbcrj).ToColumn("PBCRJ");
            Map(p => p.Pbmju).ToColumn("PBMJU");
            Map(p => p.Pbmja).ToColumn("PBMJA");
            Map(p => p.Pbmjm).ToColumn("PBMJM");
            Map(p => p.Pbmjj).ToColumn("PBMJJ");
            Map(p => p.Pbdeu).ToColumn("PBDEU");
            Map(p => p.Pbdea).ToColumn("PBDEA");
            Map(p => p.Pbdem).ToColumn("PBDEM");
            Map(p => p.Pbdej).ToColumn("PBDEJ");
            Map(p => p.Pbctp).ToColumn("PBCTP");
            Map(p => p.Pbefh).ToColumn("PBEFH");
            Map(p => p.Pbfea).ToColumn("PBFEA");
            Map(p => p.Pbfem).ToColumn("PBFEM");
            Map(p => p.Pbfej).ToColumn("PBFEJ");
            Map(p => p.Pbfeh).ToColumn("PBFEH");
            Map(p => p.Pbstp).ToColumn("PBSTP");
            Map(p => p.Pbnva).ToColumn("PBNVA");
            Map(p => p.Pbfec).ToColumn("PBFEC");
            Map(p => p.Pbpor).ToColumn("PBPOR");
            Map(p => p.Pbcon).ToColumn("PBCON");
            Map(p => p.Pbttr).ToColumn("PBTTR");
            Map(p => p.Pbavk).ToColumn("PBAVK");
            Map(p => p.Pbadh).ToColumn("PBADH");
            Map(p => p.Pbstf).ToColumn("PBSTF");
            Map(p => p.Pbpim).ToColumn("PBPIM");
            Map(p => p.Pbin5).ToColumn("PBIN5");
            Map(p => p.Pbork).ToColumn("PBORK");
            Map(p => p.Pbhty).ToColumn("PBHTY");
            Map(p => p.Pbhna).ToColumn("PBHNA");
            Map(p => p.Pbhdt).ToColumn("PBHDT");
            Map(p => p.Pbhza).ToColumn("PBHZA");
            Map(p => p.Pbtyp).ToColumn("PBTYP");
        }
    }
  

}
