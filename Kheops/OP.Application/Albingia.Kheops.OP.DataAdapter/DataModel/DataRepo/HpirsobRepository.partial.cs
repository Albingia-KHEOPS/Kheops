using Albingia.Kheops.OP.Domain.InfosSpecifiques;
using Dapper;
using System.Collections.Generic;
using System.Linq;

namespace Albingia.Kheops.OP.DataAdapter.DataModel.Repository {

    public partial class HpirsobRepository {
        const string select_keys = @"
SELECT DISTINCT IPB , ALX , AVN , PBTYP TYP , PBBRA BRANCHE , SECTION  , IFNULL( NULLIF( KFARSQ , 0 ) , KDDRSQ ) RSQ, KFAOBJ OBJ, OPTION, FORMULE 
FROM ( 
	SELECT KFAIPB IPB , KFAALX ALX , KFAAVN AVN , KFARSQ, KFAOBJ, 0 OPTION, 0 FORMULE, 'RISQUES' SECTION FROM HPIRSOB WHERE KFAOBJ = 0 UNION 
	SELECT KFAIPB IPB , KFAALX ALX , KFAAVN AVN , KFARSQ, KFAOBJ, 0 OPTION, 0 FORMULE, 'OBJETS' SECTION FROM HPIRSOB WHERE KFAOBJ > 0 UNION 
	SELECT KFDIPB IPB , KFDALX ALX , KFDAVN AVN , 0 KFARSQ, 0 KFAOBJ, KFDOPT OPTION, KFDFOR FORMULE, 'GARANTIES' SECTION FROM HPIRSGA 
) T 
INNER JOIN ( 
	SELECT PBIPB , PBALX , PBAVN , PBTYP , PBBRA FROM YHPBASE 
	WHERE ( PBIPB, PBALX, PBAVN ) IN ( SELECT KFAIPB , KFAALX , KFAAVN FROM KPIRSOB UNION ALL SELECT KFDIPB , KFDALX , KFDAVN FROM HPIRSGA ) 
    AND ( PBIPB , PBALX , PBAVN ) NOT IN ( SELECT KKCIPB , KKCALX , KKCAVN FROM HPISVAL ) 
) PO 
ON ( T.IPB , T.ALX , T.AVN ) = ( PBIPB , PBALX , PBAVN ) 
LEFT JOIN HPOPTAP ON ( PBIPB, PBALX, PBAVN, T.FORMULE) = (KDDIPB, KDDALX , KDDAVN , KDDFOR) ";

        public IEnumerable<SectionIS> SelectHPIR() {
            return this.connection.Query<SectionIS>(select_keys).ToList();
        }
    }
}
